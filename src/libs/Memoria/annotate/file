Compiling annotate.C
# 1 "annotate.C"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "annotate.C"
# 11 "annotate.C"
# 1 "../../../libs/support/misc/general.h" 1
# 115 "../../../libs/support/misc/general.h"
typedef bool Boolean;







typedef long Generic;



typedef int SmallGeneric;
typedef enum { Unordered, PreOrder, PostOrder,
        ReversePreOrder, ReversePostOrder, PreAndPostOrder } TraversalOrder;
# 166 "../../../libs/support/misc/general.h"
typedef void(*PFV) ();
typedef int(*PFI) ();
typedef char*(*PFS) ();
typedef Boolean(*PFB) ();
typedef Generic(*PFG) ();
# 179 "../../../libs/support/misc/general.h"
extern "C" int max (int a, int b);


extern "C" int min (int a, int b);


extern "C" void die_with_message (char *format, ...);
# 12 "annotate.C" 2
# 1 "../../../libs/Memoria/include/mh.h" 1
# 21 "../../../libs/Memoria/include/mh.h"
# 1 "../../../libs/frontEnd/ast/ast.h" 1
# 21 "../../../libs/frontEnd/ast/ast.h"
typedef unsigned long AST_INDEX;





extern AST_INDEX ast_null_node;



extern struct AsttabStruct *asttab;
# 22 "../../../libs/Memoria/include/mh.h" 2


# 1 "../../../libs/support/lists/list.h" 1
# 13 "../../../libs/support/lists/list.h"
struct UtilList_struct;

typedef struct UtilNode_struct {
    struct UtilNode_struct *next;
    struct UtilNode_struct *prev;
    Generic atom;
    struct UtilList_struct *up;
} UtilNode;

typedef struct UtilList_struct {
    UtilNode *head;
    UtilNode *tail;
    Generic atom;
} UtilList;

extern "C" UtilNode * util_node_alloc (Generic atom, char *who);
# 38 "../../../libs/support/lists/list.h"
extern "C" UtilList * util_list_alloc (Generic atom, char *who);






extern "C" UtilNode * util_node_init (UtilNode *node, Generic atom);
# 55 "../../../libs/support/lists/list.h"
extern "C" UtilList * util_list_init (UtilList *list, Generic atom);
# 65 "../../../libs/support/lists/list.h"
extern "C" UtilNode * util_head (UtilList *list);





extern "C" UtilNode * util_tail (UtilList *list);





extern "C" UtilList * util_list (UtilNode *node);





extern "C" Generic util_list_atom (UtilList *list);





extern "C" Generic util_node_atom (UtilNode *node);





extern "C" UtilNode * util_next (UtilNode *node);





extern "C" UtilNode * util_prev (UtilNode *node);






extern "C" void util_push (UtilNode *node, UtilList *list);
# 117 "../../../libs/support/lists/list.h"
extern "C" void util_append (UtilList *list, UtilNode *node);
# 126 "../../../libs/support/lists/list.h"
extern "C" void util_insert_after (UtilNode *afternode, UtilNode *node);
# 138 "../../../libs/support/lists/list.h"
extern "C" void util_insert_before (UtilNode *node, UtilNode *beforenode);
# 149 "../../../libs/support/lists/list.h"
extern "C" void util_join (UtilList *res, UtilList *first, UtilList *second);
# 164 "../../../libs/support/lists/list.h"
extern "C" void util_pluck (UtilNode *to_pluck);





extern "C" Boolean util_list_empty (UtilList *list);





extern "C" UtilNode * util_pop (UtilList *list);







extern "C" void util_list_free (UtilList *list);





extern "C" void util_free_node (UtilNode *node);





extern "C" void util_free_node_and_atom (UtilNode *node);







extern "C" void util_free_nodes (UtilList *list);





extern "C" void util_free_nodes_and_atoms (UtilList *list);





extern "C" Boolean util_in_list (UtilNode *node, UtilList *list);







extern "C" Boolean util_good_list (UtilList *list);
# 237 "../../../libs/support/lists/list.h"
typedef int(*util_apply_func) (UtilNode *node);
extern "C" void util_apply (UtilList *list, util_apply_func func);







typedef int(*util_apply1_func) (UtilNode *node, Generic arg1)
                                ;
extern "C" void util_apply_1 (UtilList *list, util_apply1_func func, Generic arg1)
                                                       ;
# 258 "../../../libs/support/lists/list.h"
typedef int(*util_apply2_func) (UtilNode *node, Generic arg1, Generic arg2)
                                              ;
extern "C" void util_apply_2 (UtilList *list, util_apply2_func func, Generic arg1, Generic arg2)
                                                                     ;
# 271 "../../../libs/support/lists/list.h"
typedef UtilNode*(*util_match_func) (UtilNode *node)
                  ;
extern "C" UtilNode * util_match (UtilList *list, util_match_func func)
                                        ;
# 283 "../../../libs/support/lists/list.h"
typedef UtilNode*(*util_match1_func) (UtilNode *node, Generic arg1)
                                ;
extern "C" UtilNode * util_match_1 (UtilList *list, util_match1_func func, Generic arg1)
                                                       ;
# 25 "../../../libs/Memoria/include/mh.h" 2


# 1 "../../../libs/Memoria/include/cgen_set.h" 1
# 22 "../../../libs/Memoria/include/cgen_set.h"
# 1 "../../../libs/support/memMgmt/Arena.h" 1
# 26 "../../../libs/support/memMgmt/Arena.h"
  typedef struct arena_chunk {
    struct arena_chunk *next;
    char *limit;
    char *avail;
   } Arena, *Arenas;

class arena_type {

  Arenas *arena;
  Arena *first;
  Arenas free_arenas;
  int num_arenas;

  void *allocate(int Size, int WhichArena);

public:

  arena_type(int NumArenas);
  ~arena_type();
  void arena_deallocate(int WhichArena);
  void *arena_alloc_mem(int Size, int WhichArena);
  void *arena_alloc_mem_clear(int Size, int WhichArena);
 };

extern "C" void arena_deallocate (int WhichArena);
extern "C" void * arena_alloc_mem (int Size,int WhichArena);
extern "C" void * arena_alloc_mem_clear (int Size,int WhichArena);
# 23 "../../../libs/Memoria/include/cgen_set.h" 2


# 1 "../../../libs/Memoria/include/global.h" 1
# 22 "../../../libs/Memoria/include/global.h"
typedef char Bool;
# 26 "../../../libs/Memoria/include/cgen_set.h" 2






typedef struct set {
    int words;
    int word[1];
} SetBase, *Set;


extern "C" Set ut_create_set (arena_type *ar,int n,int size);
extern "C" Bool ut_set_is_empty (Set s);
extern "C" void ut_union121 (Set s1,Set s2);
extern "C" void ut_intersect121 (Set s1,Set s2);
extern "C" void ut_difference121 (Set s1,Set s2);
extern "C" void ut_complement (Set s);
extern "C" void ut_set1u2i3 (Set s1, Set s2, Set s3);
# 69 "../../../libs/Memoria/include/cgen_set.h"
extern "C" void ut_add_number (Set s, int n);
extern "C" void ut_delete_number (Set s, int n);
extern "C" Bool ut_member_number (Set s, int n);
extern "C" void ut_clear_set (Set s);
extern "C" void ut_copy12 (Set s1, Set s2);
extern "C" Bool ut_sets_differ (Set s1, Set s2);
# 28 "../../../libs/Memoria/include/mh.h" 2


# 1 "../../../libs/frontEnd/fortTree/fortsym.h" 1
# 19 "../../../libs/frontEnd/fortTree/fortsym.h"
# 1 "../../../libs/support/tables/cNameValueTable.h" 1
# 133 "../../../libs/support/tables/cNameValueTable.h"
# 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h" 1 3 4
# 134 "../../../libs/support/tables/cNameValueTable.h" 2
# 1 "/usr/include/x86_64-linux-gnu/sys/types.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 424 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 1 3 4
# 427 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 428 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 429 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 425 "/usr/include/features.h" 2 3 4
# 448 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 2 3 4
# 449 "/usr/include/features.h" 2 3 4
# 26 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


# 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
extern "C" {

# 1 "/usr/include/x86_64-linux-gnu/bits/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;







typedef long int __quad_t;
typedef unsigned long int __u_quad_t;







typedef long int __intmax_t;
typedef unsigned long int __uintmax_t;
# 130 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/typesizes.h" 1 3 4
# 131 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;




typedef int __sig_atomic_t;
# 30 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;



typedef __ino_t ino_t;






typedef __ino64_t ino64_t;




typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;






typedef __off64_t off64_t;




typedef __pid_t pid_t;





typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;




# 1 "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h" 1 3 4






typedef __clock_t clock_t;
# 128 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h" 1 3 4






typedef __clockid_t clockid_t;
# 130 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 1 3 4






typedef __time_t time_t;
# 131 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h" 1 3 4






typedef __timer_t timer_t;
# 132 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef __useconds_t useconds_t;



typedef __suseconds_t suseconds_t;





# 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
# 216 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 146 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;




# 1 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3 4
typedef __int8_t int8_t;
typedef __int16_t int16_t;
typedef __int32_t int32_t;
typedef __int64_t int64_t;
# 157 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 178 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 194 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 36 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endian.h" 1 3 4
# 37 "/usr/include/endian.h" 2 3 4
# 60 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 29 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 2 3 4






# 1 "/usr/include/x86_64-linux-gnu/bits/byteswap-16.h" 1 3 4
# 36 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 2 3 4
# 44 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
static __inline unsigned int
__bswap_32 (unsigned int __bsx)
{
  return __builtin_bswap32 (__bsx);
}
# 108 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{
  return __builtin_bswap64 (__bsx);
}
# 61 "/usr/include/endian.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 1 3 4
# 32 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3 4
static __inline __uint16_t
__uint16_identity (__uint16_t __x)
{
  return __x;
}

static __inline __uint32_t
__uint32_identity (__uint32_t __x)
{
  return __x;
}

static __inline __uint64_t
__uint64_identity (__uint64_t __x)
{
  return __x;
}
# 62 "/usr/include/endian.h" 2 3 4
# 195 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/sys/select.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/select.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/select.h" 2 3 4
# 31 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 1 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 1 3 4




typedef struct
{
  unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
} __sigset_t;
# 5 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 2 3 4


typedef __sigset_t sigset_t;
# 34 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 1 3 4







struct timeval
{
  __time_t tv_sec;
  __suseconds_t tv_usec;
};
# 38 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 1 3 4







struct timespec
{
  __time_t tv_sec;
  __syscall_slong_t tv_nsec;
};
# 40 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4
# 49 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
typedef long int __fd_mask;
# 59 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
typedef struct
  {



    __fd_mask fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];





  } fd_set;






typedef __fd_mask fd_mask;
# 91 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern "C" {
# 101 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 113 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);
# 126 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
}
# 198 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4







# 1 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 1 3 4
# 41 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/sysmacros.h" 1 3 4
# 42 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 2 3 4
# 71 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3 4
extern "C" {

extern unsigned int gnu_dev_major (__dev_t __dev) throw () __attribute__ ((__const__));
extern unsigned int gnu_dev_minor (__dev_t __dev) throw () __attribute__ ((__const__));
extern __dev_t gnu_dev_makedev (unsigned int __major, unsigned int __minor) throw () __attribute__ ((__const__));
# 85 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3 4
}
# 206 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4






typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 246 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __blkcnt64_t blkcnt64_t;
typedef __fsblkcnt64_t fsblkcnt64_t;
typedef __fsfilcnt64_t fsfilcnt64_t;





# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 1 3 4
# 77 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 1 3 4
# 21 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 2 3 4
# 65 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3 4
struct __pthread_rwlock_arch_t
{
  unsigned int __readers;
  unsigned int __writers;
  unsigned int __wrphase_futex;
  unsigned int __writers_futex;
  unsigned int __pad3;
  unsigned int __pad4;

  int __cur_writer;
  int __shared;
  signed char __rwelision;




  unsigned char __pad1[7];


  unsigned long int __pad2;


  unsigned int __flags;
# 99 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3 4
};
# 78 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4




typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;
# 118 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
struct __pthread_mutex_s
{
  int __lock ;
  unsigned int __count;
  int __owner;

  unsigned int __nusers;



  int __kind;
 




  short __spins; short __elision;
  __pthread_list_t __list;
# 145 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
 
};




struct __pthread_cond_s
{
  __extension__ union
  {
    __extension__ unsigned long long int __wseq;
    struct
    {
      unsigned int __low;
      unsigned int __high;
    } __wseq32;
  };
  __extension__ union
  {
    __extension__ unsigned long long int __g1_start;
    struct
    {
      unsigned int __low;
      unsigned int __high;
    } __g1_start32;
  };
  unsigned int __g_refs[2] ;
  unsigned int __g_size[2];
  unsigned int __g1_orig_size;
  unsigned int __wrefs;
  unsigned int __g_signals[2];
};
# 24 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 2 3 4



typedef unsigned long int pthread_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;


union pthread_attr_t
{
  char __size[56];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;




typedef union
{
  struct __pthread_mutex_s __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;


typedef union
{
  struct __pthread_cond_s __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;





typedef union
{
  struct __pthread_rwlock_arch_t __data;
  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 255 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


}
# 135 "../../../libs/support/tables/cNameValueTable.h" 2
# 143 "../../../libs/support/tables/cNameValueTable.h"

# 143 "../../../libs/support/tables/cNameValueTable.h"
typedef Generic cNameValueTable;



typedef int(*NameCompareCallback) (Generic name1, Generic name2);

typedef unsigned int(*NameHashFunctCallback) (Generic name, unsigned int size);

typedef void(*NameValueTableForAllCallback) (Generic name, Generic value, Generic extraArg)

                                                                                 ;

typedef void(*NameValueTableForAllCallbackV) (Generic name, Generic value, ...);




extern "C" cNameValueTable NameValueTableAlloc (unsigned int initialSlots, NameCompareCallback UserNameCompare, NameHashFunctCallback UserHashFunct)

                                                                                    ;

extern "C" void NameValueTableFree (cNameValueTable nvt);

extern "C" Boolean NameValueTableAddPair (cNameValueTable nvt, Generic name, Generic value, Generic* oldValue)


                                                            ;

extern "C" Boolean NameValueTableDeletePair (cNameValueTable nvt, Generic name, Generic* nameInTable, Generic* valueInTable)


                                                                   ;

extern "C" Boolean NameValueTableQueryPair (cNameValueTable nvt, Generic name, Generic* value)

                                                           ;

extern "C" unsigned int NameValueTableNumPairs (cNameValueTable nvt);


extern "C" void NameValueTableForAll (cNameValueTable nvt, NameValueTableForAllCallback UserForAll, Generic extraArg)

                                                       ;

extern "C" void NameValueTableForAllV (cNameValueTable nvt, NameValueTableForAllCallbackV UserForAll, ...)
                                                                                     ;

extern "C" int NameValueTableIntCompare (Generic intKey1, Generic intKey2);

extern "C" unsigned int NameValueTableIntHash (Generic intKey, unsigned int size);
# 20 "../../../libs/frontEnd/fortTree/fortsym.h" 2



# 1 "../../../include/rn_varargs.h" 1
# 24 "../../../libs/frontEnd/fortTree/fortsym.h" 2



# 1 "../../../libs/support/tables/symtable.h" 1
# 13 "../../../libs/support/tables/symtable.h"
typedef struct SymTable_internal_structure *SymTable;

extern "C" SymTable SymInit (unsigned int size);
extern "C" void SymKill (SymTable ip);

extern "C" int SymMaxIndex (SymTable ip);
extern "C" int SymIndex (SymTable ip, char *name);
extern "C" int SymQueryIndex (SymTable ip, char *name);

extern "C" Generic SymGetFieldByIndex (SymTable ip, int index, char *field);
extern "C" Generic SymGetField (SymTable ip, char *name, char *field);

extern "C" void SymPutFieldByIndex (SymTable ip, int index, char *field, Generic val);
extern "C" void SymPutField (SymTable ip, char *name, char *field, Generic val);

typedef void(*SymCleanupFunc) (Generic val);
extern "C" void SymInitField (SymTable ip, char *field, Generic val, SymCleanupFunc cleanup);
extern "C" void SymKillField (SymTable ip, char *field);

extern "C" int SymFieldExists (SymTable ip, char *field);

typedef void(*SymIteratorFunc) (SymTable ip, int index, Generic extra_arg);
extern "C" void SymForAll (SymTable ip, SymIteratorFunc func, Generic extra_arg);

extern "C" void SymDumpEntryByIndex (SymTable ip, int index);
extern "C" void SymDump (SymTable ip);
# 28 "../../../libs/frontEnd/fortTree/fortsym.h" 2
# 44 "../../../libs/frontEnd/fortTree/fortsym.h"
typedef struct TableDescriptor_t *TableDescriptor;
typedef struct SymDescriptor_t *SymDescriptor;

typedef int fst_index_t;


typedef struct _EquivalenceClass {
  unsigned int members;
  fst_index_t member[1];
} EquivalenceClass;

typedef enum _ArrayBoundEnum {
  dim_error, star, constant, symbolic_expn_ast_index
  } ArrayBoundEnum;

typedef union _ArrayBoundVal {
  int const_val;
  AST_INDEX ast;
} ArrayBoundVal;

typedef struct _ArrayBound {
  struct _ArrayBoundS {
    ArrayBoundEnum type;
    ArrayBoundVal value;
  } lb, ub;
} ArrayBound;



extern "C" void fst_Init (void);
extern "C" void fst_DumpModuleTables (TableDescriptor td);
extern "C" unsigned int fst_NumEntryPoints (TableDescriptor td);
extern "C" Boolean SymDescriptorHashTableAddEntryPoint (cNameValueTable SubPgmHt, char* proc, SymDescriptor d)
                                                               ;
extern "C" void SymDescriptorFree (SymDescriptor p);
extern "C" void SymDescriptorInitializeImplicits (SymDescriptor p);
extern "C" void TableDescriptorHashTableFree (TableDescriptor td);
extern "C" void TableDescriptorHashTableClear (TableDescriptor td);





extern "C" fst_index_t fst_Index (SymDescriptor d, char *name);
extern "C" fst_index_t fst_QueryIndex (SymDescriptor d, char *name);
extern "C" fst_index_t fst_MaxIndex (SymDescriptor d);

extern "C" Generic fst_GetFieldByIndex (SymDescriptor d, fst_index_t index, char *field)
                                                   ;
extern "C" Generic fst_GetField (SymDescriptor d, char *name, char *field)
                                            ;

extern "C" void fst_PutFieldByIndex (SymDescriptor d, fst_index_t index, char *field, Generic value)
                                                                  ;
extern "C" void fst_PutField (SymDescriptor d, char *name, char* field, Generic value)
                                                                  ;

extern "C" void fst_InitField (SymDescriptor d, char *field, Generic init_value, SymCleanupFunc cleanup_fn)
                                                                               ;
extern "C" void fst_KillField (SymDescriptor d, char *field);



typedef void(*fst_ForAllCallbackV) (SymDescriptor d, fst_index_t index, ...)

          ;

typedef void(*fst_ForAllCallback) (SymDescriptor d, fst_index_t index, Generic extra_arg)

                        ;

extern "C" void fst_ForAllV (SymDescriptor d, fst_ForAllCallbackV func, ...)
                                      ;

extern "C" void fst_ForAll (SymDescriptor d, fst_ForAllCallback func, Generic extra_arg)
                         ;

extern "C" Boolean fst_bound_is_const_ub (ArrayBound a);
extern "C" Boolean fst_bound_is_const_lb (ArrayBound a);
# 132 "../../../libs/frontEnd/fortTree/fortsym.h"
extern "C" EquivalenceClass * fst_Symbol_Offset_Size_To_VarSymbols (SymDescriptor d, fst_index_t leader, int offset, int size)

           ;
extern "C" void fst_Symbol_To_EquivLeader_Offset_Size (SymDescriptor d, fst_index_t index, fst_index_t* leader, int* offset, unsigned int* size)

                            ;

extern "C" Boolean entry_name_symdesc_name_To_leader_offset_size_vtype (char *entry_name, SymDescriptor d, char *name, char **leader, int *offset, int *size, unsigned int *vtype)

                                        ;

extern "C" Boolean fst_EquivSuperClassByIndex (SymDescriptor d, fst_index_t var, fst_index_t *first, int *length)
                                           ;


extern "C" void fst_Dump (SymDescriptor d);


extern "C" void fst_Dump_Symbol (SymDescriptor d, fst_index_t index);



extern "C" int evalConstantIntExpr (SymDescriptor d, AST_INDEX expr, int *value)
                                                ;

extern "C" int fastEvalConstantIntExpr (SymDescriptor d, AST_INDEX expr, int* value);
# 31 "../../../libs/Memoria/include/mh.h" 2


# 1 "../../../libs/Memoria/include/FloatList.h" 1
# 10 "../../../libs/Memoria/include/FloatList.h"
# 1 "../../../libs/support/lists/SinglyLinkedList.h" 1
# 30 "../../../libs/support/lists/SinglyLinkedList.h"
class SinglyLinkedListEntry {
  SinglyLinkedListEntry *next;
public:

  SinglyLinkedListEntry();




  virtual ~SinglyLinkedListEntry();


  SinglyLinkedListEntry *Next();
  void LinkSuccessor(SinglyLinkedListEntry *e);
};

class SinglyLinkedList {
  SinglyLinkedListEntry *head, *tail;
  int count;
public:

  SinglyLinkedList();




  virtual ~SinglyLinkedList();


  SinglyLinkedListEntry *First();
  SinglyLinkedListEntry *Last();
  unsigned int Count();


  void Append(SinglyLinkedListEntry *e);
  void Push(SinglyLinkedListEntry *e);
  void Delete(SinglyLinkedListEntry *e);
  SinglyLinkedListEntry *Pop();
};


class SinglyLinkedListIterator {
  SinglyLinkedListEntry *current_entry;
  SinglyLinkedListEntry *first;
public:
  SinglyLinkedListIterator(SinglyLinkedList *l);
  SinglyLinkedListIterator(SinglyLinkedList &l);

  void operator ++();
  SinglyLinkedListEntry *Current();
  void Reset();
};
# 11 "../../../libs/Memoria/include/FloatList.h" 2

class FloatListEntry : public SinglyLinkedListEntry {

  float value;

public:

  FloatListEntry(float f) {value = f;};
  float GetValue() {return value;};
  void IncrementValue() {value += 1.0;};
  void AddValue(float f) {value += f;};

 };

class FloatList : public SinglyLinkedList {
public:
  void append_entry(float f)
    {
     FloatListEntry *e = new FloatListEntry(f);
     SinglyLinkedList::Append(e);
    };
  FloatListEntry *first_entry()
    {return (FloatListEntry *) SinglyLinkedList::First();};
  FloatListEntry *last_entry()
    {return (FloatListEntry *) SinglyLinkedList::Last();};
  void free_head()
    { Delete(SinglyLinkedList::First());};
 };
# 34 "../../../libs/Memoria/include/mh.h" 2


# 1 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dp.h" 1
# 18 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dp.h"
# 1 "../../../libs/graphicInterface/support/graphics/point.h" 1
# 16 "../../../libs/graphicInterface/support/graphics/point.h"
typedef struct {
 int x;
 int y;
  } Point;
extern Point Origin;
extern Point UnusedPoint;

extern "C" int xPoint (Point p);



extern "C" int yPoint (Point p);



extern "C" Point makePoint (int x, int y);



extern "C" Point transPoint (Point p, Point inc);



extern "C" Point subPoint (Point p, Point diff);



extern "C" Boolean equalPoint (Point p1, Point p2);
# 19 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dp.h" 2


# 1 "../../../libs/support/stacks/xstack.h" 1
# 15 "../../../libs/support/stacks/xstack.h"
struct stack_struct;
typedef struct stack_struct *Stack;

typedef Generic*(*stack_on_func) (char*, char*);

extern "C" Stack stack_create (int eltsize);





extern "C" void stack_push (Stack stack, Generic *elt);




extern "C" Boolean stack_pop (Stack stack, Generic *elt);





extern "C" Boolean stack_get (Stack stack, Generic *elt, int depth);






extern "C" Boolean stack_set (Stack stack, Generic *elt, int depth);







extern "C" int stack_depth (Stack stack);






extern "C" int * stack_addr (Stack stack, int depth);
# 68 "../../../libs/support/stacks/xstack.h"
extern "C" int * stack_on (Stack stack, Generic *elt, stack_on_func eq)
                                               ;






extern "C" void stack_destroy (Stack stack);
# 22 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dp.h" 2






# 1 "../../../libs/support/database/context.h" 1
# 11 "../../../libs/support/database/context.h"
# 1 "../../../libs/support/database/newdatabase.h" 1
# 13 "../../../libs/support/database/newdatabase.h"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 28 "/usr/include/stdio.h" 2 3 4


# 29 "/usr/include/stdio.h" 3 4
extern "C" {



# 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
# 34 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h" 1 3 4



struct _IO_FILE;
typedef struct _IO_FILE __FILE;
# 37 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h" 1 3 4



struct _IO_FILE;


typedef struct _IO_FILE FILE;
# 38 "/usr/include/stdio.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/libio.h" 1 3 4
# 35 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/_G_config.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
# 20 "/usr/include/x86_64-linux-gnu/bits/_G_config.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 1 3 4
# 13 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3 4
typedef struct
{
  int __count;
  union
  {
    unsigned int __wch;
    char __wchb[4];
  } __value;
} __mbstate_t;
# 22 "/usr/include/x86_64-linux-gnu/bits/_G_config.h" 2 3 4




typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 36 "/usr/include/x86_64-linux-gnu/bits/libio.h" 2 3 4
# 149 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;




typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 177 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 245 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 293 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
  __off64_t _offset;







  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;

  size_t __pad5;
  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};





struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 337 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);




typedef __io_read_fn cookie_read_function_t;
typedef __io_write_fn cookie_write_function_t;
typedef __io_seek_fn cookie_seek_function_t;
typedef __io_close_fn cookie_close_function_t;


typedef struct
{
  __io_read_fn *read;
  __io_write_fn *write;
  __io_seek_fn *seek;
  __io_close_fn *close;
} _IO_cookie_io_functions_t;
typedef _IO_cookie_io_functions_t cookie_io_functions_t;

struct _IO_cookie_file;


extern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,
        void *__cookie, _IO_cookie_io_functions_t __fns);




extern "C" {


extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 433 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) throw ();
extern int _IO_ferror (_IO_FILE *__fp) throw ();

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) throw ();
extern void _IO_funlockfile (_IO_FILE *) throw ();
extern int _IO_ftrylockfile (_IO_FILE *) throw ();
# 462 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) throw ();
# 524 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
}
# 42 "/usr/include/stdio.h" 2 3 4




typedef __gnuc_va_list va_list;
# 78 "/usr/include/stdio.h" 3 4
typedef _G_fpos_t fpos_t;




typedef _G_fpos64_t fpos64_t;
# 131 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdio_lim.h" 1 3 4
# 132 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;






extern int remove (const char *__filename) throw ();

extern int rename (const char *__old, const char *__new) throw ();



extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) throw ();







extern FILE *tmpfile (void) ;
# 169 "/usr/include/stdio.h" 3 4
extern FILE *tmpfile64 (void) ;



extern char *tmpnam (char *__s) throw () ;




extern char *tmpnam_r (char *__s) throw () ;
# 190 "/usr/include/stdio.h" 3 4
extern char *tempnam (const char *__dir, const char *__pfx)
     throw () __attribute__ ((__malloc__)) ;







extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);
# 213 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 223 "/usr/include/stdio.h" 3 4
extern int fcloseall (void);
# 232 "/usr/include/stdio.h" 3 4
extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 256 "/usr/include/stdio.h" 3 4
extern FILE *fopen64 (const char *__restrict __filename,
        const char *__restrict __modes) ;
extern FILE *freopen64 (const char *__restrict __filename,
   const char *__restrict __modes,
   FILE *__restrict __stream) ;




extern FILE *fdopen (int __fd, const char *__modes) throw () ;





extern FILE *fopencookie (void *__restrict __magic_cookie,
     const char *__restrict __modes,
     _IO_cookie_io_functions_t __io_funcs) throw () ;




extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  throw () ;




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) throw () ;





extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) throw ();



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) throw ();




extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) throw ();


extern void setlinebuf (FILE *__stream) throw ();







extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) throw ();





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) throw ();



extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 3, 0)));





extern int vasprintf (char **__restrict __ptr, const char *__restrict __f,
        __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 2, 0))) ;
extern int __asprintf (char **__restrict __ptr,
         const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3))) ;
extern int asprintf (char **__restrict __ptr,
       const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3))) ;




extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));







extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) throw ();
# 420 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__scanf__, 2, 0)));
# 477 "/usr/include/stdio.h" 3 4
extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);
# 495 "/usr/include/stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 506 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);
# 517 "/usr/include/stdio.h" 3 4
extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);
# 537 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);







extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 587 "/usr/include/stdio.h" 3 4
extern char *fgets_unlocked (char *__restrict __s, int __n,
        FILE *__restrict __stream) ;
# 603 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) ;







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) ;







extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);
# 662 "/usr/include/stdio.h" 3 4
extern int fputs_unlocked (const char *__restrict __s,
      FILE *__restrict __stream);
# 673 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);







extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);
# 707 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) ;
# 731 "/usr/include/stdio.h" 3 4
extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 750 "/usr/include/stdio.h" 3 4
extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);
extern __off64_t ftello64 (FILE *__stream) ;
extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);
extern int fsetpos64 (FILE *__stream, const fpos64_t *__pos);



extern void clearerr (FILE *__stream) throw ();

extern int feof (FILE *__stream) throw () ;

extern int ferror (FILE *__stream) throw () ;



extern void clearerr_unlocked (FILE *__stream) throw ();
extern int feof_unlocked (FILE *__stream) throw () ;
extern int ferror_unlocked (FILE *__stream) throw () ;







extern void perror (const char *__s);





# 1 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 1 3 4
# 26 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern const char *const sys_errlist[];


extern int _sys_nerr;
extern const char *const _sys_errlist[];
# 782 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) throw () ;




extern int fileno_unlocked (FILE *__stream) throw () ;
# 800 "/usr/include/stdio.h" 3 4
extern FILE *popen (const char *__command, const char *__modes) ;





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) throw ();





extern char *cuserid (char *__s);




struct obstack;


extern int obstack_printf (struct obstack *__restrict __obstack,
      const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3)));
extern int obstack_vprintf (struct obstack *__restrict __obstack,
       const char *__restrict __format,
       __gnuc_va_list __args)
     throw () __attribute__ ((__format__ (__printf__, 2, 0)));







extern void flockfile (FILE *__stream) throw ();



extern int ftrylockfile (FILE *__stream) throw () ;


extern void funlockfile (FILE *__stream) throw ();
# 868 "/usr/include/stdio.h" 3 4
}
# 14 "../../../libs/support/database/newdatabase.h" 2


# 1 "/usr/include/x86_64-linux-gnu/sys/uio.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/sys/uio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_iovec.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/types/struct_iovec.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/types/struct_iovec.h" 2 3 4


struct iovec
  {
    void *iov_base;
    size_t iov_len;
  };
# 24 "/usr/include/x86_64-linux-gnu/sys/uio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/uio_lim.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/sys/uio.h" 2 3 4






extern "C" {
# 41 "/usr/include/x86_64-linux-gnu/sys/uio.h" 3 4
extern ssize_t readv (int __fd, const struct iovec *__iovec, int __count)
  ;
# 52 "/usr/include/x86_64-linux-gnu/sys/uio.h" 3 4
extern ssize_t writev (int __fd, const struct iovec *__iovec, int __count)
  ;
# 67 "/usr/include/x86_64-linux-gnu/sys/uio.h" 3 4
extern ssize_t preadv (int __fd, const struct iovec *__iovec, int __count,
         __off_t __offset) ;
# 79 "/usr/include/x86_64-linux-gnu/sys/uio.h" 3 4
extern ssize_t pwritev (int __fd, const struct iovec *__iovec, int __count,
   __off_t __offset) ;
# 106 "/usr/include/x86_64-linux-gnu/sys/uio.h" 3 4
extern ssize_t preadv64 (int __fd, const struct iovec *__iovec, int __count,
    __off64_t __offset) ;
# 118 "/usr/include/x86_64-linux-gnu/sys/uio.h" 3 4
extern ssize_t pwritev64 (int __fd, const struct iovec *__iovec, int __count,
     __off64_t __offset) ;







extern ssize_t preadv2 (int __fp, const struct iovec *__iovec, int __count,
   __off_t __offset, int ___flags) ;


extern ssize_t pwritev2 (int __fd, const struct iovec *__iodev, int __count,
    __off_t __offset, int __flags) ;
# 152 "/usr/include/x86_64-linux-gnu/sys/uio.h" 3 4
extern ssize_t preadv64v2 (int __fp, const struct iovec *__iovec,
      int __count, __off64_t __offset,
      int ___flags) ;


extern ssize_t pwritev64v2 (int __fd, const struct iovec *__iodev,
       int __count, __off64_t __offset,
       int __flags) ;



}




# 1 "/usr/include/x86_64-linux-gnu/bits/uio-ext.h" 1 3 4
# 26 "/usr/include/x86_64-linux-gnu/bits/uio-ext.h" 3 4
extern "C" {


extern ssize_t process_vm_readv (pid_t __pid, const struct iovec *__lvec,
     unsigned long int __liovcnt,
     const struct iovec *__rvec,
     unsigned long int __riovcnt,
     unsigned long int __flags)
  throw ();


extern ssize_t process_vm_writev (pid_t __pid, const struct iovec *__lvec,
      unsigned long int __liovcnt,
      const struct iovec *__rvec,
      unsigned long int __riovcnt,
      unsigned long int __flags)
  throw ();







}
# 169 "/usr/include/x86_64-linux-gnu/sys/uio.h" 2 3 4
# 17 "../../../libs/support/database/newdatabase.h" 2



# 19 "../../../libs/support/database/newdatabase.h"
class File;







extern "C" File * db_convert_fp_to_db_fp (FILE *fp);
extern "C" Generic db_buffered_close (File *fp);
extern "C" int db_buffered_write (File *fp, char *object, Generic size)
                                               ;
extern "C" int db_buffered_read (File *fp, char *object, Generic size)
                                                ;
extern "C" char * db_buffered_read_name (File *fp, char *str)
                              ;
extern "C" void db_buffered_write_name (File *fp, char *nm)
                             ;

extern "C" int io_fprintf ( File *fp, char *format, ... )
                                        ;
extern "C" char * io_fgets ( char *buf, int size, File *fp )
                                          ;
extern "C" int io_fputs ( char *buf, File *fp )
                                ;
extern "C" int io_fgetc (File *fp)
                   ;
extern "C" int io_fungetc (char c, File *fp)
                           ;
extern "C" int io_fputc (char c, File *fp)
                           ;
extern "C" int io_fseek ( File *fp, long o, int p )
                                    ;
extern "C" int io_fread ( char *buf, int nbytes, int nitems, File *fp)
                                                       ;
extern "C" int io_fwrite ( char *buf, int nbytes, int nitems, File *fp )
                                                        ;
extern "C" int io_fflush ( File *fp )
                     ;
# 12 "../../../libs/support/database/context.h" 2



class AttributedFile;
typedef class AttributedFile *Context;
# 29 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dp.h" 2







# 1 "../../../libs/moduleAnalysis/dependence/utilities/side_info.h" 1
# 21 "../../../libs/moduleAnalysis/dependence/utilities/side_info.h"
# 1 "../../../libs/frontEnd/fortTree/FortTree.h" 1
# 26 "../../../libs/frontEnd/fortTree/FortTree.h"
# 1 "../../../libs/frontEnd/ast/strutil.h" 1
# 14 "../../../libs/frontEnd/ast/strutil.h"
typedef unsigned short STR_INDEX;
typedef Generic STR_TYPE;
typedef char* STR_TEXT;

typedef struct {
 Generic size;
 Generic in_use;
 Generic total_allocs;
 Generic total_frees;
 Generic high_water_mark;
 Generic bytes_used;
 } Str_stats;

typedef struct {
 STR_TEXT text;
 STR_TYPE type;
 STR_INDEX next;
 short in_use;
 } Str_table_entry;

typedef struct {
 Str_stats stats;
 Str_table_entry *table_entry;
 STR_INDEX str_free_list;
 } Strtab;


extern STR_INDEX str_null_string;
extern Strtab *strtab;

extern "C" Strtab * str_select (Strtab *n);
extern "C" Strtab * str_open (Generic size);
extern "C" void str_close (Strtab *s);
extern "C" Str_stats str_statistics (void);
extern "C" STR_TEXT string_table_get_text (STR_INDEX ind);
extern "C" void string_table_set_text (STR_INDEX ind, STR_TEXT text);
extern "C" void str_reuse_symbol (STR_INDEX ind);
extern "C" STR_INDEX string_table_put_text (STR_TEXT text, STR_TYPE type);
extern "C" void string_table_free_symbol (STR_INDEX ind);
extern "C" STR_TYPE str_get_type (STR_INDEX ind);
extern "C" void str_put_type (STR_INDEX ind, STR_TYPE type);
extern "C" void str_plain_dump (STR_INDEX i);
extern "C" void str_dump (void);
# 27 "../../../libs/frontEnd/fortTree/FortTree.h" 2
# 1 "../../../libs/frontEnd/ast/astutil.h" 1
# 29 "../../../libs/frontEnd/ast/astutil.h"
typedef unsigned short NODE_TYPE;
typedef unsigned short META_TYPE;
typedef unsigned char STATUS;
typedef unsigned char TYPE;
# 41 "../../../libs/frontEnd/ast/astutil.h"
typedef unsigned char AST_DATA;
typedef unsigned long SCRATCH;


typedef struct LeafNodeStruct
{
  NODE_TYPE node_type;
  Generic *side_array_ptr;
  TYPE type;
  STATUS status;
  SCRATCH scratch;
  AST_INDEX father;
  short display;
  META_TYPE meta_type;
  STR_INDEX symbol;
} LeafNode;


typedef struct Int_1_NodeStruct
{
  NODE_TYPE node_type;
  Generic *side_array_ptr;
  TYPE type;
  STATUS status;
  SCRATCH scratch;
  AST_INDEX father;
  short display;
  META_TYPE meta_type;
  AST_INDEX son1;
} Int_1_Node;

typedef struct Int_2_NodeStruct
{
  NODE_TYPE node_type;
  Generic *side_array_ptr;
  TYPE type;
  STATUS status;
  SCRATCH scratch;
  AST_INDEX father;
  short display;
  META_TYPE meta_type;
  AST_INDEX son1;
  AST_INDEX son2;
} Int_2_Node;

typedef struct Int_3_NodeStruct
{
  NODE_TYPE node_type;
  Generic *side_array_ptr;
  TYPE type;
  STATUS status;
  SCRATCH scratch;
  AST_INDEX father;
  short display;
  META_TYPE meta_type;
  AST_INDEX son1;
  AST_INDEX son2;
  AST_INDEX son3;
} Int_3_Node;

typedef struct Int_4_NodeStruct
{
  NODE_TYPE node_type;
  Generic *side_array_ptr;
  TYPE type;
  STATUS status;
  SCRATCH scratch;
  AST_INDEX father;
  short display;
  META_TYPE meta_type;
  AST_INDEX son1;
  AST_INDEX son2;
  AST_INDEX son3;
  AST_INDEX son4;
} Int_4_Node;

typedef struct Int_5_NodeStruct
{
  NODE_TYPE node_type;
  Generic *side_array_ptr;
  TYPE type;
  STATUS status;
  SCRATCH scratch;
  AST_INDEX father;
  short display;
  META_TYPE meta_type;
  AST_INDEX son1;
  AST_INDEX son2;
  AST_INDEX son3;
  AST_INDEX son4;
  AST_INDEX son5;
} Int_5_Node;

typedef struct Int_6_NodeStruct
{
  NODE_TYPE node_type;
  Generic *side_array_ptr;
  TYPE type;
  STATUS status;
  SCRATCH scratch;
  AST_INDEX father;
  short display;
  META_TYPE meta_type;
  AST_INDEX son1;
  AST_INDEX son2;
  AST_INDEX son3;
  AST_INDEX son4;
  AST_INDEX son5;
  AST_INDEX son6;
} Int_6_Node;

typedef struct ListNodeStruct
{
  NODE_TYPE node_type;
  Generic *side_array_ptr;
  AST_INDEX next;
  AST_INDEX prev;
  AST_INDEX father;
  AST_INDEX son;
} ListNode;



typedef union {
  struct LeafNodeStruct *Leafnode;
  struct ListNodeStruct *Listnode;
  struct Int_1_NodeStruct *Int1node;
  struct Int_2_NodeStruct *Int2node;
  struct Int_3_NodeStruct *Int3node;
  struct Int_4_NodeStruct *Int4node;
  struct Int_5_NodeStruct *Int5node;
  struct Int_6_NodeStruct *Int6node;
} NODE;
# 185 "../../../libs/frontEnd/ast/astutil.h"
typedef struct
{
  int total_allocs;
  int total_frees;
  Generic *side_array_in_use;
  Generic *side_array_initial_values;
  int side_array_width;
  Generic **SideArrayTable;
  int SideArrayTableSize;
  int SideArrayTableHWM;
} Ast_stats;

typedef struct {
  char *node_name;
  int son_count;
} Nodeinfo;

typedef struct AsttabStruct
{
  Strtab *strtab;
  Ast_stats stats;
  Nodeinfo *nodeinfo;
  AST_INDEX root;
} Asttab;
# 297 "../../../libs/frontEnd/ast/astutil.h"
typedef struct
 {
 unsigned char hdr_version;
 unsigned char sym_version;
 unsigned char ast_version;
 unsigned char system;
 } System_version;






typedef struct AstHeaderStruct
 {
 int type;
 int flags;
 int time;
 int uid, gid;
 int str_size, str_used, str_bytes;

 AST_INDEX tree;
 File *buff_fp;
 int checksum;
 } Header;

typedef struct
 {
 int reads;
 int rbytes;
 int writes;
 int wbytes;
 } Dba_stats;
# 344 "../../../libs/frontEnd/ast/astutil.h"
extern "C" NODE_TYPE ast_get_node_type (AST_INDEX node);
extern "C" STR_INDEX ast_get_symbol (AST_INDEX node);
extern "C" void ast_put_symbol (AST_INDEX node, STR_INDEX value);
extern "C" AST_INDEX ast_get_father (AST_INDEX node);
extern "C" META_TYPE ast_get_meta_type (AST_INDEX node);
extern "C" void ast_put_meta_type (AST_INDEX node, META_TYPE meta_type);
extern "C" STATUS ast_get_status (AST_INDEX node);
extern "C" void ast_put_status (AST_INDEX node, STATUS status);
extern "C" int ast_get_real_type (AST_INDEX node);
extern "C" int ast_get_converted_type (AST_INDEX node);
extern "C" Generic ast_get_error_code (AST_INDEX node);
extern "C" void ast_put_error_code (AST_INDEX node, Generic error_code);
extern "C" short ast_get_var_info (AST_INDEX node);
extern "C" void ast_put_var_info (AST_INDEX node, short var_info);
extern "C" short ast_get_entry_info (AST_INDEX node);
extern "C" void ast_put_entry_info (AST_INDEX node, short entry_info);
extern "C" AST_INDEX ast_get_link_prev (AST_INDEX node);
extern "C" void ast_put_link_prev (AST_INDEX node, AST_INDEX link_prev);
extern "C" AST_INDEX ast_get_link_next (AST_INDEX node);
extern "C" void ast_put_link_next (AST_INDEX node, AST_INDEX link_next);
extern "C" AST_INDEX ast_get_decl (AST_INDEX node);
extern "C" void ast_put_decl (AST_INDEX node, AST_INDEX decl);
extern "C" AST_INDEX ast_get_declaration (AST_INDEX node);
extern "C" void ast_put_declaration (AST_INDEX node, AST_INDEX declaration);
extern "C" SCRATCH ast_get_scratch (AST_INDEX node);
extern "C" void ast_put_scratch (AST_INDEX node, SCRATCH scratch);
extern "C" short ast_get_display (AST_INDEX node);
extern "C" void ast_put_display (AST_INDEX node, short display);
extern "C" short ast_get_is_param (AST_INDEX node);
extern "C" void ast_put_is_param (AST_INDEX node, short is_param);
extern "C" short ast_get_other (AST_INDEX node);
extern "C" void ast_put_other (AST_INDEX node, short other);
extern "C" short ast_get_parens (AST_INDEX node);
extern "C" void ast_put_parens (AST_INDEX node, short value);
extern "C" AST_INDEX ast_get_head (AST_INDEX node);
extern "C" void ast_put_head (AST_INDEX node, AST_INDEX head);
extern "C" AST_INDEX ast_get_next (AST_INDEX node);
extern "C" void ast_put_next (AST_INDEX node, AST_INDEX next);
extern "C" AST_INDEX ast_get_prev (AST_INDEX node);
extern "C" void ast_put_prev (AST_INDEX node, AST_INDEX prev);
extern "C" short ast_get_length (AST_INDEX node);
extern "C" void ast_put_length (AST_INDEX node, short length);
extern "C" AST_INDEX ast_get_last (AST_INDEX node);
extern "C" void ast_put_last (AST_INDEX node, AST_INDEX last);
extern "C" AST_INDEX ast_get_first (AST_INDEX node);
extern "C" void ast_put_first (AST_INDEX node, AST_INDEX first);




extern "C" Boolean is_leaf_node (AST_INDEX node);
extern "C" Boolean is_list_node (AST_INDEX node);
extern "C" Boolean is_error_code (AST_INDEX node);
extern "C" void ast_put_father (AST_INDEX son, AST_INDEX father);
extern "C" AST_INDEX ast_get_son (AST_INDEX node);
extern "C" Generic ast_which_son (AST_INDEX ind, AST_INDEX son);
extern "C" AST_INDEX ast_get_son_n (AST_INDEX ind, Generic n);
extern "C" void ast_put_son_n (AST_INDEX ind, Generic n, AST_INDEX son);
extern "C" void ast_dump_all (void);
extern "C" void ast_dump (AST_INDEX ind);
extern "C" Ast_stats ast_statistics (void);
extern "C" Asttab * ast_open (Nodeinfo *nodeinfo, Generic nodes);
extern "C" void ast_close (Asttab *a);
extern "C" void ast_setroot (Asttab *a, AST_INDEX root);
extern "C" Asttab * ast_create (Nodeinfo *nodeinfo, Generic ast_size, Generic str_size)
                   ;
extern "C" void ast_destroy (Asttab *a);
extern "C" Asttab * ast_select (Asttab *new_ast);
extern "C" void ast_zero_display_top (void);
extern "C" void ast_zero_scratch (AST_INDEX ind);
extern "C" AST_INDEX ast_alloc (NODE_TYPE node_type);
extern "C" void ast_free (AST_INDEX ind);
extern "C" AST_INDEX ast_copy (AST_INDEX ind);
extern "C" AST_INDEX ast_copy_with_type (AST_INDEX ind);
extern "C" void ast_put_real_type (AST_INDEX ind, Generic value);
extern "C" void ast_put_converted_type (AST_INDEX ind, Generic value);
extern "C" AST_INDEX ast_gc (AST_INDEX root);

extern "C" void ast_export2 (File *fp, AST_INDEX tree);
extern "C" AST_INDEX ast_import2 (Nodeinfo *nodeinfo, File *fp, Asttab **tab)
               ;
extern "C" AST_INDEX ast_read_nodes (File *buff_fp);
extern "C" void ast_merge (Nodeinfo nodeinfo, File *fp1, File *fp2, Asttab **tab, AST_INDEX *tree1, AST_INDEX *tree2)
                                                     ;


extern "C" Generic ast_get_side_array (Generic which, AST_INDEX ind, Generic slot)
               ;
extern "C" void ast_put_side_array (Generic which, AST_INDEX ind, Generic slot, Generic value)
                ;
extern "C" Generic ast_attach_side_array (Asttab *tab, Generic width, Generic *initial_values)
                          ;
extern "C" void ast_detach_side_array (Asttab *tab, Generic which);
# 449 "../../../libs/frontEnd/ast/astutil.h"
struct edges
 {
 AST_INDEX son1;
 AST_INDEX son2;
 AST_INDEX son3;
 AST_INDEX son4;
 AST_INDEX son5;
 AST_INDEX son6;
 };

struct list
 {
 short length;
 AST_INDEX first;
 AST_INDEX last;
 AST_INDEX head;
 AST_INDEX prev;
 AST_INDEX next;
 };

struct other {
 short entry_info;
 short var_info;
 AST_INDEX link_prev;
 AST_INDEX link_next;
 union {
  AST_INDEX decl;
  AST_INDEX declaration;
       } dcl_info;
 Generic display;
 short is_param;
 short scratch;
 Generic error_code;
 META_TYPE meta_type;
 STATUS status;
 TYPE type;
 };

typedef struct AstnodeStruct
 {
 NODE_TYPE node_type;
 STR_INDEX symbol;
 SCRATCH scratch;
 struct list list;
 AST_INDEX father;
 struct edges edges;
 struct other other;
 } Astnode;

typedef struct SideArray
 {
 int width;
 Generic *array;
        Generic *initial_values;
 struct SideArray *next;
 } Ast_side_array;

typedef struct
 {
 int table_size;
 int node_size;
 int in_use;
 int total_allocs;
 int total_frees;
 int high_water_mark;
 Ast_side_array *side_array_list;
 } Ast_statsOld;


typedef struct AsttabStructOld
 {
 Strtab *strtab;
 Astnode *astnodes;
 AST_INDEX ast_free_list;
 Ast_statsOld stats;
 Nodeinfo *nodeinfo;
 } AsttabOld;



typedef struct AstHeaderOldStruct
        {
        int type;
        int flags;
        int time;
        int uid, gid;
        int ast_size, ast_used;
        int str_size, str_used, str_bytes;
        Asttab *asttab;
        int tree;
        int buff_port;
        int checksum;
        } HeaderOld;
# 554 "../../../libs/frontEnd/ast/astutil.h"
extern "C" AsttabOld * ast_open_old (Nodeinfo *nodeinfo, Generic nodes);
extern "C" AsttabOld * ast_create_old (Nodeinfo *nodeinfo, Generic ast_size, Generic str_size);
extern "C" AST_INDEX ast_alloc_old (NODE_TYPE node_type);
extern "C" AST_INDEX ast_import2_old (Nodeinfo *nodeinfo, File *buff_fp, AsttabOld **tab);
extern "C" Boolean is_list_old (AST_INDEX node);
extern "C" AST_INDEX list_first_old (AST_INDEX list);
extern "C" AST_INDEX ast_get_son_n_old (AST_INDEX ind, Generic n);
extern "C" AST_INDEX ast_convert (AST_INDEX node);
extern "C" AST_INDEX ast_copy_old_to_new (AST_INDEX node);
# 28 "../../../libs/frontEnd/fortTree/FortTree.h" 2
# 1 "../../../libs/frontEnd/ast/astlist.h" 1
# 18 "../../../libs/frontEnd/ast/astlist.h"
extern "C" AST_INDEX list_create (AST_INDEX node);
extern "C" AST_INDEX list_append (AST_INDEX list1, AST_INDEX list2);
extern "C" Boolean is_list (AST_INDEX node);
extern "C" Boolean in_list (AST_INDEX node);
extern "C" Boolean is_aux (AST_INDEX node);
extern "C" Boolean list_empty (AST_INDEX list);
extern "C" Generic list_length (AST_INDEX list);
extern "C" AST_INDEX list_head (AST_INDEX node);
extern "C" AST_INDEX list_first (AST_INDEX list);
extern "C" AST_INDEX list_last (AST_INDEX list);
extern "C" AST_INDEX list_next (AST_INDEX node);
extern "C" AST_INDEX list_prev (AST_INDEX node);
extern "C" AST_INDEX list_retrieve (AST_INDEX list, Generic element_number);
extern "C" int list_element (AST_INDEX element);
extern "C" AST_INDEX list_get_aux (AST_INDEX node);
extern "C" AST_INDEX list_insert_before (AST_INDEX node, AST_INDEX element);
extern "C" AST_INDEX list_insert_after (AST_INDEX node, AST_INDEX element);
extern "C" AST_INDEX list_insert_first (AST_INDEX list, AST_INDEX element);
extern "C" AST_INDEX list_insert_last (AST_INDEX list, AST_INDEX element);
extern "C" AST_INDEX list_remove_first (AST_INDEX list);
extern "C" AST_INDEX list_remove_last (AST_INDEX list);
extern "C" AST_INDEX list_remove_node (AST_INDEX node);
extern "C" AST_INDEX list_remove (AST_INDEX list, Generic element_number);
# 29 "../../../libs/frontEnd/fortTree/FortTree.h" 2
# 1 "../../../libs/frontEnd/ast/asttree.h" 1
# 19 "../../../libs/frontEnd/ast/asttree.h"
extern "C" AST_INDEX tree_copy (AST_INDEX node);
extern "C" AST_INDEX tree_copy_with_type (AST_INDEX node);
extern "C" void tree_free (AST_INDEX node);
extern "C" void tree_replace (AST_INDEX oldnode, AST_INDEX newnode);
extern "C" void tree_replace_free (AST_INDEX old_node, AST_INDEX new_node);
extern "C" void tree_print (AST_INDEX node);
extern "C" void tree_print_w_sides (AST_INDEX node);
extern "C" AST_INDEX tree_out (AST_INDEX node);
extern "C" void tree_print_to_file (AST_INDEX node, FILE *fp);
# 30 "../../../libs/frontEnd/fortTree/FortTree.h" 2
# 1 "../../../include/frontEnd/astsel.h" 1
# 31 "../../../libs/frontEnd/fortTree/FortTree.h" 2
# 1 "../../../libs/frontEnd/ast/gen.h" 1
# 21 "../../../libs/frontEnd/ast/gen.h"
# 1 "../../../include/frontEnd/astmeta.h" 1
# 22 "../../../libs/frontEnd/ast/gen.h" 2



# 1 "../../../include/frontEnd/astnode.h" 1
# 26 "../../../libs/frontEnd/ast/gen.h" 2
# 57 "../../../libs/frontEnd/ast/gen.h"
struct nodedef_t {
        char *nodename;
 short inson;
        unsigned number_of_sons:13,
                 statement:1,
                 compound:1,
                 simple:1;
 short sons[6];
};

struct metamap_t {
 char *metaname;
 unsigned text_editable:1,
          count:15;
 short exp[45];
};

extern struct metamap_t metamap[];
extern struct nodedef_t nodedef[];
# 94 "../../../libs/frontEnd/ast/gen.h"
extern "C" char * gen_type_get_text (Generic type);
extern "C" char * gen_type_get_text_short (Generic type);
extern "C" AST_INDEX gen_rph (META_TYPE phtype);
extern "C" AST_INDEX gen_oph (META_TYPE phtype);
# 133 "../../../libs/frontEnd/ast/gen.h"
# 1 "../../../include/frontEnd/astcons.h" 1
# 134 "../../../libs/frontEnd/ast/gen.h" 2







extern "C" AST_INDEX gen_node (NODE_TYPE type, ...);


extern "C" AST_INDEX gen_new_node (NODE_TYPE type);


extern "C" void gen_coerce_node (AST_INDEX node, NODE_TYPE type);


extern "C" AST_INDEX gen_any_list (AST_INDEX list);
extern "C" Generic get_proper_meta_type (AST_INDEX node);
extern "C" Generic get_proper_status (AST_INDEX node);
extern "C" AST_INDEX gen_any_node (AST_INDEX node);
extern "C" AST_INDEX gen_meta_list (AST_INDEX list, Generic status, META_TYPE type)
                 ;
extern "C" AST_INDEX gen_meta_node (AST_INDEX node, Generic status, META_TYPE type)
                 ;
extern "C" Boolean is_scope (AST_INDEX node);
extern "C" AST_INDEX find_scope (AST_INDEX node);
extern "C" AST_INDEX get_name_in_entry (AST_INDEX node);
extern "C" AST_INDEX get_stmts_in_scope (AST_INDEX node);
extern "C" AST_INDEX get_formals_in_entry (AST_INDEX node);
extern "C" char * gen_status_get_text (Generic value);
extern "C" int int_type (char *type_str);
# 205 "../../../libs/frontEnd/ast/gen.h"
# 1 "../../../include/frontEnd/astrec.h" 1
# 206 "../../../libs/frontEnd/ast/gen.h" 2
# 32 "../../../libs/frontEnd/fortTree/FortTree.h" 2
# 1 "../../../libs/frontEnd/ast/aphelper.h" 1
# 21 "../../../libs/frontEnd/ast/aphelper.h"
extern "C" AST_INDEX place_holder_for (AST_INDEX node);
extern "C" AST_INDEX in (AST_INDEX node);
extern "C" AST_INDEX in_to_end (AST_INDEX node);
extern "C" AST_INDEX out (AST_INDEX node);
extern "C" AST_INDEX next (AST_INDEX node_in_list);
extern "C" AST_INDEX prev (AST_INDEX node_in_list);
extern "C" AST_INDEX ph_from_mtype (Generic mtype);
extern "C" AST_INDEX ph_ify (AST_INDEX node, TYPE ph_type, Generic ph_status);
extern "C" Boolean is_first_in_list (AST_INDEX node_in_list);
extern "C" Boolean is_last_in_list (AST_INDEX node_in_list);
extern "C" Boolean is_only_in_list (AST_INDEX node_in_list);

extern "C" Boolean is_subpgm (AST_INDEX node);

extern "C" AST_INDEX gen_no_meta_list (AST_INDEX list, Generic status, META_TYPE type)
                                                     ;
extern "C" AST_INDEX gen_no_meta_node (AST_INDEX node, Generic status, META_TYPE type)
                                                     ;
# 33 "../../../libs/frontEnd/fortTree/FortTree.h" 2
# 1 "../../../include/maxdefs.h" 1
# 34 "../../../libs/frontEnd/fortTree/FortTree.h" 2



typedef class NeedProvSet *NeedProvSetPtr;







typedef struct FortTree_internal_structure *FortTree;

typedef unsigned long FortTreeNode;




typedef Generic FortTreeSideArray;
extern char *ft_SourceAttribute;







typedef enum {
  ft_UNINITIALIZED, ft_INITIALIZED,
  ft_CORRECT, ft_WARNINGS_ONLY,
  ft_ERRONEOUS
  } ft_States;






extern "C" void ft_Init (void);
extern "C" void ft_Fini (void);

extern "C" FortTree ft_Open (Context context, File *fp);
extern "C" void ft_Close (FortTree ft);
extern "C" void ft_Save (FortTree ft, Context context, File *fp);

extern "C" FortTree ft_Create (void);
extern "C" int ft_Read (FortTree ft, File *file);
extern "C" int ft_Write (FortTree ft, File *file);






extern "C" void ft_AstSelect (FortTree ft);
extern "C" FortTreeNode ft_Root (FortTree ft);
extern "C" void ft_SetRoot (FortTree ft, FortTreeNode node);
# 115 "../../../libs/frontEnd/fortTree/FortTree.h"
extern "C" ft_States ft_GetState (FortTree ft);
extern "C" void ft_ResetStateToInitialized (FortTree ft);





extern "C" FortTreeSideArray ft_AttachSideArray (FortTree ft, int size, Generic *initials)
                    ;
extern "C" void ft_DetachSideArray (FortTree ft, FortTreeSideArray sideArray)
                              ;
extern "C" Generic ft_GetFromSideArray (FortTreeSideArray sideArray, FortTreeNode node, int k)
                           ;
extern "C" void ft_PutToSideArray (FortTreeSideArray sideArray, FortTreeNode node, int k, Generic value)
                                          ;
extern "C" void ft_ReadSideArray (FortTree ft, FortTreeSideArray sideArray, Context context, File *fp)
                                                          ;
extern "C" void ft_WriteSideArray (FortTree ft, FortTreeSideArray sideArray, Context context, File *fp)
                                                          ;


extern "C" void ft_ReadSideArrayFromFile (FortTree ft, FortTreeSideArray sideArray, File *fp)
                                                             ;
extern "C" void ft_WriteSideArrayToFile (FortTree ft, FortTreeSideArray sideArray, File *fp)
                                                             ;
# 149 "../../../libs/frontEnd/fortTree/FortTree.h"
extern "C" void ft_SetComma (FortTreeNode node, Boolean value);
extern "C" Boolean ft_GetComma (FortTreeNode node);
extern "C" void ft_SetShow (FortTreeNode node, Boolean value);
extern "C" Boolean ft_GetShow (AST_INDEX node);
extern "C" void ft_SetEmphasis (FortTreeNode node, Boolean value);
extern "C" Boolean ft_GetEmphasis (AST_INDEX node);
extern "C" void ft_SetConceal (FortTree ft, FortTreeNode node, int bracket, int value)
                         ;
extern "C" int ft_GetConceal (FortTree ft, AST_INDEX node, int bracket)
              ;
# 167 "../../../libs/frontEnd/fortTree/FortTree.h"
extern "C" void ft_SetSemanticErrorCode (FortTree ft, FortTreeNode node, short value)
              ;
extern "C" short ft_GetSemanticErrorCode (FortTreeNode node);
extern "C" void ft_SetParseErrorCode (FortTreeNode node, short value);
extern "C" short ft_GetParseErrorCode (FortTreeNode node);
extern "C" Boolean ft_IsErroneous (FortTree ft, FortTreeNode node, int bracket)
              ;
extern "C" void ft_GetErrorMessage (FortTree ft, AST_INDEX node, int bracket, char *Message)
                             ;
# 184 "../../../libs/frontEnd/fortTree/FortTree.h"
extern "C" ft_States ft_Check (FortTree ft);






extern "C" ft_States ft_SymRecompute (FortTree ft);
extern "C" SymDescriptor ft_SymGetTable (FortTree ft, char *entry_point);
extern "C" unsigned int ft_SymNumberOfModuleEntries (FortTree ft);

extern "C" NeedProvSetPtr ft_GetNeeds (FortTree ft);
extern "C" NeedProvSetPtr ft_GetProvs (FortTree ft);






extern "C" int ft_NodeToNumber (FortTree ft, FortTreeNode node);
extern "C" FortTreeNode ft_NumberToNode (FortTree ft, int number);
extern "C" void ft_RecomputeNodeNumbers (FortTree ft);
# 22 "../../../libs/moduleAnalysis/dependence/utilities/side_info.h" 2
# 47 "../../../libs/moduleAnalysis/dependence/utilities/side_info.h"
typedef enum info_type
 { type_levelv, type_subscript, type_ref, type_dc, type_cd_map, type_fd, type_cfg_inst} Info_type;






typedef struct Info_elem
{
    Generic levelv_index;
    Generic subscript_index;
    Generic ref_index;
    Generic dc_index;
    Generic fd_index;
    Generic cd_map;
    Generic cfg_inst;
    int free_list;
} Info_elem;





typedef struct struct_SideInfo
{
    int info_side_array;
    Info_elem *info_array;
    int info_array_first_free;
} *SideInfoPtr, SideInfo;




extern "C" SideInfo * create_side_info ( FortTree ft );

extern "C" void destroy_side_info ( FortTree ft, SideInfo * infoPtr );

extern "C" void clear_info_array ( SideInfo * infoPtr );


extern "C" void create_info ( SideInfo * infoPtr, AST_INDEX astindex);


extern "C" void dg_put_info ( SideInfo * infoPtr, AST_INDEX astindex, Info_type infotype, Generic value )
                                        ;

extern "C" Generic dg_get_info ( SideInfo * infoPtr, AST_INDEX astindex, Info_type infotype )
                         ;
# 37 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dp.h" 2


# 1 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_instance.h" 1
# 40 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_instance.h"
typedef struct struct_DG_Instance DG_Instance;




typedef struct struct_dg_edge DG_Edge;







typedef struct struct_carried_deps Carried_deps;




typedef Generic EDGE_INDEX;
# 73 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_instance.h"
typedef enum { inconsistent, consistent_SIV, consistent_MIV } ConsistentType;
# 84 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_instance.h"
typedef enum { graph_unknown, graph_local, graph_pfc, graph_updated_pfc } GraphType;
# 40 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dp.h" 2


# 1 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_header.h" 1
# 37 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_header.h"
# 1 "../../../libs/frontEnd/fortTextTree/FortTextTree.h" 1
# 25 "../../../libs/frontEnd/fortTextTree/FortTextTree.h"
# 1 "../../../libs/graphicInterface/oldMonitor/include/mon/font.h" 1
# 41 "../../../libs/graphicInterface/oldMonitor/include/mon/font.h"
typedef struct {
 unsigned char ch;
 unsigned char style;
  } TextChar;

typedef struct {
 short num_tc;
 TextChar *tc_ptr;
 Boolean ephemeral;
  } TextString;
extern TextString emptyTextString;

extern "C" TextChar makeTextChar (unsigned char ch, unsigned char style);
# 62 "../../../libs/graphicInterface/oldMonitor/include/mon/font.h"
extern "C" TextString makeTextString (char *s, unsigned char style, char *who);




extern "C" TextString makePartialTextString (char *s, unsigned char style, short len, char *who)
                       ;





extern "C" TextString createTextString (short size, char *who);





extern "C" TextString copyTextString (TextString ts);




extern "C" TextString subTextString (TextString ts, short start, short count);





extern "C" void moveTextString (TextString src, TextString *dst);





extern "C" void destroyTextString (TextString ts);







extern "C" void fontsInitialize (void);



extern "C" void fontsFinalize (void);






extern "C" short fontOpen (char *name);







extern "C" void fontClose (short id);




extern short DEF_FONT_ID;
# 139 "../../../libs/graphicInterface/oldMonitor/include/mon/font.h"
extern "C" Point fontSize (short id);




extern "C" short fontBaseline (short id);
# 26 "../../../libs/frontEnd/fortTextTree/FortTextTree.h" 2
# 1 "../../../libs/graphicInterface/support/graphics/rect.h" 1
# 21 "../../../libs/graphicInterface/support/graphics/rect.h"
typedef struct {
 Point ul;
 Point lr;
  } Rectangle;

extern Rectangle EmptyRect;
extern Rectangle UnusedRect;
extern Rectangle MaximumRect;


extern "C" Rectangle makeRect (Point ul, Point lr);



extern "C" Point sizeRect (Rectangle r);



extern "C" Rectangle makeRectFromSize (Point ul, Point size);




extern "C" Boolean positiveArea (Rectangle r);




extern "C" Rectangle transRect (Rectangle r, Point p);




extern "C" Rectangle subRect (Rectangle r, Point p);




extern "C" Rectangle relocRect (Rectangle r, Point newOrigin);




extern "C" Boolean pointInRect (Point p, Rectangle r);




extern "C" Rectangle clipRectWithBorder (Rectangle r, Rectangle border, short bw);






extern "C" Boolean rectEq (Rectangle r1, Rectangle r2);



extern "C" Boolean intersect (Rectangle r, Rectangle s);



extern "C" Rectangle interRect (Rectangle r1, Rectangle r2);




extern "C" Rectangle unionRect (Rectangle r1, Rectangle r2);




extern "C" Rectangle centerRectInRect (Rectangle r, Rectangle base);




extern "C" Rectangle bounceRectInRect (Rectangle r, Rectangle base);
# 27 "../../../libs/frontEnd/fortTextTree/FortTextTree.h" 2
# 1 "../../../libs/frontEnd/textTree/TextTree.h" 1
# 42 "../../../libs/frontEnd/textTree/TextTree.h"
typedef Generic TextTree;
typedef Generic TextTreeView;

typedef Generic TT_Tree;
typedef Generic TT_TreeNode;
typedef SmallGeneric TT_LineTag;


# 1 "../../../libs/support/arrays/FlexibleArray.h" 1
# 13 "../../../libs/support/arrays/FlexibleArray.h"
typedef enum {
 Single_hole,
 Block_list,
 Block_tree
} FlexType;

struct BufferSingleHole {
 char *start;
 char *endtext;
 char *hole;
 int hole_size;
};

typedef struct {
 Generic block_id;
 short usage;
 short info;
} BL_block;

struct BufferBlockList {
 BL_block *table;
 int tablesize;
 Generic current;
 int offset;
};

typedef struct buffers_struct {
 FlexType type;
 short size;
 short length;
 union {
 struct BufferSingleHole SH;
 struct BufferBlockList BL;
 } flex_union;
} Flex;




extern "C" Flex* flex_create (short element);





extern "C" void flex_destroy (Flex* f);




extern "C" int flex_size (Flex* f);




extern "C" int flex_length (Flex* f);




extern "C" int flex_index (Flex* f, int start, char* elt);







extern "C" int flex1_index (Flex* f, int start, char elt);





extern "C" int flex_rindex (Flex* f, int start, char* elt);







extern "C" int flex1_rindex (Flex* f, int start, char elt);





extern "C" int flex_count_occurrences (Flex* f, int start, int finish, char* elt);





extern "C" int flex1_count_occurrences (Flex* f, int start, int finish, char elt);







extern "C" void flex_insert_general (Flex *f, int start, int n);

extern "C" void flex_insert (Flex *f, int start, int n);






extern "C" void flex_insert_one (Flex *f, int start, char *elem);





extern "C" void flex_insert_buffer (Flex *f, int start, int n, char *buf);





extern "C" int flex_insert_file (Flex *f, int start, char *fname);






extern "C" void flex_delete (Flex *f, int start, int n);





extern "C" char * flex_delete_one (Flex *f, int start, char *buf);







extern "C" char * flex_delete_buffer (Flex *f, int start, int n, char *buf);
# 168 "../../../libs/support/arrays/FlexibleArray.h"
extern "C" void flex_set_one (Flex *f, int offset, char *elem);





extern "C" void flex_set_buffer (Flex *f, int start, int n, char *buf);







extern "C" char * flex_get_one (Flex *f, int offset);






extern "C" char flex1_get_one (Flex *f, int offset);






extern "C" char * flex_get_buffer (Flex *f, int start, int n, char *buf);





extern "C" int flex_get_file (Flex *f, char *fname);





extern "C" Flex * flex_get_flex (Flex *f, int start, int count);
# 51 "../../../libs/frontEnd/textTree/TextTree.h" 2





typedef struct{Generic x[20];} TT_MaxToken;

typedef struct
  {
    TT_TreeNode lineNode;
    Generic bracket;
    Generic indent;
    Generic conceal;
    TT_LineTag tt_tag;

    TextString text;
    Boolean textValid;

    TT_MaxToken token;

  } TT_Line;




typedef Boolean(*tt_Parse1Func) (TT_Tree ftt, TextString text, TT_MaxToken *token)
                                                    ;
typedef Boolean(*tt_Parse2Func) (TT_Tree ftt, int goal, Flex *lines, int first, int count, TT_TreeNode *node)

                     ;
typedef void(*tt_Unparse1Func) (TT_Tree ftt, TT_Line line, TextString *text)
                                               ;
typedef void(*tt_Unparse2Func) (TT_Tree ftt, TT_TreeNode node, int indent, Flex **lines)
                                                           ;
typedef void(*tt_Maptext1Func) (TT_Tree ftt, TT_Line line, int firstChar, TT_TreeNode *node)
                                                               ;
typedef void(*tt_Maptext2Func) (TT_Tree ftt, int firstLine, TT_TreeNode *node)
                                                 ;
typedef void(*tt_Mapnode1Func) (TT_Tree ftt, TT_Line line, TT_TreeNode node, int *firstChar, int *lastChar)

                                 ;
typedef void(*tt_CacheCallback) (TextTree tt, TT_TreeNode node, int firstLine, int lastLine, int indent)
                                                                          ;
typedef void(*tt_Mapnode2Func) (TT_Tree ftt, TT_TreeNode node, int *firstLine, int *lastLine, int *indent, TextTree tt, tt_CacheCallback cacheProc)

                                                        ;
typedef Boolean(*tt_Synch2Func) (TT_Tree ftt, TT_TreeNode node, int *goal)
                                            ;
typedef void(*tt_Copy1Func) (TT_Tree ftt, TT_MaxToken oldToken, TT_MaxToken newToken)
                                                           ;
typedef void(*tt_Copy2Func) (TT_Tree ftt, TT_TreeNode oldNode, TT_TreeNode *newNode)
                                                          ;
typedef void(*tt_Destroy1Func) (TT_Tree ftt, TT_MaxToken *token)
                                   ;
typedef void(*tt_Destroy2Func) (TT_Tree ftt, TT_TreeNode node)
                                 ;
typedef void(*tt_SetRootFunc) (TT_Tree ftt, TT_TreeNode node)
                                 ;
typedef TT_TreeNode(*tt_GetFatherFunc) (TT_Tree ftt, TT_TreeNode node)
                                 ;
typedef void(*tt_GetExtraFunc) (TT_Tree ftt, TT_TreeNode node, int k, int *value)
                                                    ;
typedef void(*tt_SetExtraFunc) (TT_Tree ftt, TT_TreeNode node, int k, int value)
                                                   ;

typedef struct
  {
    tt_Parse1Func parse1;
    tt_Parse2Func parse2;
    tt_Unparse1Func unparse1;
    tt_Unparse2Func unparse2;
    tt_Maptext1Func maptext1;
    tt_Maptext2Func maptext2;
    tt_Mapnode1Func mapnode1;
    tt_Mapnode2Func mapnode2;
    tt_Synch2Func synch2;
    tt_Copy1Func copy1;
    tt_Copy2Func copy2;
    tt_Destroy1Func destroy1;
    tt_Destroy2Func destroy2;
    tt_SetRootFunc setRoot;
    tt_GetFatherFunc getFather;
    tt_GetExtraFunc getExtra;
    tt_SetExtraFunc setExtra;
  } TT_Methods;
# 144 "../../../libs/frontEnd/textTree/TextTree.h"
extern "C" void tt_Init (void);
extern "C" void tt_Fini (void);

extern "C" TextTree tt_Open (Context context, File *fp, TT_Tree tree, TT_TreeNode root, TT_Methods *methods, int tokenSize)
                                                                     ;
extern "C" void tt_Close (TextTree tt);
extern "C" void tt_Save (TextTree tt, Context context, File *fp);
extern "C" int tt_Duplicate (Context oldContext, Context newContext)
                          ;

extern "C" TextTree tt_Create (TT_Tree tree, TT_TreeNode root, TT_Methods *methods, int tokenSize)
                                                                            ;
extern "C" int tt_Read (TextTree tt, File *fp);
extern "C" int tt_Write (TextTree tt, File *fp);







extern "C" TT_TreeNode tt_Root (TextTree tt);
extern "C" TT_TreeNode tt_GetFather (TextTree tt, TT_TreeNode node);
extern "C" void tt_TreeWillChange (TextTree tt, TT_TreeNode node);
extern "C" void tt_TreeChanged (TextTree tt, TT_TreeNode node);

extern "C" Boolean tt_NodeToID (TextTree tt, TT_TreeNode node, int *id)
          ;
extern "C" Boolean tt_IDToNode (TextTree tt, int id, TT_TreeNode *node)
                    ;
# 182 "../../../libs/frontEnd/textTree/TextTree.h"
extern "C" Point tt_GetDocSize (TextTree tt);
extern "C" int tt_NumLines (TextTree tt);
extern "C" void tt_GetLine (TextTree tt, int lineNum, TextString *text)
                   ;
extern "C" void tt_SetLine (TextTree tt, int lineNum, TextString text);
extern "C" void tt_InsertLine (TextTree tt, int lineNum, TextString text)
                  ;
extern "C" void tt_DeleteLine (TextTree tt, int lineNum);

extern "C" void tt_GetLineInfo (TextTree tt, int lineNum, Boolean needText, TT_Line *info)
                                  ;
extern "C" int tt_GetLineIndent (TextTree tt, int lineNum);
extern "C" int tt_GetLineLength (TextTree tt, int lineNum);

extern "C" void tt_SetConceal (TextTree tt, int lineNum1, int lineNum2, Boolean conceal)
                  ;
extern "C" void tt_SetConcealNone (TextTree tt, int lineNum1, int lineNum2)
               ;
extern "C" void tt_GetConceal (TextTree tt, int lineNum, Boolean *conceal)
                   ;
extern "C" void tt_SetConcealCount (TextTree tt, int lineNum, int iconceal)
               ;
extern "C" void tt_GetConcealCount (TextTree tt, int lineNum, int *iconceal)
                ;
# 214 "../../../libs/frontEnd/textTree/TextTree.h"
extern "C" Boolean tt_TextToNode (TextTree tt, int firstLine, int firstChar, int lastLine, int lastChar, TT_TreeNode *node)
                                                               ;
extern "C" Boolean tt_NodeToText (TextTree tt, TT_TreeNode node, int *firstLine, int *firstChar, int *lastLine, int *lastChar)
                                                               ;
extern "C" void tt_GetChanges (TextTree tt, int *first, int *last, int *delta, TT_TreeNode *node)
                                ;
# 228 "../../../libs/frontEnd/textTree/TextTree.h"
extern "C" short tt_ViewScreenModuleIndex (void);
extern "C" Point tt_ViewSize (Point charSize, short font);
extern "C" void tt_ViewInit (TextTree tt, TextTreeView pane, Rectangle viewRect)
                     ;
extern "C" void tt_ViewGet (TextTree tt, TextTreeView pane, Rectangle *viewRect)
                      ;
extern "C" void tt_ViewSet (TextTree tt, TextTreeView pane, Rectangle viewRect)
                     ;
extern "C" void tt_ViewScroll (TextTree tt, TextTreeView pane, int dx, int dy)
                 ;

extern "C" void tt_BeginEdit (TextTree tt);
extern "C" void tt_EndEdit (TextTree tt);
# 249 "../../../libs/frontEnd/textTree/TextTree.h"
extern "C" void tt_setTagNode (TextTree tt, TT_TreeNode node, TT_LineTag tag)
                 ;
extern "C" void tt_getTagNode (TextTree tt, TT_TreeNode node, TT_LineTag *tag)
                  ;
extern "C" void tt_setTagLine (TextTree tt, int lineNum, TT_LineTag tag)
                 ;
extern "C" void tt_getTagLine (TextTree tt, int lineNum, TT_LineTag *tag)
                 ;
# 28 "../../../libs/frontEnd/fortTextTree/FortTextTree.h" 2


# 1 "../../../libs/frontEnd/prettyPrinter/sigcomments.h" 1
# 26 "../../../libs/frontEnd/prettyPrinter/sigcomments.h"
typedef struct sch_t {
  Boolean(*is_significant_comment) (char *comment_string);
  char *(*significant_comment_prefix) (char *comment_string)
                            ;
  char *(*significant_comment_wrap_prefix) (char *comment_string, char *wrap_point)
                                              ;
} SignificantCommentHandlers;
# 31 "../../../libs/frontEnd/fortTextTree/FortTextTree.h" 2

typedef Generic FortTextTree;
typedef Generic FortTextTreeView;

# 1 "../../../libs/frontEnd/fortTextTree/MapInfo_c.h" 1
# 14 "../../../libs/frontEnd/fortTextTree/MapInfo_c.h"
typedef void* MapInfoOpaque;
# 29 "../../../libs/frontEnd/fortTextTree/MapInfo_c.h"
# 1 "../../../libs/frontEnd/ast/treeutil.h" 1
# 30 "../../../libs/frontEnd/ast/treeutil.h"
extern "C" int loop_level (AST_INDEX stmt);





extern "C" AST_INDEX gen_get_stmt_list (AST_INDEX stmt);





extern "C" AST_INDEX gen_get_loop_control (AST_INDEX loop);





extern "C" Boolean ast_equiv (AST_INDEX left, AST_INDEX right);





extern "C" AST_INDEX ast_out_if_subscript_id (AST_INDEX node);







extern "C" Boolean ast_eval (AST_INDEX node, int *iptr);
# 88 "../../../libs/frontEnd/ast/treeutil.h"
typedef int(*WK_STMT_CLBACK) (AST_INDEX stmt, int nesting_level, Generic parm)
                                                                           ;

typedef int(*WK_STMT_CLBACK_V) (AST_INDEX stmt, int nesting_level, va_list arg_list)
                                                                               ;

typedef int(*WK_EXPR_CLBACK) (AST_INDEX expr, Generic parm)
                                                        ;

typedef enum {
  at_invalid,
  at_decl,
  at_invoc,
  at_noaccess,
  at_decl_dim_ref,
  at_ref,
  at_mod
} ReferenceAccessType;

typedef void(*WK_IDS_CLBACK_V) (AST_INDEX stmt, ReferenceAccessType atype, va_list arg_list)

                       ;

typedef void(*WK_IDS_EX_CLBACK_V) (AST_INDEX stmt, ...)
                                               ;
# 129 "../../../libs/frontEnd/ast/treeutil.h"
extern "C" int walk_statements (AST_INDEX stmt, int nesting_level, WK_STMT_CLBACK pre_action, WK_STMT_CLBACK post_action, Generic parm)




                 ;

extern "C" int walk_statements_v (AST_INDEX stmt, int nesting_level, WK_STMT_CLBACK_V pre_action, WK_STMT_CLBACK_V post_action, ...)




        ;






extern "C" int walk_statements_reverse (AST_INDEX stmt, int nesting_level, WK_STMT_CLBACK pre_action, WK_STMT_CLBACK post_action, Generic parm)




                 ;

extern "C" int walk_statements_reverse_v (AST_INDEX stmt, int nesting_level, WK_STMT_CLBACK_V pre_action, WK_STMT_CLBACK_V post_action, ...)




        ;
# 178 "../../../libs/frontEnd/ast/treeutil.h"
extern "C" void walkIDsInStmt (AST_INDEX stmt, WK_IDS_CLBACK_V fn, ...);
# 194 "../../../libs/frontEnd/ast/treeutil.h"
extern "C" void walkIDsInExpr (AST_INDEX expr, WK_IDS_EX_CLBACK_V fn, ...);
# 207 "../../../libs/frontEnd/ast/treeutil.h"
extern "C" int get_expressions (AST_INDEX stmt, AST_INDEX *expr1, AST_INDEX *expr2)
                                                            ;
# 221 "../../../libs/frontEnd/ast/treeutil.h"
extern "C" int walk_expression (AST_INDEX expr, WK_EXPR_CLBACK pre_action, WK_EXPR_CLBACK post_action, Generic parm)



                 ;
# 242 "../../../libs/frontEnd/ast/treeutil.h"
extern "C" int subtree_apply_when_pred (AST_INDEX node, int nesting_level, va_list arg_list)
                            ;
# 252 "../../../libs/frontEnd/ast/treeutil.h"
extern "C" AST_INDEX tree_out_to_enclosing_stmt (AST_INDEX node);
# 30 "../../../libs/frontEnd/fortTextTree/MapInfo_c.h" 2



extern "C" MapInfoOpaque CreateMapInfo (FortTextTree ftt);
extern "C" void DestroyMapInfo (MapInfoOpaque map);

extern "C" AST_INDEX MapLineToIndex (MapInfoOpaque map,int LineNum);
extern "C" AST_INDEX MapVarToIndex (MapInfoOpaque map,int Line,char *Var,int n);
extern "C" void ProcessMapLine (MapInfoOpaque map, FortTextTree ftt, int ftt_line, int output_line)
                         ;
extern "C" void OpaqueConstructInfo (AST_INDEX node, ReferenceAccessType atype,va_list arg_list)
                                                  ;
# 36 "../../../libs/frontEnd/fortTextTree/FortTextTree.h" 2
# 52 "../../../libs/frontEnd/fortTextTree/FortTextTree.h"
extern "C" void ftt_Init (void);
extern "C" void ftt_Fini (void);

extern "C" FortTextTree ftt_Open (Context context, File *fp, FortTree ft)
                                                 ;
extern "C" void ftt_Close (FortTextTree ftt);
extern "C" void ftt_Save (FortTextTree ftt, Context context, File *fp);
extern "C" void ftt_SaveAnnots (FortTextTree ftt, Context context, File *fp);







extern "C" FortTree ftt_Tree (FortTextTree ftt);
extern "C" FortTreeNode ftt_GetFather (FortTextTree ftt, FortTreeNode node);
extern "C" FortTreeNode ftt_Root (FortTextTree ftt);
extern "C" void ftt_TreeWillChange (FortTextTree ftt, FortTreeNode node);
extern "C" void ftt_TreeChanged (FortTextTree ftt, FortTreeNode node);

extern "C" Boolean ftt_NodeToID (FortTextTree ftt, FortTreeNode node, int *id);
extern "C" Boolean ftt_IDToNode (FortTextTree ftt, int id, FortTreeNode *node);
extern "C" char * ftt_NodeToStr (FortTextTree ftt, FortTreeNode node);
# 86 "../../../libs/frontEnd/fortTextTree/FortTextTree.h"
extern "C" Point ftt_GetDocSize (FortTextTree ftt);
extern "C" int ftt_NumLines (FortTextTree ftt);
extern "C" void ftt_GetLine (FortTextTree ftt, int lineNum, TextString *text)
                   ;
extern "C" char * ftt_GetTextLine (FortTextTree ftt, int lineNum);
extern "C" void ftt_SetLine (FortTextTree ftt, int lineNum, TextString text)
                  ;
extern "C" void ftt_SetTextLine (FortTextTree ftt, int lineNum, char *text)
             ;
extern "C" void ftt_InsertLine (FortTextTree ftt, int lineNum, TextString text)
                  ;
extern "C" void ftt_InsertTextLine (FortTextTree ftt, int lineNum, char *text)
             ;
extern "C" void ftt_DeleteLine (FortTextTree ftt, int lineNum);

extern "C" void ftt_GetLineInfo (FortTextTree ftt, int lineNum, FortTreeNode *node, int *bracket)
                                   ;
extern "C" int ftt_GetLineIndent (FortTextTree ftt, int lineNum);
extern "C" int ftt_GetLineLength (FortTextTree ftt, int lineNum);

extern "C" void ftt_GetConceal (FortTextTree ftt, int lineNum, Boolean *conceal)
                   ;
extern "C" void ftt_SetConceal (FortTextTree ftt, int lineNum1, int lineNum2, Boolean conceal)
                                ;
extern "C" void ftt_SetConcealNone (FortTextTree ftt, int lineNum1, int lineNum2)
               ;
extern "C" void ftt_SetConcealCount (FortTextTree ftt, int lineNum, int iconceal)
               ;
extern "C" void ftt_GetConcealCount (FortTextTree ftt, int lineNum, int *iconceal)
                ;

extern "C" Boolean ftt_IsErroneous (FortTextTree ftt, int lineNum);
extern "C" void ftt_GetErrorMessage (FortTextTree ftt, int lineNum, char *Message)
                ;







extern "C" Boolean ftt_TextToNode (FortTextTree ftt, int line1, int char1, int line2, int char2, FortTreeNode *node)
                                                      ;
extern "C" Boolean ftt_NodeToText (FortTextTree ftt, FortTreeNode node, int *line1, int *char1, int *line2, int *char2)
                                                 ;
extern "C" void ftt_GetChanges (FortTextTree ftt, int *first, int *last, int *delta, FortTreeNode *node)
                                 ;
extern "C" void ftt_MapWalk (FortTextTree ftt, MapInfoOpaque Map);
# 143 "../../../libs/frontEnd/fortTextTree/FortTextTree.h"
extern "C" int ftt_IPExpandee (FortTextTree ftt, int lineNum, int charNum)
              ;
extern "C" int ftt_NodeExpandee (FortTextTree ftt, FortTreeNode node);
extern "C" int ftt_GetExpansionNames (FortTextTree ftt, Boolean firstOnly, TextString nameList[], int numList[])
                                                          ;

extern "C" void ftt_Expand (FortTextTree ftt, int choice, FortTreeNode *newNode, FortTreeNode *focus)
                                             ;
# 159 "../../../libs/frontEnd/fortTextTree/FortTextTree.h"
extern "C" short ftt_ViewScreenModuleIndex (void);
extern "C" Point ftt_ViewSize (Point charSize, short font);
extern "C" void ftt_ViewInit (FortTextTree ftt, FortTextTreeView pane, Rectangle viewRect)
                     ;
extern "C" void ftt_ViewGet (FortTextTree ftt, FortTextTreeView pane, Rectangle *viewRect)
                      ;
extern "C" void ftt_ViewSet (FortTextTree ftt, FortTextTreeView pane, Rectangle viewRect)
                     ;
extern "C" void ftt_ViewScroll (FortTextTree ftt, FortTextTreeView pane, int dx, int dy)
                 ;

extern "C" void ftt_BeginEdit (FortTextTree ftt);
extern "C" void ftt_EndEdit (FortTextTree ftt);





extern "C" void ftt_ImportFromFile (Context context, FortTree ft, FortTextTree *ftt_p)
                                                      ;

extern "C" void ftt_ImportFromTextFile (char *filename, FortTextTree ftt);

extern "C" FortTextTree ftt_Create (FortTree ft);
extern "C" int ftt_Read (FortTextTree ftt, File *file);
extern "C" int ftt_Write (FortTextTree ftt, File *file);

extern "C" void ftt_ExportToFile (FortTextTree ftt, FILE *outf, char continuationCharacter, SignificantCommentHandlers *schandlers)



                                           ;

typedef
void(*PushFunc) (char *include_name, Generic other)
                                       ;
typedef
void(*PopFunc) (char *include_name, Generic other)
                                       ;
typedef
void(*EnterFunc) (char *line, Generic other)
                               ;


extern "C" void ftt_TraverseText (char *loc, PushFunc Push, PopFunc Pop, EnterFunc Enter, Generic other)




                    ;
# 240 "../../../libs/frontEnd/fortTextTree/FortTextTree.h"
typedef int(*ftt_ListingCallBack) (int lineCount, char *text, va_list args)
                                              ;

extern "C" void ftt_Listing (FortTextTree ftt, ftt_ListingCallBack reportGoodLine, ftt_ListingCallBack reportBadLine, ftt_ListingCallBack reportErrorLine, ...)


                                                ;

extern "C" int ftt_Export (FortTextTree ftt, int continuationCharacter, SignificantCommentHandlers *schandlers, ftt_ListingCallBack exportLine, ...)

                                          ;
# 261 "../../../libs/frontEnd/fortTextTree/FortTextTree.h"
typedef
void(*ftt_banner_callback) (char *banner_msg)
                      ;
typedef
void(*ftt_goodline_callback) (int lineCount, char *lineText)
                                   ;
typedef
void(*ftt_badline_callback) (int lineCount, char *lineText, char *errorText)
                                                    ;

extern "C" void ftt_ReportErrors (Context context, FortTextTree ftt, ftt_banner_callback banner, ftt_goodline_callback good, ftt_badline_callback bad, Boolean *has_errors_p)





                          ;
# 286 "../../../libs/frontEnd/fortTextTree/FortTextTree.h"
extern "C" void ftt_getTextTree (FortTextTree ftt, TextTree *tt);
# 38 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_header.h" 2





# 1 "../../../libs/moduleAnalysis/dependence/dependenceTest/dt_info.h" 1
# 21 "../../../libs/moduleAnalysis/dependence/dependenceTest/dt_info.h"
typedef struct mem_list
{
 struct mem_list *next;
 char *buf;
} Mem_list;

typedef struct dt_info_struct
{
 int loop_free;
 Mem_list *loop_mem;

 int ref_free;
 Mem_list *ref_mem;

 int rsd_free;
 Mem_list *rsd_mem;

 int rvec_free;
 Mem_list *rvec_mem;

 int str_free;
 Mem_list *str_mem;

} *DT_infoPtr, DT_info;

struct Rsd_section_struct;
typedef struct Rsd_section_struct Rsd_section;
struct Rsd_vector_struct;
typedef struct Rsd_vector_struct Rsd_vector;

extern "C" DT_info * dt_create_info (void);
extern "C" void dt_finalize_info (DT_info *dt);
extern "C" void dt_reset_info (DT_info *dt);
extern "C" Rsd_section* dt_alloc_rsd (DT_info *dt);
extern "C" Rsd_vector* dt_alloc_rsd_vector (DT_info *dt);
# 44 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_header.h" 2


# 1 "../../../libs/moduleAnalysis/dependence/interface/depType.h" 1
# 14 "../../../libs/moduleAnalysis/dependence/interface/depType.h"
typedef enum DependenceType {
 dg_true,
 dg_anti,
 dg_output,
 dg_input,
 dg_inductive,
 dg_exit,
 dg_io,
 dg_call,
 dg_control,
 dg_unknown
} DepType;
# 47 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_header.h" 2





# 1 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h" 1
# 51 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
typedef enum { var_shared = 0, var_common = 1, var_equiv_common = 2,
   var_reserved = 3, var_private = 4 } VarType;






struct slist {
    char *name;
    AST_INDEX def_before;
    AST_INDEX use_after;
    VarType why;
    Boolean user;
    char *cblock;
    int dim;
    struct slist *next;
};

typedef struct slist Slist;





typedef struct loop_info Loop_info;





typedef struct Loops LI_Instance;
# 91 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
typedef enum
{li_noflow, li_struct, li_unstruct, li_back_branch } li_flow_type;
# 112 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" LI_Instance * li_create_instance (void);



extern "C" void li_free ( LI_Instance * LI );
# 125 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" int loop_info_loopLevel ( Loop_info *lptr );






extern "C" Slist * li_create_Slist (void);

extern "C" void li_init_Slist (Slist * sptr, char * name, char * block, int dim)
                                                      ;
# 145 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" Boolean li_save_index (FortTextTree ftt, LI_Instance * LI, FILE * indexFP)
                   ;





extern "C" LI_Instance * readindex (FILE * ifile_ptr, MapInfoOpaque map);
# 164 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" Boolean check_if_shared (LI_Instance * LI, DepType dtype, char *name, Slist ** Q)
                                                             ;
# 183 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" Loop_info * el_add_loop ( LI_Instance * LI, AST_INDEX prev_loop, AST_INDEX lindex, int level)
                                                      ;







extern "C" void el_remove_loop ( LI_Instance * LI, AST_INDEX loop );
# 207 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" Generic el_remove_shared_var ( LI_Instance * LI, AST_INDEX loop, char * var )
                                                    ;
# 217 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" void el_add_shared_var ( LI_Instance * LI, AST_INDEX loop, Slist * s )
                                                   ;







extern "C" void el_force_add_shared_var ( LI_Instance * LI, AST_INDEX loop, Slist * s )
                                                   ;
# 236 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" Generic el_remove_private_var ( LI_Instance * LI, AST_INDEX loop, char * var )
                                                    ;
# 246 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" void el_add_private_var ( LI_Instance * LI, AST_INDEX loop, Slist * p )
                                                   ;
# 256 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" void el_add_private_up ( LI_Instance * LI, AST_INDEX loop, char * var )
                                                    ;
# 274 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" Slist * el_create_new_node ( char * name, AST_INDEX def_before, AST_INDEX use_after, VarType why, char * cblock, int dim )

                                          ;
# 289 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" void el_change_shared_var_name ( LI_Instance * LI, AST_INDEX loop, char * oldname, char * newname, AST_INDEX def_before, AST_INDEX use_after, int dims )


                                                          ;
# 302 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" void el_change_private_var_name ( LI_Instance * LI, AST_INDEX loop, char * oldname, char * newname )
                                                                        ;
# 312 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" void el_flip_private ( LI_Instance * LI, AST_INDEX new_outer, AST_INDEX new_inner )
                                                                  ;
# 323 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" void el_copy_shared_list ( LI_Instance * LI, AST_INDEX n1, AST_INDEX n2 )
                                                    ;
# 334 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" void el_copy_private_list ( LI_Instance * LI, AST_INDEX n1, AST_INDEX n2 )
                                                    ;






extern "C" char * el_get_shared_list ( LI_Instance * LI );
# 352 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
typedef char *(*GetTextCallback) (Generic ped, AST_INDEX num);

extern "C" char * el_get_shared_info ( LI_Instance * LI, char * var, Generic handle, GetTextCallback get_text)

                                              ;
# 365 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" Boolean el_get_loop_info ( LI_Instance * LI, AST_INDEX node)
                                      ;
# 376 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" char * el_get_private_info ( LI_Instance * LI, char * var, Generic handle, GetTextCallback get_text )

                                                ;





extern "C" char * el_get_private_list ( LI_Instance * LI );
# 393 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" Slist * el_get_first_shared_node ( LI_Instance * LI, int * length, int type )
                                                ;







extern "C" int el_get_num_shared_vars ( LI_Instance * LI );







extern "C" int el_get_num_private_vars ( LI_Instance * LI );
# 423 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" Slist * el_get_next_shared_node ( LI_Instance * LI, Slist * s, int * length, int type )
                                                           ;




extern "C" Boolean is_private_var ( LI_Instance *LI, AST_INDEX var, AST_INDEX loop)
                                                       ;
# 440 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" Slist * el_get_first_private_node ( LI_Instance * LI, int * length, int type )
                                                ;
# 452 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" Slist * el_get_next_private_node ( LI_Instance * LI, Slist * s, int * length, int type )
                                                           ;
# 463 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" Boolean el_parallelized ( LI_Instance *LI );





extern "C" void el_set_parallelized_bit ( LI_Instance *LI );





extern "C" Loop_info * find_loop ( LI_Instance * LI, AST_INDEX lindex )
                                          ;




extern "C" Loop_info * li_cur_loop ( LI_Instance *LI );




extern "C" int el_cflow ( LI_Instance * LI );




extern "C" void li_set_cflow ( LI_Instance * LI, int cflow );







extern "C" void li_max_cflow ( LI_Instance * LI, int new_cflow );
# 510 "../../../libs/moduleAnalysis/dependence/loopInfo/li_instance.h"
extern "C" Boolean var_occurs_in_loop ( LI_Instance * LI, AST_INDEX loop, char * var )
                                                    ;



extern "C" AST_INDEX el_gen_SUBSCRIPT_get_name ( AST_INDEX index );



extern "C" Boolean el_is_identifier ( AST_INDEX index );



extern "C" Boolean el_is_subscript ( AST_INDEX index );





extern "C" Boolean already_exists (Slist *list, char *name);
# 53 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_header.h" 2


# 1 "../../../libs/moduleAnalysis/dependence/edgeList/el_instance.h" 1
# 29 "../../../libs/moduleAnalysis/dependence/edgeList/el_instance.h"
typedef struct edge_list Edge_List;

typedef struct dep_query Query;

typedef struct el_instance EL_Instance;
# 56 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_header.h" 2


# 1 "../../../libs/moduleAnalysis/cfg/cfg.h" 1
# 25 "../../../libs/moduleAnalysis/cfg/cfg.h"
# 1 "../../../libs/frontEnd/ast/cd_branch.h" 1
# 70 "../../../libs/frontEnd/ast/cd_branch.h"
typedef enum
{
    CD_UNCONDITIONAL = 0,
    CD_LOGICAL_IF = 1,
    CD_DO_LOOP = 2,
    CD_ARITHMETIC_IF = 3,
    CD_COMPUTED_GOTO = 4,
    CD_ASSIGNED_GOTO = 5,
    CD_OPEN_ASSIGNED_GOTO = 6,
    CD_I_O = 7,
    CD_CASE = 8,
    CD_ALTERNATE_RETURN = 9,
    CD_ALTERNATE_ENTRY = 10,
    CD_NUM_TYPES = 11
} CdBranchType;
# 106 "../../../libs/frontEnd/ast/cd_branch.h"
extern "C" CdBranchType cd_branch_type (AST_INDEX n);





extern "C" char * cd_branch_text (CdBranchType type);
# 26 "../../../libs/moduleAnalysis/cfg/cfg.h" 2





struct cfg_info_struct;
typedef struct cfg_info_struct *CfgInfo;




struct cfg_instance_struct;
typedef struct cfg_instance_struct *CfgInstance;


typedef Generic CfgEdgeId;
typedef Generic CfgNodeId;
typedef CfgEdgeId CfgCdId;






typedef void(*CFG_INSTANCE_FN) (Generic handle, CfgInstance cfg)
                                      ;
typedef void(*CFG_NODE_FN) (Generic handle, CfgInstance cfg, CfgNodeId node)
                                                      ;
typedef void(*CFG_EDGE_FN) (Generic handle, CfgInstance cfg, CfgEdgeId edge)
                                                      ;




typedef enum {
    CFG_GLOBAL,
    CFG_PROGRAM,
    CFG_FUNCTION,
    CFG_SUBROUTINE,
    CFG_BLOCK_DATA,
    CFG_FRAGMENT
} CfgInstanceType;
# 109 "../../../libs/moduleAnalysis/cfg/cfg.h"
extern "C" CfgInfo cfg_Open (FortTree ft)
                ;

extern "C" void cfg_Close (CfgInfo cfgGlobals)
                       ;

extern "C" AST_INDEX cfg_get_global_root (CfgInfo cfgGlobals);




extern "C" void cfg_Register (CfgInfo cfgGlobals, Generic handle, CFG_INSTANCE_FN create_instance, CFG_INSTANCE_FN destroy_instance, CFG_INSTANCE_FN dump_instance, CFG_NODE_FN create_node, CFG_NODE_FN destroy_node, CFG_NODE_FN dump_node, CFG_EDGE_FN create_edge, CFG_EDGE_FN destroy_edge, CFG_EDGE_FN dump_edge)
# 132 "../../../libs/moduleAnalysis/cfg/cfg.h"
                           ;

extern "C" void cfg_Deregister (CfgInfo cfgGlobals, Generic handle)
                                       ;
# 144 "../../../libs/moduleAnalysis/cfg/cfg.h"
extern "C" void cfg_TreeWillChange (CfgInfo cfgGlobals, AST_INDEX node);
extern "C" void cfg_TreeChanged (CfgInfo cfgGlobals, AST_INDEX node);
# 176 "../../../libs/moduleAnalysis/cfg/cfg.h"
extern "C" CfgInstance cfg_build_inst (CfgInfo cfgGlobals, AST_INDEX root, AST_INDEX endAst)
                                                         ;

extern "C" void cfg_destroy_inst (CfgInstance cfg);

extern "C" CfgInstance cfg_get_inst (CfgInfo cfgGlobals, char *name);




extern "C" CfgInstance cfg_get_first_inst (CfgInfo cfgGlobals);
# 195 "../../../libs/moduleAnalysis/cfg/cfg.h"
extern "C" CfgInstance cfg_get_next_inst (CfgInstance cfg);




extern "C" CfgInstanceType cfg_get_inst_type (CfgInstance cfg);
# 212 "../../../libs/moduleAnalysis/cfg/cfg.h"
extern "C" AST_INDEX cfg_node_to_ast (CfgInstance cfg, CfgNodeId n);





extern "C" CfgNodeId cfg_node_from_ast (CfgInstance cfg, AST_INDEX a);
# 234 "../../../libs/moduleAnalysis/cfg/cfg.h"
extern "C" CfgNodeId cfg_header_from_ast (CfgInstance cfg, AST_INDEX a);

extern "C" CfgNodeId cfg_preheader_from_ast (CfgInstance cfg, AST_INDEX a);
# 254 "../../../libs/moduleAnalysis/cfg/cfg.h"
extern "C" CfgNodeId cfg_start_node (CfgInstance cfg);





extern "C" CfgNodeId cfg_end_node (CfgInstance cfg);






extern "C" CfgNodeId cfg_get_first_node (CfgInstance cfg);





extern "C" CfgNodeId cfg_get_next_node (CfgInstance cfg, CfgNodeId node);






extern "C" CfgNodeId cfg_get_last_node (CfgInstance cfg);





extern "C" CfgNodeId cfg_get_prev_node (CfgInstance cfg, CfgNodeId node);
# 296 "../../../libs/moduleAnalysis/cfg/cfg.h"
extern "C" CfgNodeId cfg_node_max (CfgInstance cfg);




extern "C" CfgEdgeId cfg_edge_max (CfgInstance cfg);
# 318 "../../../libs/moduleAnalysis/cfg/cfg.h"
struct dominator_entry_struct;
typedef struct dominator_entry_struct *DomTree;

extern "C" DomTree cfg_get_predom (CfgInstance cfg);
extern "C" DomTree cfg_get_postdom (CfgInstance cfg);







extern "C" CfgNodeId dom_idom (DomTree dom, CfgNodeId node);




extern "C" CfgNodeId dom_kids (DomTree dom, CfgNodeId node);




extern "C" CfgNodeId dom_next (DomTree dom, CfgNodeId node);




extern "C" Boolean dom_is_dom (DomTree dom, CfgNodeId a, CfgNodeId b);




extern "C" CfgNodeId dom_lca (DomTree dom, CfgNodeId a, CfgNodeId b);




extern "C" void dom_print (DomTree dom, CfgNodeId root);




extern "C" Boolean cfg_is_reachable (CfgInstance cfg, CfgNodeId n);
extern "C" Boolean cfg_reaches_end (CfgInstance cfg, CfgNodeId n);
# 382 "../../../libs/moduleAnalysis/cfg/cfg.h"
struct tarjan_entry_struct;
typedef struct tarjan_entry_struct *TarjTree;






typedef enum {
    TARJ_NOTHING,
    TARJ_ACYCLIC,
    TARJ_INTERVAL,
    TARJ_IRREDUCIBLE
    } TarjType;




typedef enum {
    TARJ_NORMAL,
    TARJ_LOOP_ENTRY,
    TARJ_IRRED_ENTRY,
    TARJ_ITERATE
    } TarjEdgeType;

extern "C" TarjTree cfg_get_intervals (CfgInstance cfg);
# 416 "../../../libs/moduleAnalysis/cfg/cfg.h"
extern "C" void tarj_sort (CfgInstance cfg);





extern "C" TarjType tarj_type (TarjTree tarjans, CfgNodeId id);

extern "C" int tarj_level (TarjTree tarjans, CfgNodeId id);




extern "C" CfgNodeId tarj_outer (TarjTree tarjans, CfgNodeId id);




extern "C" CfgNodeId tarj_inners (TarjTree tarjans, CfgNodeId id);




extern "C" CfgNodeId tarj_next (TarjTree tarjans, CfgNodeId id);




extern "C" CfgNodeId tarj_inners_last (TarjTree tarjans, CfgNodeId id);




extern "C" Boolean tarj_is_header (TarjTree tarjans, CfgNodeId id);




extern "C" Boolean tarj_is_first (TarjTree tarjans, CfgNodeId id);




extern "C" Boolean tarj_is_last (TarjTree tarjans, CfgNodeId id);





extern "C" Boolean tarj_contains (TarjTree tarjans, CfgNodeId a, CfgNodeId b);




extern "C" int tarj_exits (TarjTree tarjans, CfgNodeId src, CfgNodeId dest);





extern "C" CfgNodeId tarj_loop_exited (TarjTree tarjans, CfgNodeId src, CfgNodeId dest)
                                                        ;





extern "C" TarjEdgeType tarj_edge_type (TarjTree tarjans, CfgNodeId src, CfgNodeId dest)
                                                    ;





extern "C" CfgNodeId tarj_lca (TarjTree tarjans, CfgNodeId a, CfgNodeId b);




extern "C" void tarj_print (TarjTree tarj, CfgNodeId node);




extern "C" Boolean cfg_is_backedge (CfgInstance cfg, CfgEdgeId edgeId);




extern "C" int cfg_get_forward_fanout (CfgInstance cfg, CfgNodeId cfgId);




extern "C" int cfg_get_forward_fanin (CfgInstance cfg, CfgNodeId cfgId);




extern "C" CfgNodeId cfg_containing_loop (CfgInstance cfg, AST_INDEX an);
# 554 "../../../libs/moduleAnalysis/cfg/cfg.h"
extern "C" CfgNodeId cfg_tarj_next (CfgInstance cfg, CfgNodeId cn, TraversalOrder order)
                            ;
# 584 "../../../libs/moduleAnalysis/cfg/cfg.h"
extern "C" CfgNodeId * cfg_top_sort (CfgInstance cfg);
# 596 "../../../libs/moduleAnalysis/cfg/cfg.h"
extern "C" CfgEdgeId cfg_first_from_ast (CfgInstance cfg, AST_INDEX a);
extern "C" CfgEdgeId cfg_first_from_cfg (CfgInstance cfg, CfgNodeId n);
extern "C" CfgEdgeId cfg_first_to_ast (CfgInstance cfg, AST_INDEX a);
extern "C" CfgEdgeId cfg_first_to_cfg (CfgInstance cfg, CfgNodeId n);

extern "C" CfgEdgeId cfg_next_from (CfgInstance cfg, CfgEdgeId e);
extern "C" CfgEdgeId cfg_next_to (CfgInstance cfg, CfgEdgeId e);

extern "C" CfgNodeId cfg_edge_src (CfgInstance cfg, CfgEdgeId e);
extern "C" CfgNodeId cfg_edge_dest (CfgInstance cfg, CfgEdgeId e);
extern "C" int cfg_edge_label (CfgInstance cfg, CfgEdgeId e);




extern "C" int cfg_node_fanin (CfgInstance cfg, CfgNodeId n);
extern "C" int cfg_node_fanout (CfgInstance cfg, CfgNodeId n);
# 623 "../../../libs/moduleAnalysis/cfg/cfg.h"
extern "C" CfgCdId cfg_cd_first_from (CfgInstance cfg, CfgNodeId n);
extern "C" CfgCdId cfg_cd_first_to (CfgInstance cfg, CfgNodeId n);

extern "C" CfgCdId cfg_cd_next_from (CfgInstance cfg, CfgCdId e);
extern "C" CfgCdId cfg_cd_next_to (CfgInstance cfg, CfgCdId e);

extern "C" CfgNodeId cfg_cd_src (CfgInstance cfg, CfgCdId e);
extern "C" CfgCdId cfg_cd_dest (CfgInstance cfg, CfgCdId e);
extern "C" int cfg_cd_label (CfgInstance cfg, CfgCdId e);
extern "C" int cfg_cd_level (CfgInstance cfg, CfgCdId e);
# 642 "../../../libs/moduleAnalysis/cfg/cfg.h"
extern "C" void cfg_dump (CfgInstance cfg);
extern "C" void cfg_stats (CfgInstance cfg);
extern "C" void cfg_sorted_dump (CfgInstance cfg);





extern "C" SymDescriptor cfg_get_inst_symtab (CfgInstance cfg);
extern "C" AST_INDEX cfg_get_inst_root (CfgInstance cfg);
extern "C" char* cfg_get_inst_name (CfgInstance cfg);
extern "C" CfgInfo cfg_get_globals (CfgInstance cfg);

extern "C" CdBranchType cfg_branch_type (CfgInstance cfg, CfgNodeId n);
# 59 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_header.h" 2







extern "C" void dg_all (Context module_context, Context mod_in_prog_context, Context prog_context, FortTextTree ftt, FortTree ft, DG_Instance **DG, EL_Instance **EL, LI_Instance **LI, SideInfo **SI, DT_info **DT,CfgInfo *cfgModule, Boolean InputDep)






                      ;

extern "C" Boolean dg_save_instance (FortTextTree ftt, DG_Instance *dg_instance, FILE *depFP)
                    ;






extern "C" DG_Instance * dg_create_instance (void);
# 93 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_header.h"
extern "C" void dg_destroy (DG_Instance * dg);
# 107 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_header.h"
extern "C" void dg_graph_filename ( Context module_context, char *filename )
                                              ;

extern "C" void dg_index_filename ( Context module_context, char *filename )
                                              ;

extern "C" void dg_rsd_filename ( Context module_context, char *filename )
                                              ;






extern "C" Boolean dg_readgraph ( DG_Instance ** DG, LI_Instance ** LI, Context module_context, Context mod_in_prog_context, Context prog_context, FortTextTree ftt, FortTree ft, SideInfo * infoPtr, DT_info * dt_info, AST_INDEX root, CfgInfo cfgModule)





                                                          ;




extern "C" Boolean dg_open_files ( Context module_context, Context mod_in_prog_context, Context prog_context, char * access, FILE **gptr, FILE **iptr, FILE **rsdptr)




                                            ;

extern "C" void dg_close_files (FILE *gptr, FILE *iptr, FILE *rsdptr)
                                         ;




extern "C" Boolean dg_check_file_date ( Context module_context1, Context mod_in_prog_context, Context module_context2 )


                              ;




extern "C" GraphType dg_get_graph_type ( char depFile_path[1024] )
                                         ;
# 167 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_header.h"
extern "C" DG_Edge * dg_create_edge_structure (DG_Instance * DG, int num_edges )
                                     ;






extern "C" DG_Edge * dg_get_edge_structure (DG_Instance * DG);



extern "C" EDGE_INDEX dg_alloc_edge (DG_Instance * DG, DG_Edge **edgeptr);





extern "C" void dg_free_edge (DG_Instance * DG, DG_Edge *edgeptr, EDGE_INDEX edge)
                                                        ;




extern "C" void dg_add_edge (DG_Instance * DG, EDGE_INDEX edge);
# 202 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_header.h"
extern "C" void dg_delete_edge (DG_Instance * DG, EDGE_INDEX edge);




extern "C" void dg_delete_free_edge (DG_Instance * DG, EDGE_INDEX edge);
# 216 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_header.h"
extern "C" int dg_alloc_level_vector (DG_Instance * DG, int size);




extern "C" void dg_free_level_vector (DG_Instance * DG, int vector);







extern "C" int dg_alloc_ref_list (DG_Instance * DG);



extern "C" void dg_free_ref_list (DG_Instance * DG, int ref);







extern "C" EDGE_INDEX dg_first_src_stmt (DG_Instance * DG, int src_vec, int level)
                                             ;





extern "C" EDGE_INDEX dg_first_sink_stmt (DG_Instance * DG, int sink_vec, int level)
                                              ;





extern "C" EDGE_INDEX dg_first_src_ref (DG_Instance * DG, int src_ref);



extern "C" EDGE_INDEX dg_first_sink_ref (DG_Instance * DG, int sink_ref);



extern "C" EDGE_INDEX dg_next_src_stmt (DG_Instance * DG, int edge);




extern "C" EDGE_INDEX dg_next_src_ref (DG_Instance * DG, int edge);




extern "C" EDGE_INDEX dg_next_sink_stmt (DG_Instance * DG, int edge);




extern "C" EDGE_INDEX dg_next_sink_ref (DG_Instance * DG, int edge);




extern "C" EDGE_INDEX dg_prev_src_stmt (DG_Instance * DG, int edge);



extern "C" EDGE_INDEX dg_prev_src_ref (DG_Instance * DG, int edge);




extern "C" EDGE_INDEX dg_prev_sink_stmt (DG_Instance * DG, int edge);



extern "C" EDGE_INDEX dg_prev_sink_ref (DG_Instance * DG, int edge);




extern "C" int dg_length_level_vector (DG_Instance * DG, int vec);
# 315 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dg_header.h"
extern "C" void dg_set_external_analysis ( DG_Instance *dg, GraphType gtype )
                                        ;

extern "C" GraphType dg_get_external_analysis ( DG_Instance *dg );



extern "C" void dg_set_set_interchange ( DG_Instance *dg, Boolean flag )
                                     ;

extern "C" Boolean dg_get_set_interchange ( DG_Instance *dg );



extern "C" void dg_set_dependence_header ( DG_Instance *dg, char * str )
                                   ;

extern "C" char * dg_get_dependence_header ( DG_Instance *dg );



extern "C" void dg_set_local_analysis ( DG_Instance *dg, Boolean flag )
                                     ;

extern "C" Boolean dg_get_local_analysis ( DG_Instance *dg );



extern "C" void dg_set_input_dependences ( DG_Instance *dg, Boolean flag )
                                     ;

extern "C" Boolean dg_get_input_dependences ( DG_Instance *dg );



extern "C" Boolean readgraph (FILE *gfile_ptr, MapInfoOpaque map, DG_Instance *DG, DT_info *dt, SideInfo *infoPtr, FortTextTree ftt)
                                                                              ;

extern "C" void readrsd (FILE *rsdptr, MapInfoOpaque map, DG_Instance *dg, DT_info *dt, SideInfo *infoPtr, FortTextTree ftt)
                                                                         ;

extern "C" DepType get_dtype (char dchar);

extern "C" Boolean pfc_bogus (char *name);

extern "C" void read_free (char *str1, char *str2, char *str3, char *str4);

extern "C" char* dg_var_name (DG_Edge *Edge);
# 43 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dp.h" 2
# 54 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dp.h"
typedef Generic(*ped_GetFortEditorFunc) (Generic pedcp)
                 ;
typedef void(*ped_TreeWillChangeFunc) (Generic pedcp,AST_INDEX node)
                                ;
typedef void(*ped_TreeChangedFunc) (Generic ped,AST_INDEX node)
                              ;
typedef void(*ped_UpdateNodeInfoFunc) (Generic pedcp,AST_INDEX node, int dtinfo)
                                            ;
typedef char *(*ped_GetLineFunc) (Generic pedcp,AST_INDEX node)
                                ;
typedef void(*ped_SelectNodeFunc) (Generic pedcp,AST_INDEX node)
                                ;
typedef void(*ped_RedrawSrcSinkFunc) (Generic pedcp,AST_INDEX loop, AST_INDEX node1, AST_INDEX node2, AST_INDEX src, AST_INDEX sink)

                                 ;
typedef void(*ped_RedrawLoopFunc) (Generic pedcp,AST_INDEX node)
                                ;

typedef struct PedInfoStruct
{

    Generic ed_handle;
    ped_GetFortEditorFunc GetFortEditor;
    ped_TreeWillChangeFunc TreeWillChange;
    ped_TreeChangedFunc TreeChanged;
    ped_UpdateNodeInfoFunc UpdateNodeInfo;
    ped_GetLineFunc GetLine;
    ped_SelectNodeFunc SelectNode;
    ped_RedrawSrcSinkFunc RedrawSrcSink;
    ped_RedrawLoopFunc RedrawLoop;


    Generic ftt;
    Generic ft;
    AST_INDEX root;


    CfgInfo cfg_module;


    AST_INDEX selection;
    AST_INDEX selected_loop;
    AST_INDEX prev_loop;


    Generic dep_pane;
    Generic dep_header_pane;
    Generic dep_title_pane;
    Point dep_size;


    Generic current_dependence;
    AST_INDEX prev_src;
    AST_INDEX prev_sink;


    DG_Instance *DG;


    SideInfo *info;


    struct Loops *LI;


    Stack EL_stack;
    struct el_instance *EL;
    int stack_depth;


    struct dt_info_struct *dt_info;







    Generic mh_config;



    Boolean edit_enabled;
    Boolean edit_performed;
    Boolean edit_saved;


    Context pgm_context;
    Generic pgm_callgraph;

} Ped, *PedInfo;
# 202 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dp.h"
extern "C" Generic get_info (PedInfo ped,AST_INDEX astindex, Info_type infotype)
                          ;
extern "C" void create_info (SideInfo * infoPtr,AST_INDEX astindex);
extern "C" void put_info (PedInfo ped, AST_INDEX astindex, Info_type infotype,Generic value)
                                            ;





extern "C" void ped_init_infoPtr (PedInfo ped, SideInfo *infoPtr)
                                    ;


extern "C" void ped_gets_infoPtr ( PedInfo ped, SideInfo *infoPtr)
                                     ;
# 37 "../../../libs/Memoria/include/mh.h" 2


# 1 "../../../libs/frontEnd/ast/groups.h" 1
# 21 "../../../libs/frontEnd/ast/groups.h"
extern "C" Boolean is_f77_subprogram_stmt (AST_INDEX n);
extern "C" Boolean is_f77_initial_specification_stmt (AST_INDEX n);
extern "C" Boolean is_f77_other_specification_stmt (AST_INDEX n);
extern "C" Boolean is_f77_final_specification_stmt (AST_INDEX n);
extern "C" Boolean is_f77_specification_stmt (AST_INDEX n);
extern "C" Boolean is_f77_executable_stmt (AST_INDEX n);
extern "C" AST_INDEX first_f77_executable_stmt (AST_INDEX stmt_list);
extern "C" Boolean is_smp_extension_other_specification_stmt (AST_INDEX n);
extern "C" Boolean is_smp_specification_stmt (AST_INDEX n);
extern "C" Boolean is_smp_extension_executable_stmt (AST_INDEX n);
extern "C" Boolean is_smp_loop_specification_stmt (AST_INDEX n);
extern "C" Boolean is_smp_loop_stmt (AST_INDEX n);
extern "C" Boolean is_smp_executable_stmt (AST_INDEX n);
extern "C" AST_INDEX first_smp_executable_stmt (AST_INDEX stmt_list);
extern "C" AST_INDEX first_smp_executable_stmt_in_loop (AST_INDEX stmt_list);
extern "C" Boolean is_f77_statement (AST_INDEX n);
extern "C" Boolean is_f77_operator (AST_INDEX n);
extern "C" AST_INDEX first_executable_stmt (Boolean (*pre_cond)(AST_INDEX), Boolean (*spec_cond)(AST_INDEX), Boolean (*post_cond)(AST_INDEX), AST_INDEX stmt_list)

                                                                                        ;
# 83 "../../../libs/frontEnd/ast/groups.h"
extern "C" Boolean is_loop (AST_INDEX n);
extern "C" Boolean is_executable (AST_INDEX n);
extern "C" Boolean is_io_keyword (AST_INDEX n);
extern "C" Boolean cprop_loop_stmt (AST_INDEX n);
extern "C" Boolean cprop_executable_stmt (AST_INDEX n);
extern "C" Boolean cprop_operator (AST_INDEX n);
extern "C" Boolean cprop_sub_expr_op (AST_INDEX n);
extern "C" Boolean cprop_inquiry_stmt (AST_INDEX n);
extern "C" Boolean cprop_common_stmt (AST_INDEX n);
extern "C" Boolean cprop_labelled_stmt (AST_INDEX n);
extern "C" Boolean cprop_new_instance (AST_INDEX n);
extern "C" Boolean cprop_poss_gets_node (AST_INDEX n);
extern "C" Boolean cprop_file_pos_stmt (AST_INDEX n);
extern "C" Boolean cprop_io_stmt (AST_INDEX n);
extern "C" Boolean cprop_stmt_containing_expr (AST_INDEX n);
extern "C" Boolean cprop_has_stmt_list (AST_INDEX n);
extern "C" Boolean cprop_has_close_lbl_def (AST_INDEX n);
extern "C" Boolean cprop_used_node (AST_INDEX n);
extern "C" Boolean cprop_control_flow (AST_INDEX n);
extern "C" Boolean cprop_poss_alternate_edges (AST_INDEX n);
extern "C" Boolean cprop_usable_exp (Generic t, AST_INDEX n);
extern "C" Boolean cprop_exit_stmt (AST_INDEX n);
extern "C" Boolean cprop_struct_guard (AST_INDEX n);
extern "C" Boolean cprop_array_ident (Generic t, AST_INDEX n);
extern "C" Boolean cprop_dummy_proc (Generic t, AST_INDEX n);
# 40 "../../../libs/Memoria/include/mh.h" 2


# 1 "../../../libs/Memoria/include/header.h" 1
# 27 "../../../libs/Memoria/include/header.h"
# 1 "../../../libs/Memoria/include/LoopStats.h" 1
# 10 "../../../libs/Memoria/include/LoopStats.h"
typedef struct localityrow {
  int Invariant,
      Spatial,
      None;
 } LocalityRowType;

typedef struct localitystruct {
  LocalityRowType SingleGroups,
                  MultiGroups,
                  MultiRefs;
 } LocalityMatrixType;

typedef struct loopstatstype {
  Boolean Perfect;
  int ContainsExit,
   ContainsIO,
   ContainsCall,
   ContainsConditionalDO;
  int TotalLoops,
          InMemoryOrder,
          NotInMemoryOrder,
          NearbyPermutationAttained,
          InterchangedIntoMemoryOrder,
          ObtainedInnerLoop,
          InnerLoopAlreadyCorrect,
          TimeStepPreventedMemoryOrder,
          DesiredInnerTimeStep,
          WrongInnerLoop,
          NextInnerLoop,
          UnsafeInterchange,
          DistributionUnsafe,
          NeedsScalarExpansion,
          Reversed,
          TooComplex,
          Imperfect,
          Nests,
          NestingDepth[10];
  LocalityMatrixType OriginalLocalityMatrix,
                     FinalLocalityMatrix,
                     MemoryLocalityMatrix;
  int OriginalOtherSpatialGroups,
          FinalOtherSpatialGroups,
          MemoryOtherSpatialGroups;
  float FinalRatio[10],
          MemoryRatio[10];
  float PredictedFinalBalance,
          PredictedInitialBalance,
          PredictedP_L,
          InitialBalanceWithInterlock,
          ActualFinalBalance,
          FinalBalanceWithInterlock,
          InitialInterlock,
          FinalInterlock;
  int PredictedFPRegisterPressure,
          ActualFPRegisterPressure,
          UnrolledLoops,
          NotUnrolled,
          SingleDepth;
  float NotUnrolledBalance,
          NotUnrolledBalanceWithInterlock,
          NotUnrolledInterlock;
  int NotUnrolledFPRegisterPressure;
  float SingleDepthBalance,
          SingleDepthBalanceWithInterlock,
          SingleDepthInterlock;
  int SingleDepthFPRegisterPressure;
  int Distribute,
          Interchange,
          NoImprovement,
          Normalized,
          AlreadyBalanced,
          InterlockCausedUnroll;



  int NumLoop_badexit,
          NumLoop_backjump,
   NumLoop_illjump,
   Numbadflow,
          FPRegisterPressure,
   SRRegisterPressure,
   NumLoopReplaced,
   NumLoopSpilled,
          NumRefRep,
          NumBasicBlock,
   NumZeroFPLoop,
          NumInnermostLoop,



   NumLIAV,
   NumLCAV,
   NumLIPAV,
   NumLCPAV,
   NumInv,
   NumLC1,


   UniformRefs,
   NonUniformRefs,
          NonUniformLoops,
   NonUniformLoopsReplaced,
   NonUniformLoopsZeroFP;
  float LoopBal;

  int NumKilledGenerators;
  int NumNoConsistentDependence;


  int NumberOfTrueDependences;
  int NumberOfLoopCarriedTrueDependences;
  int NumberOfAntiDependences;
  int NumberOfLoopCarriedAntiDependences;
  int NumberOfOutputDependences;
  int NumberOfLoopCarriedOutputDependences;
  int NumberOfInputDependences;
  int NumberOfLoopCarriedInputDependences;

  int IntRegsMinAvg;
  int IntRegsMinDist;
  int IntRegsLiveAcross;
  int FloatRegsMinAvg;
  int FloatRegsMinDist;
  int FloatRegsLiveAcross;
  int II;
 } LoopStatsType;
# 28 "../../../libs/Memoria/include/header.h" 2



# 1 "../../../libs/Memoria/include/ArrayTable.h" 1
# 13 "../../../libs/Memoria/include/ArrayTable.h"
typedef struct ArrayTableStruct {
  AST_INDEX node;
  int LineNum;
  char *Text;
 } ArrayTableType;

typedef struct TableInfoTypeStruct {
  ArrayTableType *ArrayTable;
  int count;
  int LineNum;
  FortTextTree ftt;
  int MaxLength;
 } TableInfoType;

extern "C" void memory_BuildArrayTableInfo (AST_INDEX root, int level, TableInfoType *TableInfo, arena_type *ar)


                       ;
# 32 "../../../libs/Memoria/include/header.h" 2

extern "C" void memory_interchange_stats (PedInfo ped,AST_INDEX root, int level, LoopStatsType *LoopStats, char *routine, char *program, SymDescriptor symtab, arena_type *ar)





                            ;

extern "C" void memory_loop_interchange (PedInfo ped,AST_INDEX root, int level,SymDescriptor symtab, arena_type *ar)

                          ;

extern "C" AST_INDEX memory_unroll_and_jam (PedInfo ped,AST_INDEX root, int level,int num_loops, SymDescriptor symtab, arena_type *ar, LoopStatsType *LoopStats)



                                ;

extern "C" void memory_scalar_replacement (PedInfo ped,AST_INDEX root, int level,SymDescriptor symtab, arena_type *ar, LoopStatsType *LoopStats)


                               ;

extern "C" void memory_software_prefetch (PedInfo ped,AST_INDEX root, int level,SymDescriptor symtab, arena_type *ar)

                           ;

extern "C" void memory_dead_cache_lines (PedInfo ped,AST_INDEX root, int level,SymDescriptor symtab, arena_type *ar)

                           ;

extern "C" void memory_AnnotateWithCacheCalls (AST_INDEX root, int level, char *routine, FortTextTree ftt, SymDescriptor symtab)


                               ;

extern "C" void ApplyMemoryCompiler (int selection, PedInfo ped, AST_INDEX root, FortTree ft, Context contxt, char *mc_config_file)

                              ;

extern "C" void memory_stats_total (char *program);

extern "C" void memory_UnrollStatsTotal (char *program);

extern "C" void memory_SRStatsTotal (char *program);

extern "C" void SRStatsDump (FILE *logfile, LoopStatsType *LoopStats);

extern "C" void memory_PerformCacheAnalysis (PedInfo ped, SymDescriptor symtab, arena_type *ar, AST_INDEX root, int level, int loop_num)




                       ;
extern "C" void memory_PerformAddressOptimization (PedInfo ped, SymDescriptor symtab, arena_type *ar, AST_INDEX root, int level, int loop_num)




                           ;

extern "C" void memory_AnnotateWithLDSTCount (AST_INDEX root, int level, Boolean MainProgram)

                                   ;
extern "C" void memory_DepStatsTotal (char *program);
extern "C" void memory_GetDependenceStats (PedInfo ped, AST_INDEX root, LoopStatsType *LoopStats, SymDescriptor symtab, arena_type *ar, int level)




                          ;
extern "C" void memory_PerformF2iAnalysis (PedInfo ped, SymDescriptor symtab, arena_type *ar, AST_INDEX root, int level)



                          ;

extern "C" void DepStatsDump (FILE *logfile, LoopStatsType *LoopStats);
# 43 "../../../libs/Memoria/include/mh.h" 2


# 1 "../../../libs/Memoria/include/mem_util.h" 1
# 28 "../../../libs/Memoria/include/mem_util.h"
# 1 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/el.h" 1
# 33 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/el.h"
# 1 "../../../libs/moduleAnalysis/dependence/edgeList/el_header.h" 1
# 35 "../../../libs/moduleAnalysis/dependence/edgeList/el_header.h"
# 1 "../../../libs/moduleAnalysis/dependence/controlDependence/cd_graph.h" 1
# 30 "../../../libs/moduleAnalysis/dependence/controlDependence/cd_graph.h"
# 1 "../../../libs/moduleAnalysis/dependence/utilities/strong.h" 1
# 36 "../../../libs/moduleAnalysis/dependence/utilities/strong.h"
typedef struct adj_list_node {
     AST_INDEX statement;
     AST_INDEX do_node;
     int carried_dep;
     int region;
     int loop;
     int rlink;
     int first_in_list;
     Boolean marked;
     int lowlink;
     int dfnumber;
     int stacklink;
     Boolean instack;
} Adj_Node ;

typedef struct adj_list_link {
     int next_in_list;
     int node_index;
     Boolean carried;
} Adj_Link;

typedef struct region_type {
     Boolean parallel;
     int first_stmt;
     Boolean visited;
} Region_Type;

typedef struct Loop_Type_struct {
     UtilList *stmts;
     Boolean parallel;
} Loop_Type;

typedef struct adj_list {
     Adj_Node *node_array;
     Adj_Link *link_array;
     Region_Type *region_array;
     Loop_Type *loop_array;
     int last_used_node;
     int nodes_allocated;
     int last_used_link;
     int links_allocated;
     int max_region;
     int max_loop;
} Adj_List;




extern "C" int pt_allocnode (Adj_List *adj_list, AST_INDEX statement, AST_INDEX do_node)
                                                               ;


extern "C" void pt_strong_regions ( Adj_List * adj_list );


extern "C" int pt_getindex ( Adj_List * adj_list, AST_INDEX stmt );


extern "C" Adj_List * pt_create_adj_list (void);


extern "C" void pt_destroy_adj_list ( Adj_List * adj_list );


extern "C" void pt_add_edge (Adj_List * adj_list, AST_INDEX from_stmt, AST_INDEX to_stmt, Boolean carried )

                                         ;


extern "C" char * pt_print_regions ( Generic AL, Generic handle );
# 114 "../../../libs/moduleAnalysis/dependence/utilities/strong.h"
extern "C" int pt_split_loop (Adj_List *adj_list, AST_INDEX node);
# 31 "../../../libs/moduleAnalysis/dependence/controlDependence/cd_graph.h" 2
# 68 "../../../libs/moduleAnalysis/dependence/controlDependence/cd_graph.h"
struct cd_edge;

typedef struct cd_edge cdEdge;
typedef struct cd_edge *cdEdges;





struct cd_node;

typedef struct cd_node cdNode;
typedef struct cd_node *cdNodes;





typedef struct cd_graph ControlDep;






typedef struct ld_node ldNode;




typedef struct ld_desc ldDesc;
# 111 "../../../libs/moduleAnalysis/dependence/controlDependence/cd_graph.h"
extern "C" ControlDep * dstr_cd_graph (DG_Instance * dg, LI_Instance * li, SideInfo * infoPtr, Adj_List * adj_list, AST_INDEX loop )

                                          ;





extern "C" AST_INDEX cd_insert_evar (DG_Instance * dg, SideInfo * infoPtr, ControlDep * cd, int p, int first, int n, AST_INDEX loop )

                                                               ;


extern "C" Boolean dstr_cd_restructure (DG_Instance * dg, LI_Instance * li, SideInfo * infoPtr, ControlDep * cd, Adj_List * adj_list, AST_INDEX loop )

                                                           ;


extern "C" AST_INDEX dstr_cd_rebuild_tree (LI_Instance * li, ControlDep * cd, Adj_List * adj_list, AST_INDEX old_do, int level )

                                                       ;




extern "C" void dg_build_module_cds (DG_Instance * dg, SideInfo * infoPtr, CfgInfo cfgGlobals)
                                                                    ;






extern "C" void dg_build_subprogram_cds (DG_Instance * dg, SideInfo * infoPtr, CfgInstance cfg)
                                                          ;
# 156 "../../../libs/moduleAnalysis/dependence/controlDependence/cd_graph.h"
extern "C" ControlDep * dg_build_cdg (DG_Instance * dg, SideInfo * infoPtr, AST_INDEX root, double extra)

                                 ;
# 168 "../../../libs/moduleAnalysis/dependence/controlDependence/cd_graph.h"
extern "C" Boolean dg_delete_cds (DG_Instance * dg, SideInfo * infoPtr, AST_INDEX root, Boolean check)

                                  ;






extern "C" void cdg_free (ControlDep *cd);



extern "C" void cdg_delete_edge (cdEdge *edge, cdEdge *prev);



typedef int(*cdg_action_callback) (cdNode *node, Generic parm)
                              ;

extern "C" int cdg_walk_nodes (ControlDep *cdg, cdNode *node, cdg_action_callback pre_action, cdg_action_callback post_action, Generic parm)

                                                                ;







extern "C" void cdg_print (ControlDep *cd);
# 36 "../../../libs/moduleAnalysis/dependence/edgeList/el_header.h" 2
# 48 "../../../libs/moduleAnalysis/dependence/edgeList/el_header.h"
extern "C" EL_Instance * el_create_instance ( int num_edges );

extern "C" void el_destroy_instance ( EL_Instance * EL );



extern "C" Boolean el_show_loopCarried ( EL_Instance * el );



extern "C" int el_num_lc_shared ( EL_Instance * el );






extern "C" EL_Instance * el_copy_active_edge_list_structure ( EL_Instance * oldel )
                           ;





extern "C" void el_copy_edge ( DG_Instance * dg, DT_info * dt, DG_Edge * edgeptr, EDGE_INDEX oldedge, EDGE_INDEX newedge )

                                               ;
# 88 "../../../libs/moduleAnalysis/dependence/edgeList/el_header.h"
extern "C" int el_new_loop ( EL_Instance * el, LI_Instance * li, SideInfo * infoPtr, DG_Instance * dg, AST_INDEX loop)
                                                          ;

extern "C" int el_total_num_deps ( EL_Instance * el );

extern "C" Boolean edge_is_active ( EL_Instance * el, int i );





extern "C" EDGE_INDEX get_dependence ( EL_Instance * el, int i );





extern "C" EDGE_INDEX first_dependence ( EL_Instance * el );





extern "C" EDGE_INDEX next_dependence ( EL_Instance * el );





extern "C" EDGE_INDEX prev_dependence ( EL_Instance * el );






extern "C" void el_hide ( EL_Instance * el, DG_Instance * dg, char * list1, char * list2, AST_INDEX ind1, AST_INDEX ind2, char * list3, char * list4)



                                ;
extern "C" void el_show ( EL_Instance * el, DG_Instance * dg, char * list1, char * list2, AST_INDEX ind1, AST_INDEX ind2, char * list3, char * list4)



                                ;
extern "C" void el_remove ( EL_Instance * el, DG_Instance * dg, char * list1, char * list2, AST_INDEX ind1, AST_INDEX ind2, char * list3, char * list4)



                                ;
extern "C" void el_showall ( EL_Instance * el )
                        ;
extern "C" void el_sort ( EL_Instance * el, DG_Instance * dg, char * sortlist )
                                                           ;

extern "C" void el_query_convert ( EL_Instance *el )
                       ;




extern "C" void el_query_init ( EL_Instance *el, char *type, char *text_name, AST_INDEX src_ast, AST_INDEX sink_ast, char *text_dims, char *text_block)


                                        ;




extern "C" void el_query_free ( EL_Instance *el)
                                 ;
# 185 "../../../libs/moduleAnalysis/dependence/edgeList/el_header.h"
extern "C" int el_get_dims ( EL_Instance * el, int num );






extern "C" char * el_get_block ( EL_Instance * el, int num );




extern "C" char * el_gen_get_text ( AST_INDEX index );
# 209 "../../../libs/moduleAnalysis/dependence/edgeList/el_header.h"
extern "C" void el_set_view_lc ( EL_Instance * el, Boolean lc );


extern "C" void el_set_view_control ( EL_Instance * el, Boolean control );


extern "C" void el_set_view_li ( EL_Instance * el, Boolean li );


extern "C" void el_set_view_private ( EL_Instance * el, Boolean privatev );



extern "C" Boolean el_get_view_lc ( EL_Instance * el );


extern "C" Boolean el_get_view_control ( EL_Instance * el );


extern "C" Boolean el_get_view_li ( EL_Instance * el );


extern "C" Boolean el_get_view_private ( EL_Instance * el );
# 245 "../../../libs/moduleAnalysis/dependence/edgeList/el_header.h"
extern "C" void el_put_level_vector ( );




extern "C" int el_get_ref_ptr ( );


extern "C" void el_put_ref_ptr ( );
# 264 "../../../libs/moduleAnalysis/dependence/edgeList/el_header.h"
extern "C" void el_put_dep_ast_info ( DG_Edge * Edge_array, int e, AST_INDEX src, AST_INDEX sink)
                                                                 ;
# 34 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/el.h" 2
# 47 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/el.h"
extern "C" void ped_li_free ( PedInfo ped );







extern "C" int ped_el_new_loop ( PedInfo ped, AST_INDEX node);
# 29 "../../../libs/Memoria/include/mem_util.h" 2



# 1 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dg.h" 1
# 12 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dg.h"
# 1 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dep_dg.h" 1
# 48 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dep_dg.h"
struct struct_dg_edge
{
    AST_INDEX src;
    AST_INDEX sink;
    int level;
    DepType type;
    char *src_str;
    char *sink_str;



    Boolean ic_preventing;
    Boolean ic_sensitive;
    ConsistentType consistent;
    Boolean symbolic;
    Boolean used;
    CdBranchType cdtype;
    int cdlabel;



    int src_ref;
    int sink_ref;



    int src_vec;
    int sink_vec;

    int label;



    int dt_type;
    int dt_data[10];
    char *dt_str;
} ;







struct struct_carried_deps
{
  int all_num;
  int true_num;
  int anti_num;
  int out_num;
  DG_Edge *true_deps[1000];
  DG_Edge *anti_deps[1000];
  DG_Edge *out_deps[1000];
} ;
# 111 "../../../libs/moduleAnalysis/dependence/dependenceGraph/dep_dg.h"
extern "C" int dg_print_deps (AST_INDEX root, DG_Instance * dg, SideInfo * infoPtr)
                                                           ;



extern "C" Carried_deps * dg_carried_deps (DG_Instance * dg, SideInfo * infoPtr, AST_INDEX loop)
                                                         ;
# 13 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dg.h" 2
# 1 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/cd.h" 1
# 82 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/cd.h"
extern "C" ControlDep * ped_dg_build_cdg (PedInfo ped, AST_INDEX root, double extra)
                                              ;
# 95 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/cd.h"
extern "C" Boolean ped_dg_delete_cds (PedInfo ped, AST_INDEX root, Boolean check)
                                               ;
# 107 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/cd.h"
extern "C" ControlDep * dstr_graph (PedInfo ped, AST_INDEX loop)
                                ;
# 14 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dg.h" 2
# 33 "../../../libs/Memoria/include/mem_util.h" 2



# 1 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dt.h" 1
# 18 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dt.h"
# 1 "../../../libs/moduleAnalysis/dependence/dependenceTest/dep_dt.h" 1
# 93 "../../../libs/moduleAnalysis/dependence/dependenceTest/dep_dt.h"
# 1 "../../../libs/frontEnd/include/expr.h" 1
# 17 "../../../libs/frontEnd/include/expr.h"
 enum Expr_type
{
   Expr_simple_sym = 1,
   Expr_constant = 2,
   Expr_linear = 3,
   Expr_invocation = 4,
   Expr_linear_ivar_only = 5,
   Expr_index_var = 6,
   Expr_complex = 7
};







typedef struct expr
{
 enum Expr_type type;
 int val;
 AST_INDEX ast;
 char *str;
} Expr;
# 94 "../../../libs/moduleAnalysis/dependence/dependenceTest/dep_dt.h" 2
# 171 "../../../libs/moduleAnalysis/dependence/dependenceTest/dep_dt.h"
typedef struct
{
 Expr lo;
 Expr up;
 Expr step;

 Generic lo_val;
 Generic up_val;

 int *lo_vec;
 int *up_vec;

    AST_INDEX loop_index;
    char *ivar;
    Boolean rev;

} Loop_data;




typedef struct
{
 Loop_data loops[10];
 int level;
} Loop_list;




typedef struct
{
 int stype;
 int constant;
 int coeffs[10];
 int symbolic_constant;
 AST_INDEX sym;
} Subs_data;




typedef struct
{
 Subs_data subs[5];
 int dims;
 Loop_list *loop_nest;
} Subs_list;




typedef struct dg_ref_info
{
 AST_INDEX node;
 int def;
 char *sym;
 AST_INDEX stmt;
 AST_INDEX loop;
 int index;
 int dims;
 int leader;
 int offset;
 int size;
 int elem_size;
} Dg_ref_info;
# 262 "../../../libs/moduleAnalysis/dependence/dependenceTest/dep_dt.h"
extern "C" void dg_ref_info_and_count ( FortTree ft, AST_INDEX loop, int * count, Dg_ref_info ** refArray )
                                                                         ;


extern "C" void dg_ref_info_free ( Dg_ref_info * refArray );



extern "C" AST_INDEX dg_ref_info_node ( Dg_ref_info * ref_info );

extern "C" char * dg_ref_info_sym ( Dg_ref_info * ref_info );

extern "C" int dg_ref_info_def ( Dg_ref_info * ref_info );

extern "C" int dg_ast_dim ( AST_INDEX node );
# 312 "../../../libs/moduleAnalysis/dependence/dependenceTest/dep_dt.h"
extern "C" void dt_free ( DT_info * dt );


extern "C" DT_info * dt_init ( AST_INDEX root, SideInfo * infoPtr, CfgInfo cfgModule )
                            ;


extern "C" void dt_update ( DG_Instance * dg, DT_info * dt, SideInfo * infoPtr, AST_INDEX root )
                                          ;


extern "C" void dt_update_tests ( DG_Instance *dg, DT_info *dt, SideInfo *infoPtr, AST_INDEX root, CfgInfo cfgModule )

                        ;


extern "C" void dt_update_loopref ( DT_info * dt, SideInfo * infoPtr, AST_INDEX root )
                                                       ;


extern "C" AST_INDEX dt_ast_sub ( AST_INDEX node );


extern "C" AST_INDEX dt_ast_stmt ( AST_INDEX node );


extern "C" AST_INDEX dt_ast_loop ( AST_INDEX node );



extern "C" void dt_test ( DT_info * dt, SideInfo * infoPtr, CfgInstance cfgInst, DG_Edge * Edge, AST_INDEX loop1, AST_INDEX loop2, Boolean imprecise )


                              ;


extern "C" void dt_set_intchg ( DG_Edge * Eptr, int level );


extern "C" Boolean dt_sub ( AST_INDEX node, Subs_data * sdata, Loop_list * ldata, Boolean plus )

                                      ;




extern "C" void dt_analyze ( DT_info * dt, DG_Edge * Edge, CfgInstance cfgInst, Subs_list * subs1, Subs_list * subs2, Loop_list * loops1, Loop_list * loops2, int clevel, Boolean indep )


                                  ;







extern "C" void dg_build ( AST_INDEX root, FortTree ft, DG_Instance *dg, SideInfo *infoPtr, DT_info *dt, LI_Instance *li, Generic pgm_callgraph, CfgInfo cfgModule)


                     ;


extern "C" void dg_update ( AST_INDEX root, FortTree ft, DG_Instance *dg, SideInfo *infoPtr, DT_info *dt, LI_Instance *li)

                                 ;



extern "C" void dt_copy_info ( DT_info * dt, DG_Edge * from, DG_Edge * to );


extern "C" void dt_info_str ( DT_info * dt, DG_Edge * Edge );




extern "C" Loop_list * dt_alloc_loop (DT_info * dt);
extern "C" Subs_list * dt_alloc_ref (DT_info * dt);


extern "C" char * dt_ssave (char * str, DT_info * dt);
# 19 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/dt.h" 2






extern "C" void ped_dg_build ( PedInfo ped, AST_INDEX root);



extern "C" void ped_dg_update ( PedInfo ped, AST_INDEX root);
# 37 "../../../libs/Memoria/include/mem_util.h" 2






# 1 "../../../libs/Memoria/include/UniformlyGeneratedSets.h" 1
# 10 "../../../libs/Memoria/include/UniformlyGeneratedSets.h"
# 1 "/usr/include/string.h" 1 3 4
# 26 "/usr/include/string.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/string.h" 2 3 4


# 28 "/usr/include/string.h" 3 4
extern "C" {




# 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
# 34 "/usr/include/string.h" 2 3 4
# 42 "/usr/include/string.h" 3 4
extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
       size_t __n) throw () __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, const void *__src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));





extern void *memccpy (void *__restrict __dest, const void *__restrict __src,
        int __c, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern void *memset (void *__s, int __c, size_t __n) throw () __attribute__ ((__nonnull__ (1)));


extern int memcmp (const void *__s1, const void *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));



extern "C++"
{
extern void *memchr (void *__s, int __c, size_t __n)
      throw () __asm ("memchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const void *memchr (const void *__s, int __c, size_t __n)
      throw () __asm ("memchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 88 "/usr/include/string.h" 3 4
}
# 98 "/usr/include/string.h" 3 4
extern "C++" void *rawmemchr (void *__s, int __c)
     throw () __asm ("rawmemchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern "C++" const void *rawmemchr (const void *__s, int __c)
     throw () __asm ("rawmemchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));







extern "C++" void *memrchr (void *__s, int __c, size_t __n)
      throw () __asm ("memrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern "C++" const void *memrchr (const void *__s, int __c, size_t __n)
      throw () __asm ("memrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 121 "/usr/include/string.h" 3 4
extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, const char *__restrict __src,
        size_t __n) throw () __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (const char *__s1, const char *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (2)));



# 1 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3 4
struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
};

typedef struct __locale_struct *__locale_t;
# 23 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 2 3 4

typedef __locale_t locale_t;
# 153 "/usr/include/string.h" 2 3 4


extern int strcoll_l (const char *__s1, const char *__s2, locale_t __l)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));


extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
    locale_t __l) throw () __attribute__ ((__nonnull__ (2, 4)));





extern char *strdup (const char *__s)
     throw () __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (const char *__string, size_t __n)
     throw () __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
# 203 "/usr/include/string.h" 3 4
extern "C++"
{
extern char *strchr (char *__s, int __c)
     throw () __asm ("strchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *strchr (const char *__s, int __c)
     throw () __asm ("strchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 223 "/usr/include/string.h" 3 4
}






extern "C++"
{
extern char *strrchr (char *__s, int __c)
     throw () __asm ("strrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *strrchr (const char *__s, int __c)
     throw () __asm ("strrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 250 "/usr/include/string.h" 3 4
}
# 260 "/usr/include/string.h" 3 4
extern "C++" char *strchrnul (char *__s, int __c)
     throw () __asm ("strchrnul") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern "C++" const char *strchrnul (const char *__s, int __c)
     throw () __asm ("strchrnul") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 272 "/usr/include/string.h" 3 4
extern size_t strcspn (const char *__s, const char *__reject)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (const char *__s, const char *__accept)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern "C++"
{
extern char *strpbrk (char *__s, const char *__accept)
     throw () __asm ("strpbrk") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern const char *strpbrk (const char *__s, const char *__accept)
     throw () __asm ("strpbrk") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 300 "/usr/include/string.h" 3 4
}






extern "C++"
{
extern char *strstr (char *__haystack, const char *__needle)
     throw () __asm ("strstr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern const char *strstr (const char *__haystack, const char *__needle)
     throw () __asm ("strstr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 327 "/usr/include/string.h" 3 4
}







extern char *strtok (char *__restrict __s, const char *__restrict __delim)
     throw () __attribute__ ((__nonnull__ (2)));



extern char *__strtok_r (char *__restrict __s,
    const char *__restrict __delim,
    char **__restrict __save_ptr)
     throw () __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, const char *__restrict __delim,
         char **__restrict __save_ptr)
     throw () __attribute__ ((__nonnull__ (2, 3)));





extern "C++" char *strcasestr (char *__haystack, const char *__needle)
     throw () __asm ("strcasestr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern "C++" const char *strcasestr (const char *__haystack,
         const char *__needle)
     throw () __asm ("strcasestr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 368 "/usr/include/string.h" 3 4
extern void *memmem (const void *__haystack, size_t __haystacklen,
       const void *__needle, size_t __needlelen)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 3)));



extern void *__mempcpy (void *__restrict __dest,
   const void *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern void *mempcpy (void *__restrict __dest,
        const void *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern size_t strlen (const char *__s)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern size_t strnlen (const char *__string, size_t __maxlen)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern char *strerror (int __errnum) throw ();
# 420 "/usr/include/string.h" 3 4
extern char *strerror_r (int __errnum, char *__buf, size_t __buflen)
     throw () __attribute__ ((__nonnull__ (2))) ;





extern char *strerror_l (int __errnum, locale_t __l) throw ();



# 1 "/usr/include/strings.h" 1 3 4
# 23 "/usr/include/strings.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
# 24 "/usr/include/strings.h" 2 3 4






extern "C" {



extern int bcmp (const void *__s1, const void *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bcopy (const void *__src, void *__dest, size_t __n)
  throw () __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) throw () __attribute__ ((__nonnull__ (1)));



extern "C++"
{
extern char *index (char *__s, int __c)
     throw () __asm ("index") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *index (const char *__s, int __c)
     throw () __asm ("index") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 66 "/usr/include/strings.h" 3 4
}







extern "C++"
{
extern char *rindex (char *__s, int __c)
     throw () __asm ("rindex") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *rindex (const char *__s, int __c)
     throw () __asm ("rindex") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 94 "/usr/include/strings.h" 3 4
}
# 104 "/usr/include/strings.h" 3 4
extern int ffs (int __i) throw () __attribute__ ((__const__));





extern int ffsl (long int __l) throw () __attribute__ ((__const__));
__extension__ extern int ffsll (long long int __ll)
     throw () __attribute__ ((__const__));



extern int strcasecmp (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));






extern int strcasecmp_l (const char *__s1, const char *__s2, locale_t __loc)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));



extern int strncasecmp_l (const char *__s1, const char *__s2,
     size_t __n, locale_t __loc)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));


}
# 432 "/usr/include/string.h" 2 3 4



extern void explicit_bzero (void *__s, size_t __n) throw () __attribute__ ((__nonnull__ (1)));



extern char *strsep (char **__restrict __stringp,
       const char *__restrict __delim)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern char *strsignal (int __sig) throw ();


extern char *__stpcpy (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern int strverscmp (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strfry (char *__string) throw () __attribute__ ((__nonnull__ (1)));


extern void *memfrob (void *__s, size_t __n) throw () __attribute__ ((__nonnull__ (1)));







extern "C++" char *basename (char *__filename)
     throw () __asm ("basename") __attribute__ ((__nonnull__ (1)));
extern "C++" const char *basename (const char *__filename)
     throw () __asm ("basename") __attribute__ ((__nonnull__ (1)));
# 498 "/usr/include/string.h" 3 4
}
# 11 "../../../libs/Memoria/include/UniformlyGeneratedSets.h" 2

# 1 "../../../libs/Memoria/include/mh_ast.h" 1
# 13 "../../../libs/Memoria/include/UniformlyGeneratedSets.h" 2



# 1 "../../../libs/Memoria/include/GenericList.h" 1
# 11 "../../../libs/Memoria/include/GenericList.h"

# 11 "../../../libs/Memoria/include/GenericList.h"
class GenericListEntry : public SinglyLinkedListEntry {

  Generic value;

public:

  GenericListEntry(Generic i) {value = i;};
  Generic GetValue() {return value;};

};

class GenericList : public SinglyLinkedList {
private:
  friend class GenericListIter;
public:
  GenericList(void) : SinglyLinkedList () {};
  GenericList* operator+=(Generic i)
    {
     GenericListEntry *e = new GenericListEntry(i);
     SinglyLinkedList::Append(e);
     return this;
    };
  void Append(Generic i) {SinglyLinkedList::Append(new GenericListEntry(i));};
  GenericListEntry *First()
    {return (GenericListEntry *) SinglyLinkedList::First();};
  GenericListEntry *Last()
    {return (GenericListEntry *) SinglyLinkedList::Last();};

  Boolean QueryEntry(Generic i);

  GenericListEntry* GetEntry(Generic i);

};

class GenericListIter : public SinglyLinkedListIterator {
public:
  GenericListIter(GenericList *l) :
    SinglyLinkedListIterator(l)
  {
  }

  GenericListIter(GenericList &l) :
    SinglyLinkedListIterator(l)
  {
  }

  GenericListEntry* operator() ()
    {
     GenericListEntry *e =
       (GenericListEntry *) SinglyLinkedListIterator::Current();

       ++(*this);
       return e;
    }

};
# 17 "../../../libs/Memoria/include/UniformlyGeneratedSets.h" 2
# 1 "../../../libs/frontEnd/ast/AstIter.h" 1
# 48 "../../../libs/frontEnd/ast/AstIter.h"
class AstIter {
public:

  AstIter(AST_INDEX my_start_node,
   Boolean my_only_stmts = true,
   Boolean my_only_inner = true);

  AST_INDEX operator() ();
  void putCur_node(AST_INDEX my_cur_node);
  void reset();

private:
  AST_INDEX lookahead_node(AST_INDEX node);
  AST_INDEX next_stmt_or_expr(AST_INDEX node);
  AST_INDEX next_son(AST_INDEX father_node, int prev_son = 0);


  AST_INDEX start_node;
  AST_INDEX cur_node;
  AST_INDEX next_node;
  int level;
  Boolean only_stmts;
  Boolean only_inner;
};
# 18 "../../../libs/Memoria/include/UniformlyGeneratedSets.h" 2
# 1 "../../../libs/support/Lambda/Lambda.h" 1
# 27 "../../../libs/support/Lambda/Lambda.h"
# 1 "/usr/include/malloc.h" 1 3 4
# 23 "/usr/include/malloc.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
# 149 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 3 4

# 149 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 3 4
typedef long int ptrdiff_t;
# 426 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 3 4
typedef struct {
  long long __max_align_ll __attribute__((__aligned__(__alignof__(long long))));
  long double __max_align_ld __attribute__((__aligned__(__alignof__(long double))));
# 437 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 3 4
} max_align_t;






  typedef decltype(nullptr) nullptr_t;
# 24 "/usr/include/malloc.h" 2 3 4
# 35 "/usr/include/malloc.h" 3 4
extern "C" {


extern void *malloc (size_t __size) throw () __attribute__ ((__malloc__)) ;


extern void *calloc (size_t __nmemb, size_t __size)
throw () __attribute__ ((__malloc__)) ;






extern void *realloc (void *__ptr, size_t __size)
throw () __attribute__ ((__warn_unused_result__));






extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
throw () __attribute__ ((__warn_unused_result__));


extern void free (void *__ptr) throw ();


extern void *memalign (size_t __alignment, size_t __size)
throw () __attribute__ ((__malloc__)) ;


extern void *valloc (size_t __size) throw () __attribute__ ((__malloc__)) ;



extern void *pvalloc (size_t __size) throw () __attribute__ ((__malloc__)) ;



extern void *(*__morecore) (ptrdiff_t __size);


extern void *__default_morecore (ptrdiff_t __size)
throw () __attribute__ ((__malloc__));



struct mallinfo
{
  int arena;
  int ordblks;
  int smblks;
  int hblks;
  int hblkhd;
  int usmblks;
  int fsmblks;
  int uordblks;
  int fordblks;
  int keepcost;
};


extern struct mallinfo mallinfo (void) throw ();
# 126 "/usr/include/malloc.h" 3 4
extern int mallopt (int __param, int __val) throw ();



extern int malloc_trim (size_t __pad) throw ();



extern size_t malloc_usable_size (void *__ptr) throw ();


extern void malloc_stats (void) throw ();


extern int malloc_info (int __options, FILE *__fp) throw ();


extern void (*volatile __free_hook) (void *__ptr,
                                                   const void *)
__attribute__ ((__deprecated__));
extern void *(*volatile __malloc_hook)(size_t __size,
                                                     const void *)
__attribute__ ((__deprecated__));
extern void *(*volatile __realloc_hook)(void *__ptr,
                                                      size_t __size,
                                                      const void *)
__attribute__ ((__deprecated__));
extern void *(*volatile __memalign_hook)(size_t __alignment,
                                                       size_t __size,
                                                       const void *)
__attribute__ ((__deprecated__));
extern void (*volatile __after_morecore_hook) (void);


extern void __malloc_check_init (void) throw () __attribute__ ((__deprecated__));


}
# 28 "../../../libs/support/Lambda/Lambda.h" 2
# 53 "../../../libs/support/Lambda/Lambda.h"

# 53 "../../../libs/support/Lambda/Lambda.h"
extern "C" {


typedef int * la_vect;

typedef la_vect * la_matrix;

# 1 "../../../libs/support/Lambda/la-dep.h" 1
# 28 "../../../libs/support/Lambda/la-dep.h"
typedef enum {
  dK,
  dLT,
  dLEQ,
  dEQ,
  dGEQ,
  dGT,
  dLG,
  dDOT,
  dSTAR,
  dSIZE
  } LA_DIR_T;


typedef struct {
  LA_DIR_T dir;
  int dist;
} LA_DEP_T;





typedef struct _vector {
  LA_DEP_T * vector;
  struct _vector *next;
} *LA_DEP_V_T, LA_DEP_V_T1;






typedef struct{
  LA_DEP_V_T vectors;
  int dim;
  int size;
} *LA_DEP_M_T, LA_DEP_M_T1;
# 75 "../../../libs/support/Lambda/la-dep.h"
LA_DEP_V_T la_dep_vec_new ( int size );





void la_dep_vec_free ( LA_DEP_V_T d );





LA_DEP_M_T la_dep_matrix_new (int dim, int size)
                  ;






void la_dep_matrix_free ( LA_DEP_M_T D);







LA_DEP_M_T la_dep_legal (LA_DEP_M_T D);





LA_DEP_M_T la_dep_no_redundant (LA_DEP_M_T D);
# 61 "../../../libs/support/Lambda/Lambda.h" 2
# 1 "../../../libs/support/Lambda/la-trans.h" 1
# 29 "../../../libs/support/Lambda/la-trans.h"
typedef struct {
  int ** matrix;
  int row_size;
  int col_size;
  int denom;


} *LA_MATRIX_T, LA_MATRIX_T1;
# 48 "../../../libs/support/Lambda/la-trans.h"
LA_MATRIX_T la_matrix_new (int rowsize, int colsize)
                     ;





LA_MATRIX_T la_matrix_allocate ( void );





void la_matrix_free ( LA_MATRIX_T matrix);
# 73 "../../../libs/support/Lambda/la-trans.h"
int la_is_nonsingular (LA_MATRIX_T T);





int la_is_fullrank (LA_MATRIX_T pT);





int la_rank (LA_MATRIX_T pT);






LA_MATRIX_T la_base (LA_MATRIX_T pT);





LA_MATRIX_T la_padding (LA_MATRIX_T pT);





LA_MATRIX_T la_inverse (LA_MATRIX_T T);
# 117 "../../../libs/support/Lambda/la-trans.h"
int la_is_legal (LA_MATRIX_T T, LA_DEP_M_T D)
                    ;





int la_is_legal_par (LA_MATRIX_T pT, LA_DEP_M_T D)
                        ;





LA_MATRIX_T la_base_legal (LA_MATRIX_T pT, LA_DEP_M_T D)
                       ;





LA_MATRIX_T la_padding_legal (LA_MATRIX_T pT, LA_DEP_M_T D)
                   ;






LA_MATRIX_T la_complete (LA_MATRIX_T pT, LA_DEP_M_T D)
                    ;
# 158 "../../../libs/support/Lambda/la-trans.h"
void la_dep_delete_carried (LA_DEP_M_T D, la_vect x)
                     ;





LA_DEP_T la_vec_X_dep (la_vect vec1, LA_DEP_V_T d, int dim)

             ;





LA_DEP_M_T la_matrix_X_depM (LA_MATRIX_T A, LA_DEP_M_T D)
                         ;
# 62 "../../../libs/support/Lambda/Lambda.h" 2
# 1 "../../../libs/support/Lambda/la-code.h" 1
# 39 "../../../libs/support/Lambda/la-code.h"
typedef struct _la_expr{
  la_vect coef;
  int c0;
  la_vect blob_coef;

  int denom;
  struct _la_expr *next;
} *LA_EXPR_T, LA_EXPR_T1;
# 59 "../../../libs/support/Lambda/la-code.h"
LA_EXPR_T la_expr_new (int dim, int blobs)
                ;
void la_expr_free ( LA_EXPR_T expr );
# 70 "../../../libs/support/Lambda/la-code.h"
typedef struct _la_loop{
  LA_EXPR_T low;
  LA_EXPR_T up;
  int step;
  LA_EXPR_T offset;
} *LA_LOOP_T, LA_LOOP_T1;
# 86 "../../../libs/support/Lambda/la-code.h"
LA_LOOP_T la_loop_new ( void );
void la_loop_free ( LA_LOOP_T loop );






typedef struct _la_loopnest{
  LA_LOOP_T *loops;
  int depth;
  int blobs;
} *LA_LOOPNEST_T, LA_LOOPNEST_T1;
# 108 "../../../libs/support/Lambda/la-code.h"
LA_LOOPNEST_T la_nest_new (int depth, int blobs )
                    ;
void la_nest_free ( LA_LOOPNEST_T nest );





LA_LOOPNEST_T la_nest (LA_LOOPNEST_T nest, LA_MATRIX_T T)
                   ;






typedef struct {
  la_vect coef;
  int size;
  int denom;
} *LA_VECTOR_T, LA_VECTOR_T1;
# 138 "../../../libs/support/Lambda/la-code.h"
LA_VECTOR_T la_vector_new ( int size );
void la_vector_free ( LA_VECTOR_T v );





LA_VECTOR_T la_vector (LA_MATRIX_T invT, LA_VECTOR_T v)
                   ;






LA_DEP_V_T la_dep_trans (LA_DEP_V_T d, LA_MATRIX_T T)
                     ;
# 63 "../../../libs/support/Lambda/Lambda.h" 2
# 1 "../../../libs/support/Lambda/la-print.h" 1
# 42 "../../../libs/support/Lambda/la-print.h"
void la_matrix_print ( LA_MATRIX_T mat );
# 52 "../../../libs/support/Lambda/la-print.h"
void la_nest_print ( LA_LOOPNEST_T nest, int start);





void la_loop_print ( LA_LOOP_T loop, int depth, int blobs, int start)
                   ;






void la_expr_print ( LA_EXPR_T expr, int depth, int blobs, int start)
                   ;





void la_dep_print (LA_DEP_T d);





void la_dep_vec_print (LA_DEP_V_T d, int dim)
             ;





void la_dep_matrix_print ( LA_DEP_M_T D);
# 64 "../../../libs/support/Lambda/Lambda.h" 2
# 1 "../../../libs/support/Lambda/la-utilities.h" 1
# 26 "../../../libs/support/Lambda/la-utilities.h"
# 1 "/usr/include/c++/7/stdlib.h" 1 3
# 36 "/usr/include/c++/7/stdlib.h" 3
# 1 "/usr/include/c++/7/cstdlib" 1 3
# 39 "/usr/include/c++/7/cstdlib" 3
       
# 40 "/usr/include/c++/7/cstdlib" 3

# 1 "/usr/include/x86_64-linux-gnu/c++/7/bits/c++config.h" 1 3
# 229 "/usr/include/x86_64-linux-gnu/c++/7/bits/c++config.h" 3

# 229 "/usr/include/x86_64-linux-gnu/c++/7/bits/c++config.h" 3
namespace std
{
  typedef long unsigned int size_t;
  typedef long int ptrdiff_t;


  typedef decltype(nullptr) nullptr_t;

}
# 251 "/usr/include/x86_64-linux-gnu/c++/7/bits/c++config.h" 3
namespace std
{
  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
}
namespace __gnu_cxx
{
  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
}
# 533 "/usr/include/x86_64-linux-gnu/c++/7/bits/c++config.h" 3
# 1 "/usr/include/x86_64-linux-gnu/c++/7/bits/os_defines.h" 1 3
# 534 "/usr/include/x86_64-linux-gnu/c++/7/bits/c++config.h" 2 3


# 1 "/usr/include/x86_64-linux-gnu/c++/7/bits/cpu_defines.h" 1 3
# 537 "/usr/include/x86_64-linux-gnu/c++/7/bits/c++config.h" 2 3
# 42 "/usr/include/c++/7/cstdlib" 2 3
# 75 "/usr/include/c++/7/cstdlib" 3
# 1 "/usr/include/stdlib.h" 1 3 4
# 25 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 26 "/usr/include/stdlib.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
# 32 "/usr/include/stdlib.h" 2 3 4

extern "C" {





# 1 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 1 3 4
# 52 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3 4
typedef enum
{
  P_ALL,
  P_PID,
  P_PGID
} idtype_t;
# 40 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 1 3 4
# 41 "/usr/include/stdlib.h" 2 3 4
# 55 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 1 3 4
# 75 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 3 4
typedef _Complex float __cfloat128 __attribute__ ((__mode__ (__TC__)));
# 87 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 3 4
typedef __float128 _Float128;
# 120 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 2 3 4
# 207 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
typedef float _Float32;
# 244 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
typedef double _Float64;
# 261 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
typedef double _Float32x;
# 278 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
typedef long double _Float64x;
# 121 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 2 3 4
# 56 "/usr/include/stdlib.h" 2 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;





__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;
# 97 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) throw () ;



extern double atof (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



__extension__ extern long long int atoll (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     throw () __attribute__ ((__nonnull__ (1)));



extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) throw () __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     throw () __attribute__ ((__nonnull__ (1)));
# 140 "/usr/include/stdlib.h" 3 4
extern _Float32 strtof32 (const char *__restrict __nptr,
     char **__restrict __endptr)
     throw () __attribute__ ((__nonnull__ (1)));



extern _Float64 strtof64 (const char *__restrict __nptr,
     char **__restrict __endptr)
     throw () __attribute__ ((__nonnull__ (1)));



extern _Float128 strtof128 (const char *__restrict __nptr,
       char **__restrict __endptr)
     throw () __attribute__ ((__nonnull__ (1)));



extern _Float32x strtof32x (const char *__restrict __nptr,
       char **__restrict __endptr)
     throw () __attribute__ ((__nonnull__ (1)));



extern _Float64x strtof64x (const char *__restrict __nptr,
       char **__restrict __endptr)
     throw () __attribute__ ((__nonnull__ (1)));
# 176 "/usr/include/stdlib.h" 3 4
extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));



__extension__
extern long long int strtoq (const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));




__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));




extern int strfromd (char *__dest, size_t __size, const char *__format,
       double __f)
     throw () __attribute__ ((__nonnull__ (3)));

extern int strfromf (char *__dest, size_t __size, const char *__format,
       float __f)
     throw () __attribute__ ((__nonnull__ (3)));

extern int strfroml (char *__dest, size_t __size, const char *__format,
       long double __f)
     throw () __attribute__ ((__nonnull__ (3)));
# 232 "/usr/include/stdlib.h" 3 4
extern int strfromf32 (char *__dest, size_t __size, const char * __format,
         _Float32 __f)
     throw () __attribute__ ((__nonnull__ (3)));



extern int strfromf64 (char *__dest, size_t __size, const char * __format,
         _Float64 __f)
     throw () __attribute__ ((__nonnull__ (3)));



extern int strfromf128 (char *__dest, size_t __size, const char * __format,
   _Float128 __f)
     throw () __attribute__ ((__nonnull__ (3)));



extern int strfromf32x (char *__dest, size_t __size, const char * __format,
   _Float32x __f)
     throw () __attribute__ ((__nonnull__ (3)));



extern int strfromf64x (char *__dest, size_t __size, const char * __format,
   _Float64x __f)
     throw () __attribute__ ((__nonnull__ (3)));
# 274 "/usr/include/stdlib.h" 3 4
extern long int strtol_l (const char *__restrict __nptr,
     char **__restrict __endptr, int __base,
     locale_t __loc) throw () __attribute__ ((__nonnull__ (1, 4)));

extern unsigned long int strtoul_l (const char *__restrict __nptr,
        char **__restrict __endptr,
        int __base, locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 4)));

__extension__
extern long long int strtoll_l (const char *__restrict __nptr,
    char **__restrict __endptr, int __base,
    locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 4)));

__extension__
extern unsigned long long int strtoull_l (const char *__restrict __nptr,
       char **__restrict __endptr,
       int __base, locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 4)));

extern double strtod_l (const char *__restrict __nptr,
   char **__restrict __endptr, locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));

extern float strtof_l (const char *__restrict __nptr,
         char **__restrict __endptr, locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));

extern long double strtold_l (const char *__restrict __nptr,
         char **__restrict __endptr,
         locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));
# 316 "/usr/include/stdlib.h" 3 4
extern _Float32 strtof32_l (const char *__restrict __nptr,
       char **__restrict __endptr,
       locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));



extern _Float64 strtof64_l (const char *__restrict __nptr,
       char **__restrict __endptr,
       locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));



extern _Float128 strtof128_l (const char *__restrict __nptr,
         char **__restrict __endptr,
         locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));



extern _Float32x strtof32x_l (const char *__restrict __nptr,
         char **__restrict __endptr,
         locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));



extern _Float64x strtof64x_l (const char *__restrict __nptr,
         char **__restrict __endptr,
         locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));
# 385 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) throw () ;


extern long int a64l (const char *__s)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
# 401 "/usr/include/stdlib.h" 3 4
extern long int random (void) throw ();


extern void srandom (unsigned int __seed) throw ();





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) throw () __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) throw () __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) throw () __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     throw () __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     throw () __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     throw () __attribute__ ((__nonnull__ (1, 2)));





extern int rand (void) throw ();

extern void srand (unsigned int __seed) throw ();



extern int rand_r (unsigned int *__seed) throw ();







extern double drand48 (void) throw ();
extern double erand48 (unsigned short int __xsubi[3]) throw () __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) throw ();
extern long int nrand48 (unsigned short int __xsubi[3])
     throw () __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) throw ();
extern long int jrand48 (unsigned short int __xsubi[3])
     throw () __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) throw ();
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     throw () __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) throw () __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    __extension__ unsigned long long int __a;

  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) throw () __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) throw () __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     throw () __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) throw () __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern void *malloc (size_t __size) throw () __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     throw () __attribute__ ((__malloc__)) ;






extern void *realloc (void *__ptr, size_t __size)
     throw () __attribute__ ((__warn_unused_result__));







extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
     throw () __attribute__ ((__warn_unused_result__));



extern void free (void *__ptr) throw ();


# 1 "/usr/include/alloca.h" 1 3 4
# 24 "/usr/include/alloca.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
# 25 "/usr/include/alloca.h" 2 3 4

extern "C" {





extern void *alloca (size_t __size) throw ();





}
# 567 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) throw () __attribute__ ((__malloc__)) ;




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     throw () __attribute__ ((__nonnull__ (1))) ;




extern void *aligned_alloc (size_t __alignment, size_t __size)
     throw () __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (2))) ;



extern void abort (void) throw () __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) throw () __attribute__ ((__nonnull__ (1)));




extern "C++" int at_quick_exit (void (*__func) (void))
     throw () __asm ("at_quick_exit") __attribute__ ((__nonnull__ (1)));
# 607 "/usr/include/stdlib.h" 3 4
extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     throw () __attribute__ ((__nonnull__ (1)));





extern void exit (int __status) throw () __attribute__ ((__noreturn__));





extern void quick_exit (int __status) throw () __attribute__ ((__noreturn__));





extern void _Exit (int __status) throw () __attribute__ ((__noreturn__));




extern char *getenv (const char *__name) throw () __attribute__ ((__nonnull__ (1))) ;




extern char *secure_getenv (const char *__name)
     throw () __attribute__ ((__nonnull__ (1))) ;






extern int putenv (char *__string) throw () __attribute__ ((__nonnull__ (1)));





extern int setenv (const char *__name, const char *__value, int __replace)
     throw () __attribute__ ((__nonnull__ (2)));


extern int unsetenv (const char *__name) throw () __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) throw ();
# 672 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) throw () __attribute__ ((__nonnull__ (1)));
# 685 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 695 "/usr/include/stdlib.h" 3 4
extern int mkstemp64 (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 707 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) ;
# 717 "/usr/include/stdlib.h" 3 4
extern int mkstemps64 (char *__template, int __suffixlen)
     __attribute__ ((__nonnull__ (1))) ;
# 728 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) throw () __attribute__ ((__nonnull__ (1))) ;
# 739 "/usr/include/stdlib.h" 3 4
extern int mkostemp (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;
# 749 "/usr/include/stdlib.h" 3 4
extern int mkostemp64 (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;
# 759 "/usr/include/stdlib.h" 3 4
extern int mkostemps (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;
# 771 "/usr/include/stdlib.h" 3 4
extern int mkostemps64 (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;
# 781 "/usr/include/stdlib.h" 3 4
extern int system (const char *__command) ;





extern char *canonicalize_file_name (const char *__name)
     throw () __attribute__ ((__nonnull__ (1))) ;
# 797 "/usr/include/stdlib.h" 3 4
extern char *realpath (const char *__restrict __name,
         char *__restrict __resolved) throw () ;






typedef int (*__compar_fn_t) (const void *, const void *);


typedef __compar_fn_t comparison_fn_t;



typedef int (*__compar_d_fn_t) (const void *, const void *, void *);




extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;







extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));

extern void qsort_r (void *__base, size_t __nmemb, size_t __size,
       __compar_d_fn_t __compar, void *__arg)
  __attribute__ ((__nonnull__ (1, 4)));




extern int abs (int __x) throw () __attribute__ ((__const__)) ;
extern long int labs (long int __x) throw () __attribute__ ((__const__)) ;


__extension__ extern long long int llabs (long long int __x)
     throw () __attribute__ ((__const__)) ;






extern div_t div (int __numer, int __denom)
     throw () __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     throw () __attribute__ ((__const__)) ;


__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     throw () __attribute__ ((__const__)) ;
# 869 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) throw () __attribute__ ((__nonnull__ (3, 4))) ;




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) throw () __attribute__ ((__nonnull__ (3, 4))) ;




extern char *gcvt (double __value, int __ndigit, char *__buf)
     throw () __attribute__ ((__nonnull__ (3))) ;




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     throw () __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     throw () __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     throw () __attribute__ ((__nonnull__ (3))) ;




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) throw () __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) throw () __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     throw () __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     throw () __attribute__ ((__nonnull__ (3, 4, 5)));





extern int mblen (const char *__s, size_t __n) throw ();


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) throw ();


extern int wctomb (char *__s, wchar_t __wchar) throw ();



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) throw ();

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     throw ();







extern int rpmatch (const char *__response) throw () __attribute__ ((__nonnull__ (1))) ;
# 954 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *const *__restrict __tokens,
        char **__restrict __valuep)
     throw () __attribute__ ((__nonnull__ (1, 2, 3))) ;





extern void setkey (const char *__key) throw () __attribute__ ((__nonnull__ (1)));







extern int posix_openpt (int __oflag) ;







extern int grantpt (int __fd) throw ();



extern int unlockpt (int __fd) throw ();




extern char *ptsname (int __fd) throw () ;






extern int ptsname_r (int __fd, char *__buf, size_t __buflen)
     throw () __attribute__ ((__nonnull__ (2)));


extern int getpt (void);






extern int getloadavg (double __loadavg[], int __nelem)
     throw () __attribute__ ((__nonnull__ (1)));
# 1016 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 1 3 4
# 1017 "/usr/include/stdlib.h" 2 3 4
# 1026 "/usr/include/stdlib.h" 3 4
}
# 76 "/usr/include/c++/7/cstdlib" 2 3

# 1 "/usr/include/c++/7/bits/std_abs.h" 1 3
# 33 "/usr/include/c++/7/bits/std_abs.h" 3
       
# 34 "/usr/include/c++/7/bits/std_abs.h" 3
# 46 "/usr/include/c++/7/bits/std_abs.h" 3
extern "C++"
{
namespace std __attribute__ ((__visibility__ ("default")))
{


  using ::abs;


  inline long
  abs(long __i) { return __builtin_labs(__i); }



  inline long long
  abs(long long __x) { return __builtin_llabs (__x); }







  inline constexpr double
  abs(double __x)
  { return __builtin_fabs(__x); }

  inline constexpr float
  abs(float __x)
  { return __builtin_fabsf(__x); }

  inline constexpr long double
  abs(long double __x)
  { return __builtin_fabsl(__x); }



  inline constexpr __int128
  abs(__int128 __x) { return __x >= 0 ? __x : -__x; }
# 100 "/usr/include/c++/7/bits/std_abs.h" 3
  inline constexpr
  __float128
  abs(__float128 __x)
  { return __x < 0 ? -__x : __x; }



}
}
# 78 "/usr/include/c++/7/cstdlib" 2 3
# 121 "/usr/include/c++/7/cstdlib" 3
extern "C++"
{
namespace std __attribute__ ((__visibility__ ("default")))
{


  using ::div_t;
  using ::ldiv_t;

  using ::abort;



  using ::atexit;


  using ::at_quick_exit;


  using ::atof;
  using ::atoi;
  using ::atol;
  using ::bsearch;
  using ::calloc;
  using ::div;
  using ::exit;
  using ::free;
  using ::getenv;
  using ::labs;
  using ::ldiv;
  using ::malloc;

  using ::mblen;
  using ::mbstowcs;
  using ::mbtowc;

  using ::qsort;


  using ::quick_exit;


  using ::rand;
  using ::realloc;
  using ::srand;
  using ::strtod;
  using ::strtol;
  using ::strtoul;
  using ::system;

  using ::wcstombs;
  using ::wctomb;



  inline ldiv_t
  div(long __i, long __j) { return ldiv(__i, __j); }




}
# 195 "/usr/include/c++/7/cstdlib" 3
namespace __gnu_cxx __attribute__ ((__visibility__ ("default")))
{



  using ::lldiv_t;





  using ::_Exit;



  using ::llabs;

  inline lldiv_t
  div(long long __n, long long __d)
  { lldiv_t __q; __q.quot = __n / __d; __q.rem = __n % __d; return __q; }

  using ::lldiv;
# 227 "/usr/include/c++/7/cstdlib" 3
  using ::atoll;
  using ::strtoll;
  using ::strtoull;

  using ::strtof;
  using ::strtold;


}

namespace std
{

  using ::__gnu_cxx::lldiv_t;

  using ::__gnu_cxx::_Exit;

  using ::__gnu_cxx::llabs;
  using ::__gnu_cxx::div;
  using ::__gnu_cxx::lldiv;

  using ::__gnu_cxx::atoll;
  using ::__gnu_cxx::strtof;
  using ::__gnu_cxx::strtoll;
  using ::__gnu_cxx::strtoull;
  using ::__gnu_cxx::strtold;
}



}
# 37 "/usr/include/c++/7/stdlib.h" 2 3

using std::abort;
using std::atexit;
using std::exit;


  using std::at_quick_exit;


  using std::quick_exit;




using std::div_t;
using std::ldiv_t;

using std::abs;
using std::atof;
using std::atoi;
using std::atol;
using std::bsearch;
using std::calloc;
using std::div;
using std::free;
using std::getenv;
using std::labs;
using std::ldiv;
using std::malloc;

using std::mblen;
using std::mbstowcs;
using std::mbtowc;

using std::qsort;
using std::rand;
using std::realloc;
using std::srand;
using std::strtod;
using std::strtol;
using std::strtoul;
using std::system;

using std::wcstombs;
using std::wctomb;
# 27 "../../../libs/support/Lambda/la-utilities.h" 2
# 39 "../../../libs/support/Lambda/la-utilities.h"

# 39 "../../../libs/support/Lambda/la-utilities.h"
la_matrix la_matNew (int m, int n)
                ;
# 50 "../../../libs/support/Lambda/la-utilities.h"
void la_eExchange (la_matrix mat, int m, int col1, int col2 )


                   ;






void la_eAdd (la_matrix mat, int m, int col1, int col2, int fact )



              ;





void la_eNegate (la_matrix mat, int m, int col)

            ;





void la_eColConst (la_matrix mat, int m, int col, int fact)


                  ;





int la_eMinInVec (la_vect vec, int n, int start)

                  ;






int la_eFirstNonZero (la_vect vec, int n, int i)

           ;






void la_matHermite (la_matrix T, int depth, la_matrix H, la_matrix U)


                      ;





int la_eFirstNonZeroVect (la_matrix mat, int rowSize, int colSize, int startRow)


                      ;
# 128 "../../../libs/support/Lambda/la-utilities.h"
void la_matId (la_matrix mat, int n)
           ;





void la_matCopy (la_matrix mat1, la_matrix mat2, int m, int n)

                    ;





void la_matNegate (la_matrix mat1, la_matrix mat2, int m, int n)


               ;





void la_matT (la_matrix mat1, la_matrix mat2, int m, int n)


          ;





int la_matrix_is_id (LA_MATRIX_T M);





void la_matAdd (la_matrix mat1, la_matrix mat2, la_matrix mat3, int m, int n)

                                   ;





void la_matAddF (la_matrix mat1, int f1, la_matrix mat2, int f2, la_matrix mat3, int m, int n)





             ;





void la_matMult (la_matrix mat1, la_matrix mat2, la_matrix mat3, int m, int r, int n)




             ;





void la_matGetCol (la_matrix mat, int m, int col, la_vect vec)


                     ;





void la_matConcat (la_matrix mat1, int m1, la_matrix mat2, int m2, la_matrix mat3)



                        ;






void la_rowExchange (la_matrix mat, int i1, int i2 )

              ;







void la_rowAdd (la_matrix mat, int n, int i1, int i2, int fact)



                ;





int la_matInv (la_matrix mat, la_matrix inv, int n)

           ;





void la_eDeleteRows (la_matrix matrix, int m, int r1, int r2 )


                   ;






void la_projToNull (la_matrix B, int rowSize, int colSize, int k, la_vect x)



                     ;





void la_matFree (la_matrix mat, int m, int n)

              ;
# 279 "../../../libs/support/Lambda/la-utilities.h"
void la_vecNegate (la_vect vec1, la_vect vec2, int n)

                ;





void la_vecConst (la_vect vec1, la_vect vec2, int n, int c)


               ;





void la_vecAdd (la_vect vec1, la_vect vec2, la_vect vec3, int n)


            ;





void la_vecAddF (la_vect vec1, int f1, la_vect vec2, int f2, la_vect vec3, int n)




             ;





void la_vecConcat (la_vect vec1, int n1, la_vect vec2, int n2, la_vect vec3)



                       ;





void la_matConcat_newM (la_matrix mat1, int m1, int col, la_matrix mat2, int m2, la_matrix mat3)




                      ;





void la_vecCopy (la_vect vec1, la_vect vec2, int n)

             ;





int la_vecIsZero (la_vect vec1, int n)
              ;





void la_vecClear (la_vect vec1, int n)
              ;





int la_vecEq (la_vect vec1, la_vect vec2, int len)

            ;





void la_vecFree (la_vect vec);
# 378 "../../../libs/support/Lambda/la-utilities.h"
void la_matVecMult (la_matrix mat, int m, int n, la_vect vec, la_vect vec1)



                        ;





void la_vecMatMult (la_vect vec, int m, la_matrix mat, int n, la_vect vec1)



                       ;
# 402 "../../../libs/support/Lambda/la-utilities.h"
int la_gcd (int a, int b)
               ;





int la_gcdV (la_vect v, int n )
                 ;





int la_lcm (int a, int b)
               ;





int la_abs (int a);
# 434 "../../../libs/support/Lambda/la-utilities.h"
void la_printM (la_matrix mat, int m, int n )

             ;





void la_printV (la_vect vec, int n )
             ;





int la_printE (la_vect e, int n, int c, la_vect blob_list, int blobs, int d, int start, int cf)






            ;




int la_printLinearE (la_vect e, int n, int start)

                     ;





void la_printDirV ( LA_DIR_T *vec, int m );
# 480 "../../../libs/support/Lambda/la-utilities.h"
LA_LOOPNEST_T la_aux (LA_LOOPNEST_T nest, LA_MATRIX_T U)
                   ;
# 490 "../../../libs/support/Lambda/la-utilities.h"
LA_LOOPNEST_T la_tar (LA_LOOPNEST_T nest_aux, LA_MATRIX_T H, la_vect stepS)

                   ;






la_vect la_step_signs (LA_MATRIX_T T, la_vect S)
                 ;
# 511 "../../../libs/support/Lambda/la-utilities.h"
void la_dep_vec_copy (LA_DEP_V_T d, LA_DEP_V_T d1, int dim)

             ;






void la_dep_add_to_list (LA_DEP_V_T d, LA_DEP_M_T D)
                     ;






void la_dep_add_to_list_last (LA_DEP_V_T d, LA_DEP_M_T D, LA_DEP_V_T last)

                      ;





int la_allNegEq (LA_DIR_T *flagV, int flagSize)
                    ;





int la_allPosEq (LA_DIR_T *flagV, int flagSize)
                    ;





void la_flagNegate (LA_DIR_T *flagV, int flagSize)
                        ;






LA_DIR_T la_vec_depVec_mult (la_vect vec1, LA_DEP_V_T d, int dim)

                    ;





LA_DEP_T la_vec_depV_mult (la_vect vec1, LA_DEP_V_T d, int dim)

                  ;





void la_depMult (la_vect vec1, LA_DEP_M_T D, LA_DIR_T *prod)

                       ;





int la_firstEk (LA_DEP_M_T D);





void la_delPosDep (LA_DEP_M_T D, LA_DIR_T * flagV)
                          ;





int la_dep_vec_eq ( LA_DEP_V_T d1, LA_DEP_V_T d2, int size);





int la_dep_eq ( LA_DEP_T d1, LA_DEP_T d2);
# 65 "../../../libs/support/Lambda/Lambda.h" 2


}
# 19 "../../../libs/Memoria/include/UniformlyGeneratedSets.h" 2
# 27 "../../../libs/Memoria/include/UniformlyGeneratedSets.h"
class UniformlyGeneratedSetsEntry : public GenericList {

  int NestingLevel,Subscripts;
  char name[80];
  la_matrix H;
  la_vect ZeroSpace, LocalizedIterationSpace;
  Boolean Uniform;
  int Solve(la_matrix B, la_vect c, int m, int n, la_matrix *S, int *num);
  Boolean DetermineIfReuseExists(la_matrix A,la_vect C1, la_vect C2);
  Boolean SolutionIsValid(la_matrix A,la_vect x,la_vect b);
  Boolean CheckIntersect(la_vect X1,la_vect X2,int n);
  Boolean IsSolutionInLIS(la_matrix X,la_vect r_p,int row,int column,
     Boolean TestAll);
  Boolean NullSpaceIsZero(la_matrix X,int row,int column);

public:

  UniformlyGeneratedSetsEntry(char *EntryName,la_matrix nodeH, int level,int subs,
         la_vect LIS, Boolean uniform) : GenericList()
  {
   int i,j;

     (void)strcpy(name,EntryName);
     NestingLevel = level;
     Subscripts = subs;
     Uniform = uniform;
     H = la_matNew(Subscripts,NestingLevel);
     la_matCopy(nodeH,H,Subscripts,NestingLevel);
     ZeroSpace = (la_vect) calloc (Subscripts, sizeof(int));
     la_vecClear(ZeroSpace,Subscripts);
     LocalizedIterationSpace = (la_vect) calloc (NestingLevel, sizeof(int));
     if (LIS == 
# 58 "../../../libs/Memoria/include/UniformlyGeneratedSets.h" 3 4
               __null
# 58 "../../../libs/Memoria/include/UniformlyGeneratedSets.h"
                   )
       {
 la_vecClear(LocalizedIterationSpace, NestingLevel-1);
 LocalizedIterationSpace[NestingLevel-1] = 1;
       }
     else
       la_vecCopy(LIS,LocalizedIterationSpace,NestingLevel);
  };

  ~UniformlyGeneratedSetsEntry()
    {
     int i;

       la_matFree(H,Subscripts,NestingLevel);
       la_vecFree(ZeroSpace);
       la_vecFree(LocalizedIterationSpace);
    }

  void GetConstants(AST_INDEX node1,la_vect C);

  void SetLocalizedIterationSpace(la_vect LIS)
    {
     int i;

       la_vecCopy(LIS,LocalizedIterationSpace,NestingLevel);
    }

  void PrintH()
  {
    int i,j;

      for (i = 0; i < Subscripts; i++)
 {
   for (j = 0; j < NestingLevel; j++)
     printf("\t%d",H[i][j]);
   printf("\n");
 }
  }

  void PrintLIS()
  {
    int i;

      for (i = 0; i< NestingLevel; i++)
 printf("\t%d",LocalizedIterationSpace[i]);
      printf("\n");
  }

  Boolean IsVectorSpaceInLIS(la_vect NS,la_vect Sol);
  Boolean SingleNodeHasGroupSpatialReuse(AST_INDEX node1);
  Boolean SingleNodeHasGroupTemporalReuse(AST_INDEX node1);
  Boolean NodesHaveGroupSpatialReuse(AST_INDEX node1, AST_INDEX node2);
  Boolean NodesHaveGroupTemporalReuse(AST_INDEX node1, AST_INDEX node2);
  Boolean SingleNodeHasSelfTemporalReuse();
  Boolean SingleNodeHasSelfSpatialReuse();
  Boolean SameUniformlyGeneratedSet(AST_INDEX node,la_matrix nodeH);
  void InterchangeRows(int *IV);
  la_vect getLocal() { return LocalizedIterationSpace;}
  int getNestl() { return NestingLevel;}
  int getSubs() { return Subscripts;}
  char* getName() { return name; }
  la_matrix getH() { return H;}
  void PrintOut();
  Boolean getUniform() {return Uniform;}
 };


class UGSEntryIterator : public GenericListIter {

  public:
    UGSEntryIterator(UniformlyGeneratedSetsEntry& UGSEntry) :
      GenericListIter(UGSEntry)
      {
      };
    UGSEntryIterator(UniformlyGeneratedSetsEntry* UGSEntry) :
      GenericListIter(UGSEntry)
      {
      };

   AST_INDEX operator() ();

};



class UniformlyGeneratedSets : public GenericList {
  int NestingLevel;
  char **IndexVars;
  int *LocalizedIterationSpace;

  UniformlyGeneratedSetsEntry *GetUniformlyGeneratedSet(AST_INDEX node);
  UniformlyGeneratedSetsEntry *GetUniformlyGeneratedSet(AST_INDEX node, la_matrix NodeH);
  void Append(la_matrix nodeH, AST_INDEX node, int NumSubs, Boolean uniform );
  int GetIndex(char *ivar);
  void ComputeH(AST_INDEX node,la_matrix nodeH,Boolean& uniform,AST_INDEX expr,
  int SubPos);
  void GetH(AST_INDEX node,la_matrix nodeH,Boolean& uniform);


public:
  UniformlyGeneratedSets(AST_INDEX loop,int NL,char **IV,la_vect LIS = 
# 158 "../../../libs/Memoria/include/UniformlyGeneratedSets.h" 3 4
                                                                      __null
# 158 "../../../libs/Memoria/include/UniformlyGeneratedSets.h"
                                                                          ) ;
  ~UniformlyGeneratedSets()
    { delete IndexVars;
      la_vecFree(LocalizedIterationSpace);
    };

  void AddNode(AST_INDEX node);
  Boolean NodeHasGroupSpatialReuse(AST_INDEX node);
  Boolean NodeHasGroupTemporalReuse(AST_INDEX node);
  Boolean NodeHasSelfTemporalReuse(AST_INDEX node);
  Boolean NodeHasSelfSpatialReuse(AST_INDEX node);

  void SetLocalizedIterationSpace(la_vect LIS)
    {
     int i;
     UniformlyGeneratedSetsEntry *UGSEntry;

       la_vecCopy(LIS,LocalizedIterationSpace,NestingLevel);
       for (GenericListIter UGSIter(*this);
     UGSEntry = (UniformlyGeneratedSetsEntry*)UGSIter();)
         UGSEntry->SetLocalizedIterationSpace(LIS);
    }
 };

class UGSIterator : public GenericListIter {

  public:
    UGSIterator(UniformlyGeneratedSets& UGS) : GenericListIter(UGS)
      {
      };
    UGSIterator(UniformlyGeneratedSets* UGS) : GenericListIter(UGS)
      {
      };

   UniformlyGeneratedSetsEntry* operator() ();


};
# 44 "../../../libs/Memoria/include/mem_util.h" 2

typedef struct loop_struct model_loop;
typedef enum {UNDEFINED,NONE,SELF_TEMPORAL,GROUP_TEMPORAL,SELF_SPATIAL,
       GROUP_SPATIAL,SELF_TEMPORAL_CACHE,GROUP_TEMPORAL_CACHE} LocalityType;

typedef struct list_struct *listp;

struct list_struct {
  EDGE_INDEX edge;
  listp prev,
             next;
 };

typedef struct list_node {
  listp head,
        tail,
        ptail;
 } listnode;

typedef struct copyinfotype {
  int val;
  arena_type *ar;
  SymDescriptor symtab;
 } copy_info_type;

typedef struct StatsStruct {
  PedInfo ped;
  float flops,
          mops;
  int level;
  Boolean UseCache;
  model_loop *loop_data;
  int loop;
  UniformlyGeneratedSets *UGS;
 } StatsInfoType;

typedef struct cycletype {
  float MemCycles;
  float FlopCycles;
  model_loop *loop_data;
  int loop;
  UniformlyGeneratedSets *UGS;
  PedInfo ped;
 } CycleInfoType;
# 100 "../../../libs/Memoria/include/mem_util.h"
extern "C" AST_INDEX ut_get_stmt (AST_INDEX node);
extern "C" AST_INDEX ut_GetSubprogramStmtList (AST_INDEX stmt);
extern "C" AST_INDEX ut_tree_copy_with_type (AST_INDEX node,int index, arena_type *ar)
                     ;

extern "C" int floor_ab (int a, int b);
extern "C" int ceil_ab (int a, int b);
extern "C" int mod (int a,int b);
extern "C" int gcd (int a,int b);
extern "C" int lcm (int a,int b);
extern "C" AST_INDEX ut_gen_ident (SymDescriptor symtab, char *name,int asttype)
                             ;
extern "C" int ut_check_div (AST_INDEX node,Generic contains_div);

extern "C" void ut_update_bounds (AST_INDEX loop,AST_INDEX copy, int val)
                    ;
extern "C" int ut_init_copies (AST_INDEX node, Generic copy_info)
                          ;

extern "C" int ut_ComputeBalance (AST_INDEX node, StatsInfoType *Stats)
                                ;
extern "C" LocalityType ut_GetReferenceType (AST_INDEX node, model_loop *loop_data, int loop, PedInfo ped, UniformlyGeneratedSets *UGS)



                                     ;
extern "C" void ut_GetSubscriptText (AST_INDEX Node, char *Text, SymDescriptor symtab = (SymDescriptor) 
# 126 "../../../libs/Memoria/include/mem_util.h" 3 4
__null
# 126 "../../../libs/Memoria/include/mem_util.h"
)
                                                                         ;

extern "C" int ut_change_logical_to_block_if (AST_INDEX stmt, int level, int dummy)

                         ;
extern "C" int ut_CyclesPerIteration (AST_INDEX Node, model_loop *loop_data, int loop, UniformlyGeneratedSets *UGS, PedInfo ped)



                      ;

extern "C" int ut_LoopSize (AST_INDEX Node, PedInfo ped);

extern "C" void ut_PrintDependences (AST_INDEX Node, PedInfo ped);

extern "C" int ut_GetMIVDependenceDistance (DG_Edge& Edge);
# 46 "../../../libs/Memoria/include/mh.h" 2



extern Boolean mc_extended_cache;
extern int PartitionUnrollAmount;



typedef enum {COMPLEX,RECT,TRI_UL,TRI_LL,TRI_UR,TRI_LR,TRAP,RHOM,MULT}
             loop_shape_type;

typedef enum {FN_MIN,FN_MAX,FN_BOTH} trap_fn_type;

typedef struct heaptype {
  int index,
      stride;
 } heap_type;

typedef struct loop_struct model_loop;
struct loop_struct {
  AST_INDEX node,
                  surround_node,
                  rhom_const,
                  tri_const;
  int parent,
                  inner_loop,
                  next_loop,
                  tri_loop,
                  tri_coeff,
                  trap_loop,
                  level,
                  max,
                  count,
                  stride,
                  scalar_array_refs,
           val,
                  registers,
                  inner_stmts,
                  outer_stmts,
                  CarriedDependences;
  float rho,
                  L_L,
    P_L,
                  initial_L_L,
                  initial_P_L,
                  ibalance,
                  fbalance;
  Boolean stmts,
                  interchange,
                  DependencesHandled,
                  transform,
                  distribute,
                  expand,
                  unroll,
    reversed,
                  reduction;
  loop_shape_type type;
  trap_fn_type trap_fn;
  UtilList *split_list;
  heap_type *heap;
  int *unroll_vector;
  int MemoryOrder[20],
                  FinalOrder[20],
                  OutermostLvl,
                  DistributeNumber;
  FloatList InvariantCostList,
                  SpatialCostList,
                  OtherSpatialCostList,
                  TemporalCostList,
                  NoneCostList;
  UtilList *GroupList;
  Set PreventLvl[20];
  Boolean NoImprovement,
                  Distribute,
                  Interchange;
  Boolean InterlockCausedUnroll;
  UniformlyGeneratedSets *UGS;
 };


typedef struct subscriptinfotype {
  int surrounding_do;
  AST_INDEX surround_node;
  Boolean is_scalar[3],
            prev_sclr[3],
            uses_regs,
            MIV,
            visited,
            eliminated;
  AST_INDEX *copies;
  AST_INDEX original;
  UtilNode *lnode;
  Boolean store;
  LocalityType Locality;
  int GroupTemporalDistance;
  int GroupSpatialDistance;
 } subscript_info_type;

typedef struct stmtinfotype {
  int stmt_num;
  int loop_num;
  int surrounding_do;
  AST_INDEX surround_node;
  int level;
  Boolean pre_loop;
 } stmt_info_type;

typedef struct preinfotype {
  int stmt_num,
          loop_num,
          surrounding_do;
  AST_INDEX surround_node;
  Boolean abort;
  PedInfo ped;
  SymDescriptor symtab;
  arena_type *ar;
 } pre_info_type;
# 13 "annotate.C" 2

# 1 "../../../libs/frontEnd/include/walk.h" 1
# 15 "annotate.C" 2

# 1 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/pt_util.h" 1
# 16 "../../../libs/graphicInterface/cmdProcs/paraScopeEditor/include/pt_util.h"
struct pt_ref_params;
typedef struct pt_ref_params Pt_ref_params;

extern "C" char * ast2str (PedInfo ped, AST_INDEX ast);
extern "C" char * pt_get_stmt_text (PedInfo ped, AST_INDEX num);

extern "C" void pt_get_loop_bounds (AST_INDEX stmt, AST_INDEX *ivar, AST_INDEX *lbound, AST_INDEX *ubound, AST_INDEX *stepsize)


                                ;
extern "C" Boolean pt_is_loop_with_inductive (AST_INDEX loop_node);
extern "C" Boolean pt_loop_is_normal (AST_INDEX loop_node);
extern "C" Boolean pt_loop_get_count (AST_INDEX loop_node, int *iter_cnt, AST_INDEX *iter_cnt_node, Boolean *loop_normal_flag)


                                     ;
extern "C" void pt_flip_nodes (AST_INDEX node1,AST_INDEX node2);
extern "C" void pt_zero_var (AST_INDEX expr,char *var);
extern "C" void pt_check_min_max (AST_INDEX node,char *var, AST_INDEX expr)
                        ;
extern "C" int pt_convert_to_int (char *str);
extern "C" void pt_itoa (int n,char *a);
extern "C" AST_INDEX pt_gen_comment (char *str);
extern "C" AST_INDEX pt_gen_const (char *str);
extern "C" AST_INDEX pt_gen_ident (char *str);
extern "C" AST_INDEX pt_gen_label_ref (char *str);
extern "C" AST_INDEX pt_gen_label_def (char *str);
extern "C" AST_INDEX pt_gen_int (int num);
extern "C" AST_INDEX pt_gen_func1 (char *fn,AST_INDEX node1);
extern "C" AST_INDEX pt_gen_add (AST_INDEX node1,AST_INDEX node2);
extern "C" AST_INDEX pt_gen_sub (AST_INDEX node1,AST_INDEX node2);
extern "C" AST_INDEX pt_gen_mul (AST_INDEX node1,AST_INDEX node2);
extern "C" AST_INDEX pt_gen_div (AST_INDEX node1,AST_INDEX node2);
extern "C" AST_INDEX pt_gen_mod (AST_INDEX node1,AST_INDEX node2);
extern "C" AST_INDEX pt_gen_call (char * name,AST_INDEX args);
extern "C" AST_INDEX pt_gen_invoke (char * name,AST_INDEX args);
extern "C" Boolean pt_comp_inv_name (AST_INDEX node,char *name);
extern "C" void pt_tree_replace (AST_INDEX old_node, AST_INDEX new_node)
                            ;
extern "C" AST_INDEX pt_add_const (AST_INDEX expr,int constant);
extern "C" void pt_fold_term (AST_INDEX exprin, AST_INDEX *exprout, int *constout)
                    ;
extern "C" AST_INDEX pt_del_unary_minus (AST_INDEX expr);
extern "C" AST_INDEX pt_simplify_expr (AST_INDEX expr);
extern "C" AST_INDEX pt_find_var_node (AST_INDEX expr, char *var);
extern "C" Boolean pt_find_var (AST_INDEX expr,char *var);
extern "C" void pt_sep_linear (AST_INDEX expr,char *var,Boolean *lin, AST_INDEX *factor, AST_INDEX *constant)

                           ;
extern "C" void pt_separate_linear (AST_INDEX expr,char *var, Boolean *lin, AST_INDEX *factor, AST_INDEX *constant)

                                ;
extern "C" void pt_get_coeff (AST_INDEX expr,char *var,Boolean *lin, int *coeff)
                 ;
extern "C" Boolean pt_expr_equal (AST_INDEX expr1, AST_INDEX expr2);
extern "C" int pt_perf_nest (AST_INDEX node);
extern "C" void pt_clear_info (PedInfo ped,AST_INDEX tree);
extern "C" void pt_var_replace (AST_INDEX tree,char *var, AST_INDEX new_expr)
                          ;
extern "C" void pt_var_add (AST_INDEX tree,char*var,int value);
extern "C" void pt_var_mul (AST_INDEX tree,char*var,int value);
extern "C" Boolean pt_eval (AST_INDEX node,int *iptr);
extern "C" AST_INDEX pt_simplify_node (AST_INDEX node);
extern "C" Pt_ref_params* pt_refs (AST_INDEX tree, PedInfo ped);

extern "C" void pt_insert_before (AST_INDEX target, AST_INDEX inject);
extern "C" void pt_insert_after (AST_INDEX target, AST_INDEX inject);
extern "C" int pt_unroll_estimate (PedInfo ped, Boolean jam);
extern "C" void pt_unroll_jam (PedInfo ped, char *degree, Boolean jam);
extern "C" void pt_get_constant (AST_INDEX expr, int *constant);
# 17 "annotate.C" 2

# 1 "../../../libs/Memoria/annotate/annotate.h" 1
# 12 "../../../libs/Memoria/annotate/annotate.h"
# 1 "../../../libs/Memoria/annotate/DirectivesInclude.h" 1
# 15 "../../../libs/Memoria/annotate/DirectivesInclude.h"
typedef enum {PrefetchInstruction,
       FlushInstruction,
       Dependence,
       Cluster} Instruction;

typedef struct DirectiveStruct {
  Instruction Instr;
  AST_INDEX Subscript;
  UtilList *DependenceList;
  int DirectiveNumber;
  int StmtNumber;
  int SpecialLoadStride;
  AST_INDEX AddressLeader;
  AST_INDEX FirstInLoop;
  int Offset;
  int Cluster;
 } Directive;

extern "C" Boolean a2i_string_parse (char *, Directive *, SymDescriptor)

                      ;
# 13 "../../../libs/Memoria/annotate/annotate.h" 2

typedef struct CallInfoTypeStruct {
  AST_INDEX Stmt;
  char *routine;
  FortTextTree ftt;
  char CacheRoutine[15];
  SymDescriptor symtab;
 } CallInfoType;
# 19 "annotate.C" 2






extern "C" void message (char *str);

static int AddCall(AST_INDEX node,
     CallInfoType *CallInfo)






  {
   AST_INDEX ArgList,Stmt,NewStmt;
   AST_INDEX node1;
   char TextConstant[80];

     if ((ast_get_node_type(node) == 88))
       {
 ArgList = list_create(tree_copy_with_type(node));
 NewStmt = pt_gen_call(CallInfo->CacheRoutine,ArgList);
 if ((ast_get_node_type(CallInfo->Stmt) == 48))
   Stmt = tree_out(CallInfo->Stmt);
 else
   Stmt = CallInfo->Stmt;
 if (ast_get_son_n(Stmt, 1) != ast_null_node)
   {
    ast_put_son_n(NewStmt,1,tree_copy_with_type(ast_get_son_n(Stmt, 1)))
                                                   ;
    pt_tree_replace(ast_get_son_n(Stmt, 1),ast_null_node);
   }
 list_insert_before(Stmt,NewStmt);
       }
     return(1);
  }

static void ConvertToCall(AST_INDEX stmt,
     SymDescriptor symtab)

  {
   Directive Dir;
   char *Function;
   AST_INDEX Call;

     if (a2i_string_parse(string_table_get_text(ast_get_symbol(ast_get_son_n(stmt,1))),&Dir,symtab))
       {
 if (Dir.Instr == PrefetchInstruction)
   Function = "prefetch_line";
 else
   Function = "dead_line";
 Call = pt_gen_call(Function,Dir.Subscript);
 pt_tree_replace(stmt,Call);
       }
  }


static int InsertCacheCalls(AST_INDEX stmt,
       int level,
       CallInfoType *CallInfo)






  {

     CallInfo->Stmt = stmt;
     strcpy(CallInfo->CacheRoutine,"cache_load");
     if ((ast_get_node_type(stmt) == 33))
       {
 walk_expression(ast_get_son_n(stmt,3),
# 94 "annotate.C" 3 4
                                                __null
# 94 "annotate.C"
                                                      ,
   (WK_EXPR_CLBACK)AddCall,(Generic)CallInfo);
 strcpy(CallInfo->CacheRoutine,"cache_store");
 walk_expression(ast_get_son_n(stmt,2),
# 97 "annotate.C" 3 4
                                                __null
# 97 "annotate.C"
                                                      ,
   (WK_EXPR_CLBACK)AddCall,(Generic)CallInfo);
       }
     else if ((ast_get_node_type(stmt) == 48))
       walk_expression(ast_get_son_n(stmt,2),
# 101 "annotate.C" 3 4
                                                 __null
# 101 "annotate.C"
                                                       ,(WK_EXPR_CLBACK)AddCall,
         (Generic)CallInfo);
     else if ((ast_get_node_type(stmt) == 59))
       walk_expression(ast_get_son_n(stmt,3),
# 104 "annotate.C" 3 4
                                                         __null
# 104 "annotate.C"
                                                               ,
         (WK_EXPR_CLBACK)AddCall,(Generic)CallInfo);
     else if ((ast_get_node_type(stmt) == 52))
       walk_expression(ast_get_son_n(stmt,3),
# 107 "annotate.C" 3 4
                                                         __null
# 107 "annotate.C"
                                                               ,
         (WK_EXPR_CLBACK)AddCall,(Generic)CallInfo);
     else if ((ast_get_node_type(stmt) == 53))
       {
 strcpy(CallInfo->CacheRoutine,"cache_store");
 walk_expression(ast_get_son_n(stmt,3),
# 112 "annotate.C" 3 4
                                                        __null
# 112 "annotate.C"
                                                              ,
   (WK_EXPR_CLBACK)AddCall,(Generic)CallInfo);
       }
     else if ((ast_get_node_type(stmt) == 54))
       {
 strcpy(CallInfo->CacheRoutine,"cache_store");
 walk_expression(ast_get_son_n(stmt,3),
# 118 "annotate.C" 3 4
                                                __null
# 118 "annotate.C"
                                                      ,
   (WK_EXPR_CLBACK)AddCall,(Generic)CallInfo);
       }
     else if ((ast_get_node_type(stmt) == 47))
       walk_expression(ast_get_son_n(stmt,2),
# 122 "annotate.C" 3 4
                                                      __null
# 122 "annotate.C"
                                                            ,
         (WK_EXPR_CLBACK)AddCall,(Generic)CallInfo);
     else if ((ast_get_node_type(stmt) == 45))
       walk_expression(ast_get_son_n(stmt,2),
# 125 "annotate.C" 3 4
                                                         __null
# 125 "annotate.C"
                                                               ,
         (WK_EXPR_CLBACK)AddCall,(Generic)CallInfo);
     else if ((ast_get_node_type(stmt) == 39))
       walk_expression(ast_get_son_n(stmt,4),
# 128 "annotate.C" 3 4
                                               __null
# 128 "annotate.C"
                                                     ,(WK_EXPR_CLBACK)AddCall,
         (Generic)CallInfo);
     else if ((ast_get_node_type(stmt) == 46) || (ast_get_node_type(stmt) == 38) || (ast_get_node_type(stmt) == 44) ||
       (ast_get_node_type(stmt) == 43) || (ast_get_node_type(stmt) == 36) ||
       (ast_get_node_type(stmt) == 31) || (ast_get_node_type(stmt) == 58));
     else if ((ast_get_node_type(stmt) == 25))
       {
 ConvertToCall(stmt,CallInfo->symtab);
 return(5);
       }
     else if (is_smp_executable_stmt(stmt))
       {
 char errmsg[30];

 if (!(ast_get_node_type(stmt) == 55))
   {
    sprintf(errmsg,"Statement not handled %d\n",ast_get_node_type(stmt));
    message(errmsg);
   }
       }
     return(1);
  }

void memory_AnnotateWithCacheCalls(AST_INDEX root,
       int level,
       char *routine,
       FortTextTree ftt,
       SymDescriptor symtab)






  {
   CallInfoType CallInfo;

     CallInfo.routine = routine;
     CallInfo.symtab = symtab;
     walk_statements(root,level,(WK_STMT_CLBACK)InsertCacheCalls,
# 167 "annotate.C" 3 4
                                                                __null
# 167 "annotate.C"
                                                                      ,
       (Generic)&CallInfo);
  }
Makefile:78: recipe for target '../Memoria-Linux-i686-g.a(annotate.o)' failed
