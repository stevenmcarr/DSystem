BEGIN {
	print "/* This include file is generated by a bogus awk script... */"
	print "/* Try regenerating it with 'awk -f astrec.awk astrec.def' */"
	print ""
	print "#ifndef astrec_h"
	print "#define astrec_h"
	print ""
	print "#define NT(node)		ast_get_node_type(node)"
	print ""
	print ""
      }
/struct/{
	next
	}
/"/{
        name = substr($1,2,length($1)-2)
        printf ("#define is_");
        for( i = 1; i <= length(name); i++ )
        {
           l = substr(name, i, 1);
           if (l == "A")
             printf("a");
           else if (l == "B")
             printf("b");
           else if (l == "C")
             printf("c");
           else if (l == "D")
             printf("d");
           else if (l == "E")
             printf("e");
           else if (l == "F")
             printf("f");
           else if (l == "G")
             printf("g");
           else if (l == "H")
             printf("h");
           else if (l == "I")
             printf("i");
           else if (l == "J")
             printf("j");
           else if (l == "K")
             printf("k");
           else if (l == "L")
             printf("l");
           else if (l == "M")
             printf("m");
           else if (l == "N")
             printf("n");
           else if (l == "O")
             printf("o");
           else if (l == "P")
             printf("p");
           else if (l == "Q")
             printf("q");
           else if (l == "R")
             printf("r");
           else if (l == "S")
             printf("s");
           else if (l == "T")
             printf("t");
           else if (l == "U")
             printf("u");
           else if (l == "V")
             printf("v");
           else if (l == "W")
             printf("w");
           else if (l == "X")
             printf("x");
           else if (l == "Y")
             printf("y");
           else if (l == "Z")
             printf("z");
           else
             printf("%s", l);
        }
	printf ("(node)\t(NT(node) == GEN_%s)\n", name)
	next
      }
/\/\*/{
	next
      }
/{/{
       next
      }
/}/{
       next
      }
END   {
	print ""
	print "#endif"
      }
