# $Id: Makeinclude.config,v 1.19 2001/10/12 19:17:40 carr Exp $
###########################################################################
#
# File:
#   Makeinclude.config
#
# Authors: 
#    Kevin Cureton
#
# Date:
#    August 1994
#
# Description:
#    This file contains correct paths for the tools which are used to
#    compile the D System Programming Environment.
#
###########################################################################
#
#          Copyright 1992, 1993, 1994  Rice University
#                     All Rights Reserved
#
###########################################################################

###########################################################################
# Architecture and site dependent configuration for the three flavors of
# operating system that are supported:  SunOS-5.x, OSF1.
###########################################################################

#-----------------------------------------------------------------
# Start OSF1 configuration 
#-----------------------------------------------------------------
ifeq "$(DSYSTEM_OS)" "OSF1"

#  Fortran compiler
FC = /usr/bin/f77

#  Non-ANSI C compiler
#CC = /usr/bin/cc  
CC = /usr/local/gcc2.8.1/bin/gcc 

#  Strict ANSI-C compiler
#ACC = /usr/bin/cc -std1
ACC = /usr/local/gcc2.8.1/bin/gcc -ansi -Wmissing-prototypes


#  C++ compiler
#CXX = /usr/bin/cxx -writable_strings -oldcxx
CXX = /usr/local/gcc2.8.1/bin/g++ 

#  C++ library to use for prelinking
#LCXX = -lcxx

# Archive command
AR = /usr/bin/ar
ARFLAGS = r

#  remove command
RM = /bin/rm -f

#  move command
MV = /bin/mv -f

#  Echo command
ECHO = /usr/bin/echo 

#  Command used to strip -g libraries
STRIP = ld -r -x

#  Extra flags for required for the specific architecture
ARCH_CPPFLAGS = -DOSF1 -DLONG_POINTER -Wa,-w

# Directories for X includes and archives
X11_LIB_DIR = /usr/lib
X11_INCLUDE_DIR = /usr/include/X11

#  Libraries needed for X-Windows
X11_LIB = -L$(X11_LIB_DIR) -lX11

#  Libraries need for Fortran
FORT_LIB = -lf77

#  Specific libraries needed by the architecture
#ARCH_LIBS = -lbsd /DSystem/lib/realpath-OSF1.o 

LDFLAGS := $(LDFLAGS) -taso

AWK = gawk

FLEX = /usr/local/bin/flex
BISON = /usr/local/bin/bison
endif # "$(DSYSTEM_OS)" "OSF1"

#-----------------------------------------------------------------
# Start Linux-i686 configuration
#-----------------------------------------------------------------
ifeq "$(DSYSTEM_OS)" "Linux-i686"

#  Non-ANSI C compiler
CC = /usr/bin/gcc

#  Strict ANSI-C compiler
ACC = /usr/bin/gcc -ansi -Wmissing-prototypes

#  C++ compiler
CXX = /usr/bin/g++ -traditional -fpermissive

#  C++ library to use for prelinking
LCXX = -lg++

# Archive command
AR = /usr/bin/ar
ARFLAGS = r

#  remove command
RM = /bin/rm -f

#  move command
MV = /bin/mv -f

#  Echo command
ECHO = echo

#  Command used to strip -g libraries
STRIP = ld -r -x

#  Extra flags for required for the specific architecture
ARCH_CPPFLAGS = -DLINUX 

# Directories for X includes and archives
X11_LIB_DIR = /usr/lib
X11_INCLUDE_DIR = /usr/include/X11

#  Libraries needed for X-Windows
X11_LIB = -L$(X11_LIB_DIR) -lX11

#  Specific libraries needed by the architecture
ARCH_LIBS =

AWK = /usr/bin/gawk

FLEX = /usr/bin/flex
BISON = /usr/bin/bison
endif # "$(DSYSTEM_OS)" "Linux-i686"

#-----------------------------------------------------------------
# Start Linux-alpha configuration
#-----------------------------------------------------------------
ifeq "$(DSYSTEM_OS)" "Linux-alpha"

#  Non-ANSI C compiler
CC = /usr/bin/cc

#  Strict ANSI-C compiler
ACC = /usr/bin/cc -ansi -Wmissing-prototypes

#  C++ compiler
CXX = /usr/bin/c++ -traditional

#  C++ library to use for prelinking
LCXX = -lg++

# Archive command
AR = /usr/bin/ar
ARFLAGS = r

#  remove command
RM = /bin/rm -f

#  move command
MV = /bin/mv -f

#  Echo command
ECHO = echo

#  Command used to strip -g libraries
STRIP = ld -r -x

#  Extra flags for required for the specific architecture
ARCH_CPPFLAGS = -DLINUX -DLINUX_ALPHA -DLONG_POINTER

# Directories for X includes and archives
X11_LIB_DIR = /usr/lib
X11_INCLUDE_DIR = /usr/include/X11

#  Libraries needed for X-Windows
X11_LIB = -L$(X11_LIB_DIR) -lX11

#  Specific libraries needed by the architecture
ARCH_LIBS =

LDFLAGS := $(LDFLAGS) -Wl,-T,/DSystem/tools/develop/bin/Linux-alpha/32bithack/32bit.link

AWK = /usr/bin/gawk

FLEX = /usr/bin/flex
BISON = /usr/bin/bison

LOADERCONFIG = /DSystem/tools/develop/bin/Linux-alpha/32bithack/taso

endif # "$(DSYSTEM_OS)" "Linux-alpha"

#-----------------------------------------------------------------
# Start SunOS-5.x (Solaris 2.x) configuration
#-----------------------------------------------------------------

ifeq "$(DSYSTEM_OS)" "SunOS-5.x"

#  Fortran compiler
FC = /opt/sfw/bin/g77 

#  Non-ANSI C compiler (SC2.0)
CC = /opt/sfw/bin/gcc

#  Strict ANSI-C compiler (SC2.0)
ACC = /opt/sfw/bin/gcc -ansi -Wmissing-prototypes

#  C++ compiler (SC3.0)

CXX = /opt/sfw/bin/g++ -traditional -fpermissive

#  C++ library to use for prelinking
LCXX = 

# Archive command
AR = /usr/ccs/bin/ar
ARFLAGS = r

#  remove command
RM = /bin/rm -f

#  move command
MV = /bin/mv -f

#  Echo command
ECHO = /usr/bin/echo 

#  Command used to strip -g libraries
STRIP = strip -x

#  Extra flags for required for the specific architecture
ARCH_CPPFLAGS = -DSOLARIS -w

# Directories for X includes and archives
X11_LIB_DIR = /usr/local/X11R6/lib
X11_INCLUDE_DIR = /usr/local/X11R6/include

#  Libraries needed for X-Windows
X11_LIB = -L$(X11_LIB_DIR) -lX11

#  Libraries need for Fortran
FORT_LIB = -lg77

#  Specific libraries needed by the architecture
ARCH_LIBS = -L/usr/ucblib -lucb

LDFLAGS :=  -static $(LDFLAGS)

AWK = awk
FLEX = /opt/sfw/bin/flex
BISON = /opt/sfw/bin/bison
endif # "$(DSYSTEM_OS)" "SunOS-5.x"

###########################################################################
# Tools and scripts used during the make.
###########################################################################

#-----------------------------------------------------------------
# path needed to locate the tools and scripts.
#-----------------------------------------------------------------
ifndef DSYSTEM_TOOLS
DSYSTEM_TOOLS = $(DSYSTEM)/tools
endif

ifndef DSYSTEM_TOOLS_DEV
DSYSTEM_TOOLS_DEV = $(DSYSTEM_TOOLS)/develop
endif

ifndef DSYSTEM_TOOLS_DEV_BIN
DSYSTEM_TOOLS_DEV_BIN = $(DSYSTEM_TOOLS_DEV)/bin
endif

ifndef DSYSTEM_TOOLS_DEV_BIN_SCRIPTS
DSYSTEM_TOOLS_DEV_BIN_SCRIPTS = $(DSYSTEM_TOOLS_DEV_BIN)/scripts
endif

ifndef DSYSTEM_TOOLS_DEV_BIN_OS
DSYSTEM_TOOLS_DEV_BIN_OS = $(DSYSTEM_TOOLS_DEV_BIN)/$(DSYSTEM_OS)
endif

#-----------------------------------------------------------------
# the actual locations of tools and scripts used during the make.
#-----------------------------------------------------------------

#  perl
#     be sure to provide the needed softlink in the DSYSTEM_TOOLS_DEV_BIN_OS
#     directory for perl.
PERL = $(DSYSTEM_TOOLS_DEV_BIN_OS)/perl/perl

#  lint
LINT = $(DSYSTEM_TOOLS_DEV_BIN)/dlint 

#  make
MAKE = $(DSYSTEM_TOOLS_DEV_BIN)/dmake 

#-----------------------------------------------------------------
# perl scripts that are used during the make.
#-----------------------------------------------------------------

#  used to compute dependences
DEPVERIFY = $(PERL) $(DSYSTEM_TOOLS_DEV_BIN_SCRIPTS)/DependenceVerify

#  the filter for the -E output of the compilers to produce the 
#  .d_* files
DEPFILTER = $(PERL) $(DSYSTEM_TOOLS_DEV_BIN_SCRIPTS)/DependenceFilter

#  check the dependence files to see if it is neccessary to 
#  recompile a file which is in the DSYSTEM_SRC directory
DEPCHECK = $(PERL) $(DSYSTEM_TOOLS_DEV_BIN_SCRIPTS)/DependenceCheck

# get info about the DSYSTEM_PVT directory
DSYS_PVT_STATUS = $(PERL) $(DSYSTEM_TOOLS_DEV_BIN_SCRIPTS)/DSysPvtStatus

# make the symbolic links in the bin directories
MAKE_BIN_LINKS = $(PERL) $(DSYSTEM_TOOLS_DEV_BIN_SCRIPTS)/MakeBinLinks

###########################################################################
# GNU specific stuff for those who want to use gcc and g++ instead of a 
# the OS resident compilers
#
#    Be sure to provide the need softlink in the 
#    $(DSYSTEM)/tools/develop/bin/$(DSYSTEM_OS) directory that points to
#    the directory where gcc and g++ have been installed.
#
###########################################################################

#-----------------------------------------------------------------
# define the version of gcc to be used and the processor/OS type
# as defined by GNU
#-----------------------------------------------------------------
ifeq  "$(DSYSTEM_OS)" "OSF1"
GCC_VERSION = 2.8.1
GCC_TYPE = alphaev5-dec-osf4.0d
DSYSTEM_GCC_DIR = /usr/local/gcc2.8.1
DSYSTEM_GCC_LIB = /usr/local/gcc2.8.1/lib/gcc-lib/$(GCC_TYPE)/$(GCC_VERSION)
endif # "$(DSYSTEM_OS)" "OSF1"

ifeq  "$(DSYSTEM_OS)" "SunOS-5.x"
GCC_VERSION = 2.7.2.3
GCC_TYPE = sparc-sun-solaris2.8
DSYSTEM_GCC_DIR = /opt/gcc-2.7.2
DSYSTEM_GCC_LIB = /opt/gcc-2.7.2/lib/gcc-lib/$(GCC_TYPE)/$(GCC_VERSION)
endif # "$(DSYSTEM_OS)" "SunOS-5.x"

ifeq  "$(DSYSTEM_OS)" "Linux-i686"
GCC_VERSION = 2.96
GCC_TYPE = i386-redhat-linux
DSYSTEM_GCC_DIR = /usr
DSYSTEM_GCC_LIB = /usr/lib/gcc-lib/$(GCC_TYPE)/$(GCC_VERSION)
endif # "$(DSYSTEM_OS)" "Linux-i686"

ifeq  "$(DSYSTEM_OS)" "Linux-alpha"
GCC_VERSION = egcs-2.91.66
GCC_TYPE = alpha-unknown-linux
DSYSTEM_GCC_DIR = /usr
DSYSTEM_GCC_LIB = /usr/lib/gcc-lib/$(GCC_TYPE)/$(GCC_VERSION)
endif # "$(DSYSTEM_OS)" "Linux-alpha"

#-----------------------------------------------------------------
# Directory of machine-specific gnu tools
#-----------------------------------------------------------------

#-----------------------------------------------------------------
# configuration of include paths used by the preprocessor for gcc 
# and g++ 
#-----------------------------------------------------------------
C_INCLUDE_PATH = $(DSYSTEM_GCC_LIB)/include:/usr/include
CPLUS_INCLUDE_PATH = $(DSYSTEM_GCC_DIR)/include/g++-3:$(DSYSTEM_GCC_LIB)/include:/usr/include
GCC_INCLUDE_DIR = $(DSYSTEM_GCC_LIB)

#-----------------------------------------------------------------
# compilers, dependence generators, and dependence filters for 
# GCC and G++
#-----------------------------------------------------------------
GCC	= $(DSYSTEM_GCC_DIR)/bin/gcc
GXX = $(DSYSTEM_GCC_DIR)/bin/g++

#-----------------------------------------------------------------
# gnu libraries for C++
#-----------------------------------------------------------------
LGXX    = -lgcc -lg++
